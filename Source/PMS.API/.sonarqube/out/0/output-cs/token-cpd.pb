ù
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\CollegeController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[		 
Route		 
(		 
$str		 
)		 
]		  
public

 
class

 
CollegeController

 
:

  
ControllerBase

! /
{ 
private 
readonly 
ILogger 
_logger $
;$ %
public 

CollegeController 
( 
ILogger $
<$ %
CollegeController% 6
>6 7
logger8 >
)> ?
{ 
_logger 
= 
logger 
; 
} 
private 
readonly 
ICollegeServices %
collegeService& 4
=5 6
CollegeDataFactory7 I
.I J#
GetCollegeServiceObjectJ a
(a b
)b c
;c d
[ 
HttpGet 
] 
public 

IActionResult 
ViewColleges %
(% &
)& '
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ <
)< =
;= >
return 
Ok 
( 
collegeService $
.$ %
ViewColleges% 1
(1 2
)2 3
)3 4
;4 5
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$"  
$str  A
{A B
	exceptionB K
.K L
MessageL S
}S T
{T U
	exceptionU ^
.^ _

StackTrace_ i
}i j
"j k
)k l
;l m
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
}!! 	
}"" 
}$$ À
]C:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\DesignationController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 

(
 
$str "
)" #
]# $
public		 
class		 !
DesignationController		 "
:		# $
ControllerBase		% 3
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 
!
DesignationController  
(  !
ILogger! (
<( )!
DesignationController) >
>> ?
logger@ F
)F G
{ 
_logger 
= 
logger 
; 
} 
private 
readonly  
IDesignationServices )
DesignationService* <
== >"
DesignationDataFactory? U
.U V'
GetDesignationServiceObjectV q
(q r
)r s
;s t
[ 
HttpGet 
] 
public 

IActionResult 
ViewDesignations )
() *
)* +
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ @
)@ A
;A B
return 
Ok 
( 
DesignationService (
.( )
ViewDesignations) 9
(9 :
): ;
); <
;< =
} 	
catch	 
( 
	Exception 
	exception #
)# $
{ 	
_logger 
. 
LogError 
( 
$"  
$str  I
{I J
	exceptionJ S
.S T
MessageT [
}[ \
{\ ]
	exception] f
.f g

StackTraceg q
}q r
"r s
)s t
;t u
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" í
XC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\DomainController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
]  
public		 
class		 
DomainController		 
:		 
ControllerBase		  .
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 

DomainController 
( 
ILogger #
<# $
DomainController$ 4
>4 5
logger6 <
)< =
{ 
_logger 
= 
logger 
; 
} 
private 
readonly 
IDomainServices $
DomainService% 2
=3 4
DomainDataFactory5 F
.F G"
GetDomainServiceObjectG ]
(] ^
)^ _
;_ `
[ 
HttpGet 
] 
public 

IActionResult 
ViewDomains $
($ %
)% &
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ ;
); <
;< =
return 
Ok 
( 
DomainService #
.# $
ViewDomains$ /
(/ 0
)0 1
)1 2
;2 3
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$"  
$str  ?
{? @
	exception@ I
.I J
MessageJ Q
}Q R
{R S
	exceptionS \
.\ ]

StackTrace] g
}g h
"h i
)i j
;j k
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" „
WC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\LoginController.cs
	namespace 	
PMS_API
 
{ 
[ 
Route 

(
 
$str "
)" #
]# $
public		 

class		 
LoginController		  
:		! "

Controller		# -
{

 
private 
readonly 
ILoginService &
_loginServices' 5
;5 6
private 
readonly 
ILogger  
<  !
LoginController! 0
>0 1
_logger2 9
;9 :
public 
LoginController 
( 
ILoginService ,
loginServices- :
,: ;
ILogger< C
<C D
LoginControllerD S
>S T
loggerU [
)[ \
{ 	
_loginServices 
= 
loginServices *
;* +
_logger 
= 
logger 
; 
} 	
[ 	
HttpPost	 
( 
$str 
) 
] 
public 
IActionResult 
	AuthLogin &
(& '
string' -
Username. 6
,6 7
string8 >
password? G
)G H
{ 	
try 
{ 
var 
Result 
= 
_loginServices +
.+ ,
	AuthLogin, 5
(5 6
Username6 >
,> ?
password@ H
)H I
;I J
return 
Ok 
( 
Result  
)  !
;! "
} 
catch 
( 
ValidationException &
validationException' :
): ;
{ 
_logger 
. 
LogInformation &
(& '
$"' )
$str) G
{G H
validationExceptionH [
.[ \
Message\ c
}c d
"d e
)e f
;f g
return   

BadRequest   !
(  ! "
new  " %
{  & '
message  ( /
=  0 1
validationException  2 E
.  E F
Message  F M
}  N O
)  O P
;  P Q
}!! 
catch"" 
("" 
	Exception"" 
	exception"" &
)""& '
{## 
_logger$$ 
.$$ 
LogInformation$$ &
($$& '
$"$$' )
$str$$) G
{$$G H
	exception$$H Q
.$$Q R
Message$$R Y
}$$Y Z
"$$Z [
)$$[ \
;$$\ ]
return%% 
Problem%% 
(%% 
$str%% B
)%%B C
;%%C D
}&& 
}'' 	
})) 
}** »
VC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\MailController.cs
	namespace 	
PMS_API
 
; 
[		 
Route		 
(		 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 
class 
MailController 
: 
ControllerBase ,
{ 
private 
readonly 
ILogger 
_logger $
;$ %
private 
readonly 
IMailService !
_mailService" .
;. /
public 

MailController 
( 
IMailService &
mailService' 2
,2 3
ILogger4 ;
<; <
MailController< J
>J K
loggerL R
)R S
{ 
_mailService 
= 
mailService "
;" #
_logger 
= 
logger 
; 
} 
[ 
HttpPost 
( 
$str 
) 
] 
public 

async 
Task 
< 
IActionResult #
># $
SendMail% -
(- .
[. /
FromForm/ 7
]7 8
MailRequest8 C
requestD K
)K L
{ 
try 
{ 	
await 
_mailService 
. 
SendEmailAsync -
(- .
request. 5
,5 6
true6 :
): ;
;; <
return 
Ok 
( 
) 
; 
} 	
catch 
( 
	Exception 
	exception !
)! "
{ 	
_logger 
. 
LogError 
( 
$" 
$str 9
{9 :
	exception: C
.C D
MessageD K
}K L
{L M
	exceptionM V
.V W

StackTraceW a
}a b
"b c
)c d
;d e
return   
Problem   
(   
	exception   $
.  $ %
Message  % ,
)  , -
;  - .
}!! 	
}## 
}$$ ‘
^C:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\OrganisationController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
]  
public		 
class		 "
OrganisationController		 #
:		$ %
ControllerBase		& 4
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 
"
OrganisationController !
(! "
ILogger" )
<) *"
OrganisationController* @
>@ A
loggerB H
)H I
{ 
_logger 
= 
logger 
; 
} 
private 
readonly !
IOrganisationServices *
organisationService+ >
=? @#
OrganisationDataFactoryA X
.X Y(
GetOrganisationServiceObjectY u
(u v
)v w
;w x
[ 
HttpGet 
] 
public 

IActionResult 
ViewOrganisations *
(* +
)+ ,
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ A
)A B
;B C
return 
Ok 
( 
organisationService )
.) *
ViewOrganisations* ;
(; <
)< =
)= >
;> ?
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$" 
$str J
{J K
	exceptionK T
.T U
MessageU \
}\ ]
{] ^
	exception^ g
.g h

StackTraceh r
}r s
"s t
)t u
;u v
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" îç
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\ProfileController.cs
	namespace 	
PMS_API
 
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 "
)

" #
]

# $
public 

class 
ProfileController "
:# $

Controller% /
{ 
private 
readonly 
IProfileService (
_profileService) 8
;8 9
private 
readonly 
IMailService %
_mailService& 2
;2 3
private 
readonly 
ILogger  
_logger! (
;( )
public 
ProfileController  
(  !
IProfileService! 0
profileService1 ?
,? @
ILoggerA H
<H I
ProfileControllerI Z
>Z [
logger\ b
,b c
IMailServiced p
mailServiceq |
)| }
{ 	
_profileService 
= 
profileService ,
;, -
_logger 
= 
logger 
; 
_mailService 
= 
mailService &
;& '
} 	
[ 	
HttpPost	 
] 
public 
IActionResult 

AddProfile '
(' (
Profile( /
profile0 7
)7 8
{ 	
if 
( 
profile 
== 
null 
)  
{ 
_logger 
. 
LogError  
(  !
$str! a
)a b
;b c
return 

BadRequest !
(! "
new" %
{& '
message( /
=0 1
$str2 G
}H I
)I J
;J K
} 
try 
{ 
return   
_profileService   &
.  & '

AddProfile  ' 1
(  1 2
profile  2 9
)  9 :
?  ; <
Ok  = ?
(  ? @
new  @ C
{  D E
message  F M
=  N O
$str  P _
}  ` a
)  a b
:  c d
Problem  e l
(  l m
$str	  m ä
)
  ä ã
;
  ã å
}!! 
catch"" 
("" 
ValidationException"" &
	exception""' 0
)""0 1
{## 
_logger$$ 
.$$ 
LogInformation$$ &
($$& '
$"$$' )
$str$$) I
{$$I J
	exception$$J S
.$$S T
Message$$T [
}$$[ \
{$$\ ]
	exception$$] f
.$$f g

StackTrace$$g q
}$$q r
"$$r s
)$$s t
;$$t u
return%% 

BadRequest%% !
(%%! "
	exception%%" +
.%%+ ,
Message%%, 3
)%%3 4
;%%4 5
}&& 
catch'' 
('' 
	Exception'' 
	exception'' &
)''& '
{(( 
_logger)) 
.)) 
LogInformation)) &
())& '
$"))' )
$str))) I
{))I J
	exception))J S
.))S T
Message))T [
}))[ \
{))\ ]
	exception))] f
.))f g

StackTrace))g q
}))q r
"))r s
)))s t
;))t u
return** 
Problem** 
(** 
$str** =
)**= >
;**> ?
}++ 
},, 	
[-- 	
HttpPost--	 
]-- 
public.. 
IActionResult.. 
AddPersonalDetail.. .
(... /
PersonalDetails../ >
personalDetails..? N
)..N O
{// 	
if00 
(00 
personalDetails00 
==00  "
null00# '
)00' (
{11 
_logger22 
.22 
LogError22  
(22  !
$str22! h
)22h i
;22i j
return33 

BadRequest33 !
(33! "
new33" %
{33& '
message33( /
=330 1
$str332 N
}33O P
)33P Q
;33Q R
}44 
try55 
{66 
return77 
_profileService77 &
.77& '
AddPersonalDetail77' 8
(778 9
personalDetails779 H
)77H I
?77J K
Ok77L N
(77N O
new77O R
{77S T
message77U \
=77] ^
$str77_ v
}77w x
)77x y
:77z {
Problem	77| É
(
77É Ñ
$str
77Ñ °
)
77° ¢
;
77¢ £
}88 
catch99 
(99 
ValidationException99 &
	exception99' 0
)990 1
{:: 
_logger;; 
.;; 
LogInformation;; &
(;;& '
$";;' )
$str;;) P
{;;P Q
	exception;;Q Z
.;;Z [
Message;;[ b
};;b c
{;;c d
	exception;;d m
.;;m n

StackTrace;;n x
};;x y
";;y z
);;z {
;;;{ |
return<< 

BadRequest<< !
(<<! "
	exception<<" +
.<<+ ,
Message<<, 3
)<<3 4
;<<4 5
}== 
catch>> 
(>> !
ArgumentNullException>> (
	exception>>) 2
)>>2 3
{?? 
_logger@@ 
.@@ 
LogInformation@@ &
(@@& '
$"@@' )
$str@@) P
{@@P Q
	exception@@Q Z
.@@Z [
Message@@[ b
}@@b c
{@@c d
	exception@@d m
.@@m n

StackTrace@@n x
}@@x y
"@@y z
)@@z {
;@@{ |
returnAA 

BadRequestAA !
(AA! "
	exceptionAA" +
.AA+ ,
MessageAA, 3
)AA3 4
;AA4 5
}BB 
catchCC 
(CC 
	ExceptionCC 
	exceptionCC &
)CC& '
{DD 
_loggerEE 
.EE 
LogInformationEE &
(EE& '
$"EE' )
$strEE) P
{EEP Q
	exceptionEEQ Z
.EEZ [
MessageEE[ b
}EEb c
{EEc d
	exceptionEEd m
.EEm n

StackTraceEEn x
}EEx y
"EEy z
)EEz {
;EE{ |
returnFF 
ProblemFF 
(FF 
$strFF =
)FF= >
;FF> ?
}GG 
}HH 	
[II 	
HttpGetII	 
]II 
publicJJ 
IActionResultJJ !
GetallPersonalDetailsJJ 2
(JJ2 3
)JJ3 4
{KK 	
tryLL 
{MM 
returnOO 
OkOO 
(OO 
_profileServiceOO )
.OO) *!
GetAllPersonalDetailsOO* ?
(OO? @
)OO@ A
)OOA B
;OOB C
}PP 
catchQQ 
(QQ 
	ExceptionQQ 
	exceptionQQ &
)QQ& '
{RR 
_loggerSS 
.SS 
LogInformationSS &
(SS& '
$"SS' )
$strSS) |
{SS| }
	exception	SS} Ü
.
SSÜ á
Message
SSá é
}
SSé è
{
SSè ê
	exception
SSê ô
.
SSô ö

StackTrace
SSö §
}
SS§ •
"
SS• ¶
)
SS¶ ß
;
SSß ®
returnTT 
ProblemTT 
(TT 
	exceptionTT (
.TT( )
MessageTT) 0
)TT0 1
;TT1 2
}UU 
}XX 	
[YY 	
HttpGetYY	 
]YY 
publicZZ 
IActionResultZZ "
GetPersonalDetailsByIdZZ 3
(ZZ3 4
intZZ4 7

PersonalidZZ8 B
)ZZB C
{[[ 	
if\\ 
(\\ 

Personalid\\ 
<=\\ 
$num\\ 
)\\  
{]] 
_logger^^ 
.^^ 
LogError^^  
(^^  !
$str^^! l
)^^l m
;^^m n
return__ 

BadRequest__ !
(__! "
new__" %
{__& '
message__( /
=__0 1
$str__2 d
}__e f
)__f g
;__g h
}`` 
tryaa 
{bb 
returndd 
Okdd 
(dd 
_profileServicedd )
.dd) *"
GetPersonalDetailsByIddd* @
(dd@ A

PersonalidddA K
)ddK L
)ddL M
;ddM N
}ee 
catchff 
(ff !
ArgumentNullExceptionff (
	exceptionff) 2
)ff2 3
{gg 
_loggerhh 
.hh 
LogInformationhh &
(hh& '
$"hh' )
$strhh) U
{hhU V
	exceptionhhV _
.hh_ `
Messagehh` g
}hhg h
{hhh i
	exceptionhhi r
.hhr s

StackTracehhs }
}hh} ~
"hh~ 
)	hh Ä
;
hhÄ Å
returnii 

BadRequestii !
(ii! "
	exceptionii" +
.ii+ ,
Messageii, 3
)ii3 4
;ii4 5
}jj 
catchkk 
(kk 
	Exceptionkk 
	exceptionkk &
)kk& '
{ll 
_loggermm 
.mm 
LogInformationmm &
(mm& '
$"mm' )
$strmm) }
{mm} ~
	exception	mm~ á
.
mmá à
Message
mmà è
}
mmè ê
{
mmê ë
	exception
mmë ö
.
mmö õ

StackTrace
mmõ •
}
mm• ¶
"
mm¶ ß
)
mmß ®
;
mm® ©
returnnn 
Problemnn 
(nn 
	exceptionnn (
.nn( )
Messagenn) 0
)nn0 1
;nn1 2
}oo 
}pp 	
[qq 	
HttpGetqq	 
]qq 
publicrr 
IActionResultrr )
GetPersonalDetailsByProfileIdrr :
(rr: ;
intrr; >
	Profileidrr? H
)rrH I
{ss 	
iftt 
(tt 
	Profileidtt 
<=tt 
$numtt 
)tt 
{uu 
_loggervv 
.vv 
LogErrorvv  
(vv  !
$strvv! s
)vvs t
;vvt u
returnww 

BadRequestww !
(ww! "
newww" %
{ww& '
messageww( /
=ww0 1
$strww2 ]
}ww^ _
)ww_ `
;ww` a
}xx 
tryyy 
{zz 
return|| 
Ok|| 
(|| 
_profileService|| )
.||) *)
GetPersonalDetailsByProfileId||* G
(||G H
	Profileid||H Q
)||Q R
)||R S
;||S T
}}} 
catch~~ 
(~~ !
ArgumentNullException~~ (
	exception~~) 2
)~~2 3
{ 
_logger
ÄÄ 
.
ÄÄ 
LogInformation
ÄÄ &
(
ÄÄ& '
$"
ÄÄ' )
$str
ÄÄ) Y
{
ÄÄY Z
	exception
ÄÄZ c
.
ÄÄc d
Message
ÄÄd k
}
ÄÄk l
{
ÄÄl m
	exception
ÄÄm v
.
ÄÄv w

StackTraceÄÄw Å
}ÄÄÅ Ç
"ÄÄÇ É
)ÄÄÉ Ñ
;ÄÄÑ Ö
return
ÅÅ 

BadRequest
ÅÅ !
(
ÅÅ! "
	exception
ÅÅ" +
.
ÅÅ+ ,
Message
ÅÅ, 3
)
ÅÅ3 4
;
ÅÅ4 5
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ 
	Exception
ÉÉ 
	exception
ÉÉ &
)
ÉÉ& '
{
ÑÑ 
_logger
ÖÖ 
.
ÖÖ 
LogInformation
ÖÖ &
(
ÖÖ& '
$"
ÖÖ' )
$strÖÖ) Ñ
{ÖÖÑ Ö
	exceptionÖÖÖ é
.ÖÖé è
MessageÖÖè ñ
}ÖÖñ ó
{ÖÖó ò
	exceptionÖÖò °
.ÖÖ° ¢

StackTraceÖÖ¢ ¨
}ÖÖ¨ ≠
"ÖÖ≠ Æ
)ÖÖÆ Ø
;ÖÖØ ∞
return
ÜÜ 
Problem
ÜÜ 
(
ÜÜ 
	exception
ÜÜ (
.
ÜÜ( )
Message
ÜÜ) 0
)
ÜÜ0 1
;
ÜÜ1 2
}
áá 
}
àà 	
[
ãã 	
HttpPut
ãã	 
]
ãã 
public
åå 
IActionResult
åå "
UpdatePersonalDetail
åå 1
(
åå1 2
PersonalDetails
åå2 A
personalDetails
ååB Q
)
ååQ R
{
éé 	
if
êê 
(
êê 
personalDetails
êê 
==
êê  "
null
êê# '
)
êê' (
{
ëë 
_logger
íí 
.
íí 
LogInformation
íí &
(
íí& '
$stríí' á
)ííá à
;ííà â
return
ìì 

BadRequest
ìì !
(
ìì! "
new
ìì" %
{
ìì& '
message
ìì( /
=
ìì0 1
$str
ìì2 `
}
ììa b
)
ììb c
;
ììc d
}
îî 
try
ïï 
{
ññ 
return
òò 
_profileService
òò &
.
òò& '"
UpdatePersonalDetail
òò' ;
(
òò; <
personalDetails
òò< K
)
òòK L
?
òòM N
Ok
òòO Q
(
òòQ R
new
òòR U
{
òòV W
message
òòX _
=
òò` a
$stròòb à
}òòâ ä
)òòä ã
:òòå ç
Problemòòé ï
(òòï ñ
$stròòñ ¥
)òò¥ µ
;òòµ ∂
}
öö 
catch
õõ 
(
õõ #
ArgumentNullException
õõ (
	exception
õõ) 2
)
õõ2 3
{
úú 
_logger
ùù 
.
ùù 
LogInformation
ùù &
(
ùù& '
$"
ùù' )
$str
ùù) S
{
ùùS T
	exception
ùùT ]
.
ùù] ^
Message
ùù^ e
}
ùùe f
{
ùùf g
	exception
ùùg p
.
ùùp q

StackTrace
ùùq {
}
ùù{ |
"
ùù| }
)
ùù} ~
;
ùù~ 
return
ûû 

BadRequest
ûû !
(
ûû! "
	exception
ûû" +
.
ûû+ ,
Message
ûû, 3
)
ûû3 4
;
ûû4 5
}
üü 
catch
†† 
(
†† 
	Exception
†† 
	exception
†† &
)
††& '
{
°° 
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ &
(
¢¢& '
$"
¢¢' )
$str
¢¢) R
{
¢¢R S
	exception
¢¢S \
.
¢¢\ ]
Message
¢¢] d
}
¢¢d e
{
¢¢e f
	exception
¢¢f o
.
¢¢o p

StackTrace
¢¢p z
}
¢¢z {
"
¢¢{ |
)
¢¢| }
;
¢¢} ~
return
££ 
Problem
££ 
(
££ 
	exception
££ (
.
££( )
Message
££) 0
)
££0 1
;
££1 2
}
§§ 
}
•• 	
[
ßß 	

HttpDelete
ßß	 
]
ßß 
public
®® 
IActionResult
®® $
DisablePersonalDetails
®® 3
(
®®3 4
int
®®4 7
PersonalDetailsId
®®8 I
)
®®I J
{
©© 	
if
™™ 
(
™™ 
PersonalDetailsId
™™ !
<=
™™" $
$num
™™% &
)
™™& '
return
´´ 

BadRequest
´´ !
(
´´! "
new
´´" %
{
´´& '
message
´´( /
=
´´0 1
$str
´´2 _
}
´´` a
)
´´a b
;
´´b c
try
ÆÆ 
{
ØØ 
return
∞∞ 
_profileService
∞∞ &
.
∞∞& '$
DisablePersonalDetails
∞∞' =
(
∞∞= >
PersonalDetailsId
∞∞> O
)
∞∞O P
?
∞∞Q R
Ok
∞∞S U
(
∞∞U V
new
∞∞V Y
{
∞∞Z [
message
∞∞\ c
=
∞∞d e
$str∞∞f å
}∞∞ç é
)∞∞é è
:∞∞ê ë
Problem∞∞í ô
(∞∞ô ö
$str∞∞ö ∏
)∞∞∏ π
;∞∞π ∫
}
±± 
catch
≤≤ 
(
≤≤ #
ArgumentNullException
≤≤ (
	exception
≤≤) 2
)
≤≤2 3
{
≥≥ 
_logger
¥¥ 
.
¥¥ 
LogInformation
¥¥ &
(
¥¥& '
$"
¥¥' )
$str
¥¥) U
{
¥¥U V
	exception
¥¥V _
.
¥¥_ `
Message
¥¥` g
}
¥¥g h
{
¥¥h i
	exception
¥¥i r
.
¥¥r s

StackTrace
¥¥s }
}
¥¥} ~
"
¥¥~ 
)¥¥ Ä
;¥¥Ä Å
return
µµ 

BadRequest
µµ !
(
µµ! "
	exception
µµ" +
.
µµ+ ,
Message
µµ, 3
)
µµ3 4
;
µµ4 5
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
	exception
∑∑ &
)
∑∑& '
{
∏∏ 
_logger
ππ 
.
ππ 
LogInformation
ππ &
(
ππ& '
$"
ππ' )
$str
ππ) m
{
ππm n
	exception
ππn w
}
ππw x
"
ππx y
)
ππy z
;
ππz {
return
∫∫ 
Problem
∫∫ 
(
∫∫ 
$str
∫∫ B
)
∫∫B C
;
∫∫C D
}
ªª 
}
ΩΩ 	
[
ææ 	
HttpPost
ææ	 
]
ææ 
public
øø 
IActionResult
øø 
AddEducation
øø )
(
øø) *
	Education
øø* 3
	education
øø4 =
)
øø= >
{
¿¿ 	
if
¡¡ 
(
¡¡ 
	education
¡¡ 
==
¡¡ 
null
¡¡ !
)
¡¡! "
{
¬¬ 
_logger
√√ 
.
√√ 
LogError
√√  
(
√√  !
$str
√√! c
)
√√c d
;
√√d e
return
ƒƒ 

BadRequest
ƒƒ !
(
ƒƒ! "
new
ƒƒ" %
{
ƒƒ& '
message
ƒƒ( /
=
ƒƒ0 1
$str
ƒƒ2 X
}
ƒƒY Z
)
ƒƒZ [
;
ƒƒ[ \
}
≈≈ 
try
∆∆ 
{
«« 
return
»» 
_profileService
»» &
.
»»& '
AddEducation
»»' 3
(
»»3 4
	education
»»4 =
)
»»= >
?
»»? @
Ok
»»A C
(
»»C D
new
»»D G
{
»»H I
message
»»J Q
=
»»R S
$str
»»T m
}
»»n o
)
»»o p
:
»»q r
Problem
»»s z
(
»»z {
$str»»{ ò
)»»ò ô
;»»ô ö
}
…… 
catch
   
(
   !
ValidationException
   &
	exception
  ' 0
)
  0 1
{
ÀÀ 
_logger
ÃÃ 
.
ÃÃ 
LogInformation
ÃÃ &
(
ÃÃ& '
$"
ÃÃ' )
$str
ÃÃ) K
{
ÃÃK L
	exception
ÃÃL U
.
ÃÃU V
Message
ÃÃV ]
}
ÃÃ] ^
{
ÃÃ^ _
	exception
ÃÃ_ h
.
ÃÃh i

StackTrace
ÃÃi s
}
ÃÃs t
"
ÃÃt u
)
ÃÃu v
;
ÃÃv w
return
ÕÕ 

BadRequest
ÕÕ !
(
ÕÕ! "
	exception
ÕÕ" +
.
ÕÕ+ ,
Message
ÕÕ, 3
)
ÕÕ3 4
;
ÕÕ4 5
}
ŒŒ 
catch
œœ 
(
œœ #
ArgumentNullException
œœ (
	exception
œœ) 2
)
œœ2 3
{
–– 
_logger
—— 
.
—— 
LogInformation
—— &
(
——& '
$"
——' )
$str
——) K
{
——K L
	exception
——L U
.
——U V
Message
——V ]
}
——] ^
{
——^ _
	exception
——_ h
.
——h i

StackTrace
——i s
}
——s t
"
——t u
)
——u v
;
——v w
return
““ 

BadRequest
““ !
(
““! "
	exception
““" +
.
““+ ,
Message
““, 3
)
““3 4
;
““4 5
}
”” 
catch
‘‘ 
(
‘‘ 
	Exception
‘‘ 
	exception
‘‘ &
)
‘‘& '
{
’’ 
_logger
÷÷ 
.
÷÷ 
LogInformation
÷÷ &
(
÷÷& '
$"
÷÷' )
$str
÷÷) K
{
÷÷K L
	exception
÷÷L U
.
÷÷U V
Message
÷÷V ]
}
÷÷] ^
{
÷÷^ _
	exception
÷÷_ h
.
÷÷h i

StackTrace
÷÷i s
}
÷÷s t
"
÷÷t u
)
÷÷u v
;
÷÷v w
return
◊◊ 
Problem
◊◊ 
(
◊◊ 
$str
◊◊ =
)
◊◊= >
;
◊◊> ?
}
ÿÿ 
}
€€ 	
[
‹‹ 	
HttpGet
‹‹	 
]
‹‹ 
public
›› 
IActionResult
›› $
GetallEducationDetails
›› 3
(
››3 4
)
››4 5
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
return
·· 
Ok
·· 
(
·· 
_profileService
·· )
.
··) *$
GetallEducationDetails
··* @
(
··@ A
)
··A B
)
··B C
;
··C D
}
‚‚ 
catch
„„ 
(
„„ 
	Exception
„„ 
	exception
„„ &
)
„„& '
{
‰‰ 
_logger
ÂÂ 
.
ÂÂ 
LogInformation
ÂÂ &
(
ÂÂ& '
$"
ÂÂ' )
$str
ÂÂ) }
{
ÂÂ} ~
	exceptionÂÂ~ á
.ÂÂá à
MessageÂÂà è
}ÂÂè ê
{ÂÂê ë
	exceptionÂÂë ö
.ÂÂö õ

StackTraceÂÂõ •
}ÂÂ• ¶
"ÂÂ¶ ß
)ÂÂß ®
;ÂÂ® ©
return
ÊÊ 
Problem
ÊÊ 
(
ÊÊ 
	exception
ÊÊ (
.
ÊÊ( )
Message
ÊÊ) 0
)
ÊÊ0 1
;
ÊÊ1 2
}
ÁÁ 
}
ËË 	
[
ÈÈ 	
HttpGet
ÈÈ	 
]
ÈÈ 
public
ÍÍ 
IActionResult
ÍÍ %
GetEducationDetailsById
ÍÍ 4
(
ÍÍ4 5
int
ÍÍ5 8
Educationid
ÍÍ9 D
)
ÍÍD E
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
Educationid
ÏÏ 
<=
ÏÏ 
$num
ÏÏ  
)
ÏÏ  !
return
ÌÌ 

BadRequest
ÌÌ !
(
ÌÌ! "
new
ÌÌ" %
{
ÌÌ& '
message
ÌÌ( /
=
ÌÌ0 1
$str
ÌÌ2 Z
}
ÌÌ[ \
)
ÌÌ\ ]
;
ÌÌ] ^
try
ÓÓ 
{
ÔÔ 
return
ÒÒ 
Ok
ÒÒ 
(
ÒÒ 
_profileService
ÒÒ )
.
ÒÒ) *%
GetEducationDetailsById
ÒÒ* A
(
ÒÒA B
Educationid
ÒÒB M
)
ÒÒM N
)
ÒÒN O
;
ÒÒO P
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ #
ArgumentNullException
ÛÛ (
	exception
ÛÛ) 2
)
ÛÛ2 3
{
ÙÙ 
_logger
ıı 
.
ıı 
LogInformation
ıı &
(
ıı& '
$"
ıı' )
$str
ıı) V
{
ııV W
	exception
ııW `
.
ıı` a
Message
ııa h
}
ııh i
{
ııi j
	exception
ııj s
.
ııs t

StackTrace
ııt ~
}
ıı~ 
"ıı Ä
)ııÄ Å
;ııÅ Ç
return
ˆˆ 

BadRequest
ˆˆ !
(
ˆˆ! "
	exception
ˆˆ" +
.
ˆˆ+ ,
Message
ˆˆ, 3
)
ˆˆ3 4
;
ˆˆ4 5
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
	exception
¯¯ &
)
¯¯& '
{
˘˘ 
_logger
˙˙ 
.
˙˙ 
LogInformation
˙˙ &
(
˙˙& '
$"
˙˙' )
$str
˙˙) ~
{
˙˙~ 
	exception˙˙ à
.˙˙à â
Message˙˙â ê
}˙˙ê ë
{˙˙ë í
	exception˙˙í õ
.˙˙õ ú

StackTrace˙˙ú ¶
}˙˙¶ ß
"˙˙ß ®
)˙˙® ©
;˙˙© ™
return
˚˚ 
Problem
˚˚ 
(
˚˚ 
	exception
˚˚ (
.
˚˚( )
Message
˚˚) 0
)
˚˚0 1
;
˚˚1 2
}
¸¸ 
}
˝˝ 	
[
˛˛ 	
HttpGet
˛˛	 
]
˛˛ 
public
ˇˇ 
IActionResult
ˇˇ /
!GetAllEducationDetailsByProfileId
ˇˇ >
(
ˇˇ> ?
int
ˇˇ? B
	Profileid
ˇˇC L
)
ˇˇL M
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
	Profileid
ÅÅ 
<=
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
return
ÇÇ 

BadRequest
ÇÇ !
(
ÇÇ! "
new
ÇÇ" %
{
ÇÇ& '
message
ÇÇ( /
=
ÇÇ0 1
$str
ÇÇ2 X
}
ÇÇY Z
)
ÇÇZ [
;
ÇÇ[ \
try
ÉÉ 
{
ÑÑ 
return
ÜÜ 
Ok
ÜÜ 
(
ÜÜ 
_profileService
ÜÜ )
.
ÜÜ) */
!GetAllEducationDetailsByProfileId
ÜÜ* K
(
ÜÜK L
	Profileid
ÜÜL U
)
ÜÜU V
)
ÜÜV W
;
ÜÜW X
}
áá 
catch
àà 
(
àà #
ArgumentNullException
àà (
	exception
àà) 2
)
àà2 3
{
ââ 
_logger
ää 
.
ää 
LogInformation
ää &
(
ää& '
$"
ää' )
$str
ää) `
{
ää` a
	exception
ääa j
.
ääj k
Message
ääk r
}
äär s
{
ääs t
	exception
äät }
.
ää} ~

StackTraceää~ à
}ääà â
"ääâ ä
)äää ã
;ääã å
return
ãã 

BadRequest
ãã !
(
ãã! "
	exception
ãã" +
.
ãã+ ,
Message
ãã, 3
)
ãã3 4
;
ãã4 5
}
åå 
catch
çç 
(
çç 
	Exception
çç 
	exception
çç &
)
çç& '
{
éé 
_logger
èè 
.
èè 
LogInformation
èè &
(
èè& '
$"
èè' )
$strèè) à
{èèà â
	exceptionèèâ í
.èèí ì
Messageèèì ö
}èèö õ
{èèõ ú
	exceptionèèú •
.èè• ¶

StackTraceèè¶ ∞
}èè∞ ±
"èè± ≤
)èè≤ ≥
;èè≥ ¥
return
êê 
Problem
êê 
(
êê 
	exception
êê (
.
êê( )
Message
êê) 0
)
êê0 1
;
êê1 2
}
ëë 
}
íí 	
[
ìì 	
HttpPut
ìì	 
]
ìì 
public
îî 
IActionResult
îî 
UpdateEducation
îî ,
(
îî, -
	Education
îî- 6
	education
îî7 @
)
îî@ A
{
ññ 	
if
òò 
(
òò 
	education
òò 
==
òò 
null
òò !
)
òò! "
{
ôô 
_logger
öö 
.
öö 
LogInformation
öö &
(
öö& '
$ströö' Ñ
)ööÑ Ö
;ööÖ Ü
return
õõ 

BadRequest
õõ !
(
õõ! "
new
õõ" %
{
õõ& '
message
õõ( /
=
õõ0 1
$str
õõ2 X
}
õõY Z
)
õõZ [
;
õõ[ \
}
úú 
try
ùù 
{
ûû 
return
†† 
_profileService
†† &
.
††& '
UpdateEducation
††' 6
(
††6 7
	education
††7 @
)
††@ A
?
††B C
Ok
††D F
(
††F G
new
††G J
{
††K L
message
††M T
=
††U V
$str
††W w
}
††x y
)
††y z
:
††{ |
Problem††} Ñ
(††Ñ Ö
$str††Ö £
)††£ §
;††§ •
}
¢¢ 
catch
££ 
(
££ #
ArgumentNullException
££ (
	exception
££) 2
)
££2 3
{
§§ 
_logger
•• 
.
•• 
LogInformation
•• &
(
••& '
$"
••' )
$str
••) N
{
••N O
	exception
••O X
.
••X Y
Message
••Y `
}
••` a
{
••a b
	exception
••b k
.
••k l

StackTrace
••l v
}
••v w
"
••w x
)
••x y
;
••y z
return
¶¶ 

BadRequest
¶¶ !
(
¶¶! "
	exception
¶¶" +
.
¶¶+ ,
Message
¶¶, 3
)
¶¶3 4
;
¶¶4 5
}
ßß 
catch
®® 
(
®® 
	Exception
®® 
	exception
®® &
)
®®& '
{
©© 
_logger
™™ 
.
™™ 
LogInformation
™™ &
(
™™& '
$"
™™' )
$str
™™) M
{
™™M N
	exception
™™N W
.
™™W X
Message
™™X _
}
™™_ `
{
™™` a
	exception
™™a j
.
™™j k

StackTrace
™™k u
}
™™u v
"
™™v w
)
™™w x
;
™™x y
return
´´ 
Problem
´´ 
(
´´ 
	exception
´´ (
.
´´( )
Message
´´) 0
)
´´0 1
;
´´1 2
}
¨¨ 
}
≠≠ 	
[
ÆÆ 	

HttpDelete
ÆÆ	 
]
ÆÆ 
public
ØØ 
IActionResult
ØØ '
DisableEducationalDetails
ØØ 6
(
ØØ6 7
int
ØØ7 :
EducationId
ØØ; F
)
ØØF G
{
∞∞ 	
if
±± 
(
±± 
EducationId
±± 
<=
±± 
$num
±±  
)
±±  !
return
≤≤ 

BadRequest
≤≤ !
(
≤≤! "
new
≤≤" %
{
≤≤& '
message
≤≤( /
=
≤≤0 1
$str
≤≤2 Z
}
≤≤[ \
)
≤≤\ ]
;
≤≤] ^
try
µµ 
{
∂∂ 
return
∑∑ 
_profileService
∑∑ &
.
∑∑& ''
DisableEducationalDetails
∑∑' @
(
∑∑@ A
EducationId
∑∑A L
)
∑∑L M
?
∑∑N O
Ok
∑∑P R
(
∑∑R S
new
∑∑S V
{
∑∑W X
message
∑∑Y `
=
∑∑a b
$str∑∑c É
}∑∑Ñ Ö
)∑∑Ö Ü
:∑∑á à
Problem∑∑â ê
(∑∑ê ë
$str∑∑ë Ø
)∑∑Ø ∞
;∑∑∞ ±
}
∏∏ 
catch
ππ 
(
ππ #
ArgumentNullException
ππ (
	exception
ππ) 2
)
ππ2 3
{
∫∫ 
_logger
ªª 
.
ªª 
LogInformation
ªª &
(
ªª& '
$"
ªª' )
$str
ªª) X
{
ªªX Y
	exception
ªªY b
.
ªªb c
Message
ªªc j
}
ªªj k
{
ªªk l
	exception
ªªl u
.
ªªu v

StackTraceªªv Ä
}ªªÄ Å
"ªªÅ Ç
)ªªÇ É
;ªªÉ Ñ
return
ºº 

BadRequest
ºº !
(
ºº! "
	exception
ºº" +
.
ºº+ ,
Message
ºº, 3
)
ºº3 4
;
ºº4 5
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
	exception
ææ &
)
ææ& '
{
øø 
_logger
¿¿ 
.
¿¿ 
LogInformation
¿¿ &
(
¿¿& '
$"
¿¿' )
$str
¿¿) p
{
¿¿p q
	exception
¿¿q z
}
¿¿z {
"
¿¿{ |
)
¿¿| }
;
¿¿} ~
return
¡¡ 
Problem
¡¡ 
(
¡¡ 
$str
¡¡ B
)
¡¡B C
;
¡¡C D
}
¬¬ 
}
ƒƒ 	
[
≈≈ 	
HttpPost
≈≈	 
]
≈≈ 
public
∆∆ 
IActionResult
∆∆ 
AddProjects
∆∆ (
(
∆∆( )
Projects
∆∆) 1
projects
∆∆2 :
)
∆∆: ;
{
«« 	
if
»» 
(
»» 
projects
»» 
==
»» 
null
»»  
)
»»  !
{
…… 
_logger
   
.
   
LogError
    
(
    !
$str
  ! b
)
  b c
;
  c d
return
ÀÀ 

BadRequest
ÀÀ !
(
ÀÀ! "
new
ÀÀ" %
{
ÀÀ& '
message
ÀÀ( /
=
ÀÀ0 1
$str
ÀÀ2 V
}
ÀÀW X
)
ÀÀX Y
;
ÀÀY Z
}
ÃÃ 
try
ÕÕ 
{
ŒŒ 
return
œœ 
_profileService
œœ &
.
œœ& '
AddProjects
œœ' 2
(
œœ2 3
projects
œœ3 ;
)
œœ; <
?
œœ= >
Ok
œœ? A
(
œœA B
new
œœB E
{
œœF G
message
œœH O
=
œœP Q
$str
œœR i
}
œœj k
)
œœk l
:
œœm n
Problem
œœo v
(
œœv w
$strœœw î
)œœî ï
;œœï ñ
}
–– 
catch
—— 
(
—— !
ValidationException
—— &
	exception
——' 0
)
——0 1
{
““ 
_logger
”” 
.
”” 
LogInformation
”” &
(
””& '
$"
””' )
$str
””) J
{
””J K
	exception
””K T
.
””T U
Message
””U \
}
””\ ]
{
””] ^
	exception
””^ g
.
””g h

StackTrace
””h r
}
””r s
"
””s t
)
””t u
;
””u v
return
‘‘ 

BadRequest
‘‘ !
(
‘‘! "
	exception
‘‘" +
.
‘‘+ ,
Message
‘‘, 3
)
‘‘3 4
;
‘‘4 5
}
’’ 
catch
÷÷ 
(
÷÷ #
ArgumentNullException
÷÷ (
	exception
÷÷) 2
)
÷÷2 3
{
◊◊ 
_logger
ÿÿ 
.
ÿÿ 
LogInformation
ÿÿ &
(
ÿÿ& '
$"
ÿÿ' )
$str
ÿÿ) J
{
ÿÿJ K
	exception
ÿÿK T
.
ÿÿT U
Message
ÿÿU \
}
ÿÿ\ ]
{
ÿÿ] ^
	exception
ÿÿ^ g
.
ÿÿg h

StackTrace
ÿÿh r
}
ÿÿr s
"
ÿÿs t
)
ÿÿt u
;
ÿÿu v
return
ŸŸ 

BadRequest
ŸŸ !
(
ŸŸ! "
	exception
ŸŸ" +
.
ŸŸ+ ,
Message
ŸŸ, 3
)
ŸŸ3 4
;
ŸŸ4 5
}
⁄⁄ 
catch
€€ 
(
€€ 
	Exception
€€ 
	exception
€€ &
)
€€& '
{
‹‹ 
_logger
›› 
.
›› 
LogInformation
›› &
(
››& '
$"
››' )
$str
››) J
{
››J K
	exception
››K T
.
››T U
Message
››U \
}
››\ ]
{
››] ^
	exception
››^ g
.
››g h

StackTrace
››h r
}
››r s
"
››s t
)
››t u
;
››u v
return
ﬁﬁ 
Problem
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ =
)
ﬁﬁ= >
;
ﬁﬁ> ?
}
ﬂﬂ 
}
·· 	
[
‚‚ 	
HttpGet
‚‚	 
]
‚‚ 
public
„„ 
IActionResult
„„ "
GetallProjectDetails
„„ 1
(
„„1 2
)
„„2 3
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
return
ËË 
Ok
ËË 
(
ËË 
_profileService
ËË )
.
ËË) *"
GetallProjectDetails
ËË* >
(
ËË> ?
)
ËË? @
)
ËË@ A
;
ËËA B
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
	exception
ÍÍ &
)
ÍÍ& '
{
ÎÎ 
_logger
ÏÏ 
.
ÏÏ 
LogInformation
ÏÏ &
(
ÏÏ& '
$"
ÏÏ' )
$str
ÏÏ) {
{
ÏÏ{ |
	exceptionÏÏ| Ö
.ÏÏÖ Ü
MessageÏÏÜ ç
}ÏÏç é
{ÏÏé è
	exceptionÏÏè ò
.ÏÏò ô

StackTraceÏÏô £
}ÏÏ£ §
"ÏÏ§ •
)ÏÏ• ¶
;ÏÏ¶ ß
return
ÌÌ 
Problem
ÌÌ 
(
ÌÌ 
	exception
ÌÌ (
.
ÌÌ( )
Message
ÌÌ) 0
)
ÌÌ0 1
;
ÌÌ1 2
}
ÓÓ 
}
ÒÒ 	
[
ÚÚ 	
HttpGet
ÚÚ	 
]
ÚÚ 
public
ÛÛ 
IActionResult
ÛÛ #
GetProjectDetailsById
ÛÛ 2
(
ÛÛ2 3
int
ÛÛ3 6
	Projectid
ÛÛ7 @
)
ÛÛ@ A
{
ÙÙ 	
if
ıı 
(
ıı 
	Projectid
ıı 
<=
ıı 
$num
ıı 
)
ıı 
return
ˆˆ 

BadRequest
ˆˆ !
(
ˆˆ! "
new
ˆˆ" %
{
ˆˆ& '
message
ˆˆ( /
=
ˆˆ0 1
$str
ˆˆ2 X
}
ˆˆY Z
)
ˆˆZ [
;
ˆˆ[ \
try
˜˜ 
{
¯¯ 
return
˙˙ 
Ok
˙˙ 
(
˙˙ 
_profileService
˙˙ )
.
˙˙) *#
GetProjectDetailsById
˙˙* ?
(
˙˙? @
	Projectid
˙˙@ I
)
˙˙I J
)
˙˙J K
;
˙˙K L
}
˚˚ 
catch
¸¸ 
(
¸¸ #
ArgumentNullException
¸¸ (
	exception
¸¸) 2
)
¸¸2 3
{
˝˝ 
_logger
˛˛ 
.
˛˛ 
LogInformation
˛˛ &
(
˛˛& '
$"
˛˛' )
$str
˛˛) T
{
˛˛T U
	exception
˛˛U ^
.
˛˛^ _
Message
˛˛_ f
}
˛˛f g
{
˛˛g h
	exception
˛˛h q
.
˛˛q r

StackTrace
˛˛r |
}
˛˛| }
"
˛˛} ~
)
˛˛~ 
;˛˛ Ä
return
ˇˇ 

BadRequest
ˇˇ !
(
ˇˇ! "
	exception
ˇˇ" +
.
ˇˇ+ ,
Message
ˇˇ, 3
)
ˇˇ3 4
;
ˇˇ4 5
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
	exception
ÅÅ &
)
ÅÅ& '
{
ÇÇ 
_logger
ÉÉ 
.
ÉÉ 
LogInformation
ÉÉ &
(
ÉÉ& '
$"
ÉÉ' )
$str
ÉÉ) |
{
ÉÉ| }
	exceptionÉÉ} Ü
.ÉÉÜ á
MessageÉÉá é
}ÉÉé è
{ÉÉè ê
	exceptionÉÉê ô
.ÉÉô ö

StackTraceÉÉö §
}ÉÉ§ •
"ÉÉ• ¶
)ÉÉ¶ ß
;ÉÉß ®
return
ÑÑ 
Problem
ÑÑ 
(
ÑÑ 
	exception
ÑÑ (
.
ÑÑ( )
Message
ÑÑ) 0
)
ÑÑ0 1
;
ÑÑ1 2
}
ÖÖ 
}
ÜÜ 	
[
áá 	
HttpGet
áá	 
]
áá 
public
àà 
IActionResult
àà -
GetAllProjectDetailsByProfileId
àà <
(
àà< =
int
àà= @
	Profileid
ààA J
)
ààJ K
{
ââ 	
if
ää 
(
ää 
	Profileid
ää 
<=
ää 
$num
ää 
)
ää 
return
ãã 

BadRequest
ãã !
(
ãã! "
new
ãã" %
{
ãã& '
message
ãã( /
=
ãã0 1
$str
ãã2 X
}
ããY Z
)
ããZ [
;
ãã[ \
try
åå 
{
çç 
return
èè 
Ok
èè 
(
èè 
_profileService
èè )
.
èè) *-
GetAllProjectDetailsByProfileId
èè* I
(
èèI J
	Profileid
èèJ S
)
èèS T
)
èèT U
;
èèU V
}
êê 
catch
ëë 
(
ëë #
ArgumentNullException
ëë (
	exception
ëë) 2
)
ëë2 3
{
íí 
_logger
ìì 
.
ìì 
LogInformation
ìì &
(
ìì& '
$"
ìì' )
$str
ìì) ^
{
ìì^ _
	exception
ìì_ h
.
ììh i
Message
ììi p
}
ììp q
{
ììq r
	exception
ììr {
.
ìì{ |

StackTraceìì| Ü
}ììÜ á
"ììá à
)ììà â
;ììâ ä
return
îî 

BadRequest
îî !
(
îî! "
	exception
îî" +
.
îî+ ,
Message
îî, 3
)
îî3 4
;
îî4 5
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
	exception
ññ &
)
ññ& '
{
óó 
_logger
òò 
.
òò 
LogInformation
òò &
(
òò& '
$"
òò' )
$stròò) Ü
{òòÜ á
	exceptionòòá ê
.òòê ë
Messageòòë ò
}òòò ô
{òòô ö
	exceptionòòö £
.òò£ §

StackTraceòò§ Æ
}òòÆ Ø
"òòØ ∞
)òò∞ ±
;òò± ≤
return
ôô 
Problem
ôô 
(
ôô 
	exception
ôô (
.
ôô( )
Message
ôô) 0
)
ôô0 1
;
ôô1 2
}
öö 
}
õõ 	
[
ùù 	
HttpPut
ùù	 
]
ùù 
public
ûû 
IActionResult
ûû 
UpdateProjects
ûû +
(
ûû+ ,
Projects
ûû, 4
projects
ûû5 =
)
ûû= >
{
†† 	
if
¢¢ 
(
¢¢ 
projects
¢¢ 
==
¢¢ 
null
¢¢  
)
¢¢  !
{
££ 
_logger
§§ 
.
§§ 
LogInformation
§§ &
(
§§& '
$str
§§' r
)
§§r s
;
§§s t
return
•• 

BadRequest
•• !
(
••! "
new
••" %
{
••& '
message
••( /
=
••0 1
$str
••2 U
}
••V W
)
••W X
;
••X Y
}
¶¶ 
try
ßß 
{
®® 
return
™™ 
_profileService
™™ &
.
™™& '
UpdateProjects
™™' 5
(
™™5 6
projects
™™6 >
)
™™> ?
?
™™@ A
Ok
™™B D
(
™™D E
new
™™E H
{
™™I J
message
™™K R
=
™™S T
$str
™™U t
}
™™u v
)
™™v w
:
™™x y
Problem™™z Å
(™™Å Ç
$str™™Ç †
)™™† °
;™™° ¢
}
¨¨ 
catch
≠≠ 
(
≠≠ #
ArgumentNullException
≠≠ (
	exception
≠≠) 2
)
≠≠2 3
{
ÆÆ 
_logger
ØØ 
.
ØØ 
LogInformation
ØØ &
(
ØØ& '
$"
ØØ' )
$str
ØØ) M
{
ØØM N
	exception
ØØN W
.
ØØW X
Message
ØØX _
}
ØØ_ `
{
ØØ` a
	exception
ØØa j
.
ØØj k

StackTrace
ØØk u
}
ØØu v
"
ØØv w
)
ØØw x
;
ØØx y
return
∞∞ 

BadRequest
∞∞ !
(
∞∞! "
	exception
∞∞" +
.
∞∞+ ,
Message
∞∞, 3
)
∞∞3 4
;
∞∞4 5
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
	exception
≤≤ &
)
≤≤& '
{
≥≥ 
_logger
¥¥ 
.
¥¥ 
LogInformation
¥¥ &
(
¥¥& '
$"
¥¥' )
$str
¥¥) L
{
¥¥L M
	exception
¥¥M V
.
¥¥V W
Message
¥¥W ^
}
¥¥^ _
{
¥¥_ `
	exception
¥¥` i
.
¥¥i j

StackTrace
¥¥j t
}
¥¥t u
"
¥¥u v
)
¥¥v w
;
¥¥w x
return
µµ 
Problem
µµ 
(
µµ 
	exception
µµ (
.
µµ( )
Message
µµ) 0
)
µµ0 1
;
µµ1 2
}
∂∂ 
}
∑∑ 	
[
∏∏ 	

HttpDelete
∏∏	 
]
∏∏ 
public
ππ 
IActionResult
ππ #
DisableProjectDetails
ππ 2
(
ππ2 3
int
ππ3 6

ProjectsId
ππ7 A
)
ππA B
{
∫∫ 	
if
ªª 
(
ªª 

ProjectsId
ªª 
<=
ªª 
$num
ªª 
)
ªª  
return
ºº 

BadRequest
ºº !
(
ºº! "
new
ºº" %
{
ºº& '
message
ºº( /
=
ºº0 1
$str
ºº2 X
}
ººY Z
)
ººZ [
;
ºº[ \
try
øø 
{
¿¿ 
return
¡¡ 
_profileService
¡¡ &
.
¡¡& '#
DisableProjectDetails
¡¡' <
(
¡¡< =

ProjectsId
¡¡= G
)
¡¡G H
?
¡¡I J
Ok
¡¡K M
(
¡¡M N
new
¡¡N Q
{
¡¡R S
message
¡¡T [
=
¡¡\ ]
$str
¡¡^ |
}
¡¡} ~
)
¡¡~ 
:¡¡Ä Å
Problem¡¡Ç â
(¡¡â ä
$str¡¡ä ®
)¡¡® ©
;¡¡© ™
}
¬¬ 
catch
√√ 
(
√√ #
ArgumentNullException
√√ (
	exception
√√) 2
)
√√2 3
{
ƒƒ 
_logger
≈≈ 
.
≈≈ 
LogInformation
≈≈ &
(
≈≈& '
$"
≈≈' )
$str
≈≈) T
{
≈≈T U
	exception
≈≈U ^
.
≈≈^ _
Message
≈≈_ f
}
≈≈f g
{
≈≈g h
	exception
≈≈h q
.
≈≈q r

StackTrace
≈≈r |
}
≈≈| }
"
≈≈} ~
)
≈≈~ 
;≈≈ Ä
return
∆∆ 

BadRequest
∆∆ !
(
∆∆! "
	exception
∆∆" +
.
∆∆+ ,
Message
∆∆, 3
)
∆∆3 4
;
∆∆4 5
}
«« 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
…… 
_logger
   
.
   
LogInformation
   &
(
  & '
$"
  ' )
$str
  ) l
{
  l m
	exception
  m v
}
  v w
"
  w x
)
  x y
;
  y z
return
ÀÀ 
Problem
ÀÀ 
(
ÀÀ 
$str
ÀÀ B
)
ÀÀB C
;
ÀÀC D
}
ÃÃ 
}
ŒŒ 	
[
œœ 	
HttpPost
œœ	 
]
œœ 
public
–– 
IActionResult
–– 
	AddSkills
–– &
(
––& '
Skills
––' -
skill
––. 3
)
––3 4
{
—— 	
if
““ 
(
““ 
skill
““ 
==
““ 
null
““ 
)
““ 
{
”” 
_logger
‘‘ 
.
‘‘ 
LogError
‘‘  
(
‘‘  !
$str
‘‘! `
)
‘‘` a
;
‘‘a b
return
’’ 

BadRequest
’’ !
(
’’! "
new
’’" %
{
’’& '
message
’’( /
=
’’0 1
$str
’’2 T
}
’’U V
)
’’V W
;
’’W X
}
÷÷ 
try
◊◊ 
{
ÿÿ 
return
ŸŸ 
_profileService
ŸŸ &
.
ŸŸ& '
	AddSkills
ŸŸ' 0
(
ŸŸ0 1
skill
ŸŸ1 6
)
ŸŸ6 7
?
ŸŸ8 9
Ok
ŸŸ: <
(
ŸŸ< =
new
ŸŸ= @
{
ŸŸA B
message
ŸŸC J
=
ŸŸK L
$str
ŸŸM b
}
ŸŸc d
)
ŸŸd e
:
ŸŸf g
Problem
ŸŸh o
(
ŸŸo p
$strŸŸp ç
)ŸŸç é
;ŸŸé è
}
⁄⁄ 
catch
€€ 
(
€€ !
ValidationException
€€ &
	exception
€€' 0
)
€€0 1
{
‹‹ 
_logger
›› 
.
›› 
LogInformation
›› &
(
››& '
$"
››' )
$str
››) G
{
››G H
	exception
››H Q
.
››Q R
Message
››R Y
}
››Y Z
{
››Z [
	exception
››[ d
.
››d e

StackTrace
››e o
}
››o p
"
››p q
)
››q r
;
››r s
return
ﬁﬁ 

BadRequest
ﬁﬁ !
(
ﬁﬁ! "
	exception
ﬁﬁ" +
.
ﬁﬁ+ ,
Message
ﬁﬁ, 3
)
ﬁﬁ3 4
;
ﬁﬁ4 5
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ #
ArgumentNullException
‡‡ (
	exception
‡‡) 2
)
‡‡2 3
{
·· 
_logger
‚‚ 
.
‚‚ 
LogInformation
‚‚ &
(
‚‚& '
$"
‚‚' )
$str
‚‚) H
{
‚‚H I
	exception
‚‚I R
.
‚‚R S
Message
‚‚S Z
}
‚‚Z [
{
‚‚[ \
	exception
‚‚\ e
.
‚‚e f

StackTrace
‚‚f p
}
‚‚p q
"
‚‚q r
)
‚‚r s
;
‚‚s t
return
„„ 

BadRequest
„„ !
(
„„! "
	exception
„„" +
.
„„+ ,
Message
„„, 3
)
„„3 4
;
„„4 5
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
	exception
ÂÂ &
)
ÂÂ& '
{
ÊÊ 
_logger
ÁÁ 
.
ÁÁ 
LogInformation
ÁÁ &
(
ÁÁ& '
$"
ÁÁ' )
$str
ÁÁ) G
{
ÁÁG H
	exception
ÁÁH Q
.
ÁÁQ R
Message
ÁÁR Y
}
ÁÁY Z
{
ÁÁZ [
	exception
ÁÁ[ d
.
ÁÁd e

StackTrace
ÁÁe o
}
ÁÁo p
"
ÁÁp q
)
ÁÁq r
;
ÁÁr s
return
ËË 
Problem
ËË 
(
ËË 
$str
ËË =
)
ËË= >
;
ËË> ?
}
ÈÈ 
}
ÎÎ 	
[
ÏÏ 	
HttpGet
ÏÏ	 
]
ÏÏ 
public
ÌÌ 
IActionResult
ÌÌ  
GetallSkillDetails
ÌÌ /
(
ÌÌ/ 0
)
ÌÌ0 1
{
ÓÓ 	
try
ÔÔ 
{
 
return
ÚÚ 
Ok
ÚÚ 
(
ÚÚ 
_profileService
ÚÚ )
.
ÚÚ) * 
GetallSkillDetails
ÚÚ* <
(
ÚÚ< =
)
ÚÚ= >
)
ÚÚ> ?
;
ÚÚ? @
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
	exception
ÙÙ &
)
ÙÙ& '
{
ıı 
_logger
ˆˆ 
.
ˆˆ 
LogInformation
ˆˆ &
(
ˆˆ& '
$"
ˆˆ' )
$str
ˆˆ) z
{
ˆˆz {
	exceptionˆˆ{ Ñ
.ˆˆÑ Ö
MessageˆˆÖ å
}ˆˆå ç
{ˆˆç é
	exceptionˆˆé ó
.ˆˆó ò

StackTraceˆˆò ¢
}ˆˆ¢ £
"ˆˆ£ §
)ˆˆ§ •
;ˆˆ• ¶
return
˜˜ 
Problem
˜˜ 
(
˜˜ 
	exception
˜˜ (
.
˜˜( )
Message
˜˜) 0
)
˜˜0 1
;
˜˜1 2
}
¯¯ 
}
˚˚ 	
[
¸¸ 	
HttpGet
¸¸	 
]
¸¸ 
public
˝˝ 
IActionResult
˝˝ !
GetSkillDetailsById
˝˝ 0
(
˝˝0 1
int
˝˝1 4
Skillid
˝˝5 <
)
˝˝< =
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
Skillid
ˇˇ 
<=
ˇˇ 
$num
ˇˇ 
)
ˇˇ 
return
ÄÄ 

BadRequest
ÄÄ !
(
ÄÄ! "
new
ÄÄ" %
{
ÄÄ& '
message
ÄÄ( /
=
ÄÄ0 1
$str
ÄÄ2 V
}
ÄÄW X
)
ÄÄX Y
;
ÄÄY Z
try
ÅÅ 
{
ÇÇ 
return
ÑÑ 
Ok
ÑÑ 
(
ÑÑ 
_profileService
ÑÑ )
.
ÑÑ) *!
GetSkillDetailsById
ÑÑ* =
(
ÑÑ= >
Skillid
ÑÑ> E
)
ÑÑE F
)
ÑÑF G
;
ÑÑG H
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ #
ArgumentNullException
ÜÜ (
	exception
ÜÜ) 2
)
ÜÜ2 3
{
áá 
_logger
àà 
.
àà 
LogInformation
àà &
(
àà& '
$"
àà' )
$str
àà) R
{
ààR S
	exception
ààS \
.
àà\ ]
Message
àà] d
}
ààd e
{
ààe f
	exception
ààf o
.
àào p

StackTrace
ààp z
}
ààz {
"
àà{ |
)
àà| }
;
àà} ~
return
ââ 

BadRequest
ââ !
(
ââ! "
	exception
ââ" +
.
ââ+ ,
Message
ââ, 3
)
ââ3 4
;
ââ4 5
}
ää 
catch
ãã 
(
ãã 
	Exception
ãã 
	exception
ãã &
)
ãã& '
{
åå 
_logger
çç 
.
çç 
LogInformation
çç &
(
çç& '
$"
çç' )
$str
çç) {
{
çç{ |
	exceptionçç| Ö
.ççÖ Ü
MessageççÜ ç
}ççç é
{ççé è
	exceptionççè ò
.ççò ô

StackTraceççô £
}çç£ §
"çç§ •
)çç• ¶
;çç¶ ß
return
éé 
Problem
éé 
(
éé 
	exception
éé (
.
éé( )
Message
éé) 0
)
éé0 1
;
éé1 2
}
èè 
}
êê 	
[
ëë 	
HttpGet
ëë	 
]
ëë 
public
íí 
IActionResult
íí +
GetAllSkillDetailsByProfileId
íí :
(
íí: ;
int
íí; >
	Profileid
íí? H
)
ííH I
{
ìì 	
if
îî 
(
îî 
	Profileid
îî 
<=
îî 
$num
îî 
)
îî 
return
ïï 

BadRequest
ïï !
(
ïï! "
new
ïï" %
{
ïï& '
message
ïï( /
=
ïï0 1
$str
ïï2 X
}
ïïY Z
)
ïïZ [
;
ïï[ \
try
ññ 
{
óó 
return
ôô 
Ok
ôô 
(
ôô 
_profileService
ôô )
.
ôô) *+
GetAllSkillDetailsByProfileId
ôô* G
(
ôôG H
	Profileid
ôôH Q
)
ôôQ R
)
ôôR S
;
ôôS T
}
öö 
catch
õõ 
(
õõ #
ArgumentNullException
õõ (
	exception
õõ) 2
)
õõ2 3
{
úú 
_logger
ùù 
.
ùù 
LogInformation
ùù &
(
ùù& '
$"
ùù' )
$str
ùù) \
{
ùù\ ]
	exception
ùù] f
.
ùùf g
Message
ùùg n
}
ùùn o
{
ùùo p
	exception
ùùp y
.
ùùy z

StackTraceùùz Ñ
}ùùÑ Ö
"ùùÖ Ü
)ùùÜ á
;ùùá à
return
ûû 

BadRequest
ûû !
(
ûû! "
	exception
ûû" +
.
ûû+ ,
Message
ûû, 3
)
ûû3 4
;
ûû4 5
}
üü 
catch
†† 
(
†† 
	Exception
†† 
	exception
†† &
)
††& '
{
°° 
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ &
(
¢¢& '
$"
¢¢' )
$str¢¢) Ñ
{¢¢Ñ Ö
	exception¢¢Ö é
.¢¢é è
Message¢¢è ñ
}¢¢ñ ó
{¢¢ó ò
	exception¢¢ò °
.¢¢° ¢

StackTrace¢¢¢ ¨
}¢¢¨ ≠
"¢¢≠ Æ
)¢¢Æ Ø
;¢¢Ø ∞
return
££ 
Problem
££ 
(
££ 
	exception
££ (
.
££( )
Message
££) 0
)
££0 1
;
££1 2
}
§§ 
}
•• 	
[
ßß 	
HttpPut
ßß	 
]
ßß 
public
®® 
IActionResult
®® 
UpdateSkills
®® )
(
®®) *
Skills
®®* 0
skill
®®1 6
)
®®6 7
{
™™ 	
if
¨¨ 
(
¨¨ 
skill
¨¨ 
==
¨¨ 
null
¨¨ 
)
¨¨ 
{
≠≠ 
_logger
ÆÆ 
.
ÆÆ 
LogInformation
ÆÆ &
(
ÆÆ& '
$str
ÆÆ' t
)
ÆÆt u
;
ÆÆu v
return
ØØ 

BadRequest
ØØ !
(
ØØ! "
new
ØØ" %
{
ØØ& '
message
ØØ( /
=
ØØ0 1
$str
ØØ2 T
}
ØØU V
)
ØØV W
;
ØØW X
}
∞∞ 
try
±± 
{
≤≤ 
return
¥¥ 
_profileService
¥¥ &
.
¥¥& '
UpdateSkills
¥¥' 3
(
¥¥3 4
skill
¥¥4 9
)
¥¥9 :
?
¥¥; <
Ok
¥¥= ?
(
¥¥? @
new
¥¥@ C
{
¥¥D E
message
¥¥F M
=
¥¥N O
$str
¥¥P m
}
¥¥n o
)
¥¥o p
:
¥¥q r
Problem
¥¥s z
(
¥¥z {
$str¥¥{ ô
)¥¥ô ö
;¥¥ö õ
}
∂∂ 
catch
∑∑ 
(
∑∑ #
ArgumentNullException
∑∑ (
	exception
∑∑) 2
)
∑∑2 3
{
∏∏ 
_logger
ππ 
.
ππ 
LogInformation
ππ &
(
ππ& '
$"
ππ' )
$str
ππ) K
{
ππK L
	exception
ππL U
.
ππU V
Message
ππV ]
}
ππ] ^
{
ππ^ _
	exception
ππ_ h
.
ππh i

StackTrace
ππi s
}
ππs t
"
ππt u
)
ππu v
;
ππv w
return
∫∫ 

BadRequest
∫∫ !
(
∫∫! "
	exception
∫∫" +
.
∫∫+ ,
Message
∫∫, 3
)
∫∫3 4
;
∫∫4 5
}
ªª 
catch
ºº 
(
ºº 
	Exception
ºº 
	exception
ºº &
)
ºº& '
{
ΩΩ 
_logger
ææ 
.
ææ 
LogInformation
ææ &
(
ææ& '
$"
ææ' )
$str
ææ) J
{
ææJ K
	exception
ææK T
.
ææT U
Message
ææU \
}
ææ\ ]
{
ææ] ^
	exception
ææ^ g
.
ææg h

StackTrace
ææh r
}
æær s
"
ææs t
)
ææt u
;
ææu v
return
øø 
Problem
øø 
(
øø 
	exception
øø (
.
øø( )
Message
øø) 0
)
øø0 1
;
øø1 2
}
¿¿ 
}
¡¡ 	
[
¬¬ 	

HttpDelete
¬¬	 
]
¬¬ 
public
√√ 
IActionResult
√√ !
DisableSkillDetails
√√ 0
(
√√0 1
int
√√1 4
SkillId
√√5 <
)
√√< =
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
SkillId
≈≈ 
<=
≈≈ 
$num
≈≈ 
)
≈≈ 
return
∆∆ 

BadRequest
∆∆ !
(
∆∆! "
new
∆∆" %
{
∆∆& '
message
∆∆( /
=
∆∆0 1
$str
∆∆2 U
}
∆∆V W
)
∆∆W X
;
∆∆X Y
try
…… 
{
   
return
ÀÀ 
_profileService
ÀÀ &
.
ÀÀ& '!
DisableSkillDetails
ÀÀ' :
(
ÀÀ: ;
SkillId
ÀÀ; B
)
ÀÀB C
?
ÀÀD E
Ok
ÀÀF H
(
ÀÀH I
new
ÀÀI L
{
ÀÀM N
message
ÀÀO V
=
ÀÀW X
$str
ÀÀY u
}
ÀÀv w
)
ÀÀw x
:
ÀÀy z
ProblemÀÀ{ Ç
(ÀÀÇ É
$strÀÀÉ °
)ÀÀ° ¢
;ÀÀ¢ £
}
ÃÃ 
catch
ÕÕ 
(
ÕÕ #
ArgumentNullException
ÕÕ (
	exception
ÕÕ) 2
)
ÕÕ2 3
{
ŒŒ 
_logger
œœ 
.
œœ 
LogInformation
œœ &
(
œœ& '
$"
œœ' )
$str
œœ) R
{
œœR S
	exception
œœS \
.
œœ\ ]
Message
œœ] d
}
œœd e
{
œœe f
	exception
œœf o
.
œœo p

StackTrace
œœp z
}
œœz {
"
œœ{ |
)
œœ| }
;
œœ} ~
return
–– 

BadRequest
–– !
(
––! "
	exception
––" +
.
––+ ,
Message
––, 3
)
––3 4
;
––4 5
}
—— 
catch
““ 
(
““ 
	Exception
““ 
	exception
““ &
)
““& '
{
”” 
_logger
‘‘ 
.
‘‘ 
LogInformation
‘‘ &
(
‘‘& '
$"
‘‘' )
$str
‘‘) j
{
‘‘j k
	exception
‘‘k t
}
‘‘t u
"
‘‘u v
)
‘‘v w
;
‘‘w x
return
’’ 
Problem
’’ 
(
’’ 
$str
’’ B
)
’’B C
;
’’C D
}
÷÷ 
}
ÿÿ 	
[
ŸŸ 	
HttpPost
ŸŸ	 
]
ŸŸ 
public
⁄⁄ 
IActionResult
⁄⁄ 
AddLanguage
⁄⁄ (
(
⁄⁄( )
Language
⁄⁄) 1
language
⁄⁄2 :
)
⁄⁄: ;
{
€€ 	
if
‹‹ 
(
‹‹ 
language
‹‹ 
==
‹‹ 
null
‹‹  
)
‹‹  !
{
›› 
_logger
ﬁﬁ 
.
ﬁﬁ 
LogError
ﬁﬁ  
(
ﬁﬁ  !
$str
ﬁﬁ! b
)
ﬁﬁb c
;
ﬁﬁc d
return
ﬂﬂ 

BadRequest
ﬂﬂ !
(
ﬂﬂ! "
new
ﬂﬂ" %
{
ﬂﬂ& '
message
ﬂﬂ( /
=
ﬂﬂ0 1
$str
ﬂﬂ2 P
}
ﬂﬂQ R
)
ﬂﬂR S
;
ﬂﬂS T
}
‡‡ 
try
·· 
{
‚‚ 
return
„„ 
_profileService
„„ &
.
„„& '
AddLanguage
„„' 2
(
„„2 3
language
„„3 ;
)
„„; <
?
„„= >
Ok
„„? A
(
„„A B
new
„„B E
{
„„F G
message
„„H O
=
„„P Q
$str
„„R j
}
„„k l
)
„„l m
:
„„n o
Problem
„„p w
(
„„w x
$str„„x ï
)„„ï ñ
;„„ñ ó
}
‰‰ 
catch
ÂÂ 
(
ÂÂ !
ValidationException
ÂÂ &
	exception
ÂÂ' 0
)
ÂÂ0 1
{
ÊÊ 
_logger
ÁÁ 
.
ÁÁ 
LogInformation
ÁÁ &
(
ÁÁ& '
$"
ÁÁ' )
$str
ÁÁ) I
{
ÁÁI J
	exception
ÁÁJ S
.
ÁÁS T
Message
ÁÁT [
}
ÁÁ[ \
{
ÁÁ\ ]
	exception
ÁÁ] f
.
ÁÁf g

StackTrace
ÁÁg q
}
ÁÁq r
"
ÁÁr s
)
ÁÁs t
;
ÁÁt u
return
ËË 

BadRequest
ËË !
(
ËË! "
	exception
ËË" +
.
ËË+ ,
Message
ËË, 3
)
ËË3 4
;
ËË4 5
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ #
ArgumentNullException
ÍÍ (
	exception
ÍÍ) 2
)
ÍÍ2 3
{
ÎÎ 
_logger
ÏÏ 
.
ÏÏ 
LogInformation
ÏÏ &
(
ÏÏ& '
$"
ÏÏ' )
$str
ÏÏ) J
{
ÏÏJ K
	exception
ÏÏK T
.
ÏÏT U
Message
ÏÏU \
}
ÏÏ\ ]
{
ÏÏ] ^
	exception
ÏÏ^ g
.
ÏÏg h

StackTrace
ÏÏh r
}
ÏÏr s
"
ÏÏs t
)
ÏÏt u
;
ÏÏu v
return
ÌÌ 

BadRequest
ÌÌ !
(
ÌÌ! "
	exception
ÌÌ" +
.
ÌÌ+ ,
Message
ÌÌ, 3
)
ÌÌ3 4
;
ÌÌ4 5
}
ÓÓ 
catch
ÔÔ 
(
ÔÔ 
	Exception
ÔÔ 
	exception
ÔÔ &
)
ÔÔ& '
{
 
_logger
ÒÒ 
.
ÒÒ 
LogInformation
ÒÒ &
(
ÒÒ& '
$"
ÒÒ' )
$str
ÒÒ) I
{
ÒÒI J
	exception
ÒÒJ S
.
ÒÒS T
Message
ÒÒT [
}
ÒÒ[ \
{
ÒÒ\ ]
	exception
ÒÒ] f
.
ÒÒf g

StackTrace
ÒÒg q
}
ÒÒq r
"
ÒÒr s
)
ÒÒs t
;
ÒÒt u
return
ÚÚ 
Problem
ÚÚ 
(
ÚÚ 
$str
ÚÚ =
)
ÚÚ= >
;
ÚÚ> ?
}
ÛÛ 
}
ıı 	
[
ˆˆ 	

HttpDelete
ˆˆ	 
]
ˆˆ 
public
˜˜ 
IActionResult
˜˜ 
DisableLanguage
˜˜ ,
(
˜˜, -
int
˜˜- 0
Language_Id
˜˜1 <
)
˜˜< =
{
¯¯ 	
if
˘˘ 
(
˘˘ 
Language_Id
˘˘ 
<=
˘˘ 
$num
˘˘  
)
˘˘  !
return
˙˙ 

BadRequest
˙˙ !
(
˙˙! "
new
˙˙" %
{
˙˙& '
message
˙˙( /
=
˙˙0 1
$str
˙˙2 Y
}
˙˙Z [
)
˙˙[ \
;
˙˙\ ]
try
˝˝ 
{
˛˛ 
return
ˇˇ 
_profileService
ˇˇ &
.
ˇˇ& '
DisableLanguage
ˇˇ' 6
(
ˇˇ6 7
Language_Id
ˇˇ7 B
)
ˇˇB C
?
ˇˇD E
Ok
ˇˇF H
(
ˇˇH I
new
ˇˇI L
{
ˇˇM N
message
ˇˇO V
=
ˇˇW X
$str
ˇˇY x
}
ˇˇy z
)
ˇˇz {
:
ˇˇ| }
Problemˇˇ~ Ö
(ˇˇÖ Ü
$strˇˇÜ §
)ˇˇ§ •
;ˇˇ• ¶
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ #
ArgumentNullException
ÅÅ (
	exception
ÅÅ) 2
)
ÅÅ2 3
{
ÇÇ 
_logger
ÉÉ 
.
ÉÉ 
LogInformation
ÉÉ &
(
ÉÉ& '
$"
ÉÉ' )
$str
ÉÉ) N
{
ÉÉN O
	exception
ÉÉO X
.
ÉÉX Y
Message
ÉÉY `
}
ÉÉ` a
{
ÉÉa b
	exception
ÉÉb k
.
ÉÉk l

StackTrace
ÉÉl v
}
ÉÉv w
"
ÉÉw x
)
ÉÉx y
;
ÉÉy z
return
ÑÑ 

BadRequest
ÑÑ !
(
ÑÑ! "
	exception
ÑÑ" +
.
ÑÑ+ ,
Message
ÑÑ, 3
)
ÑÑ3 4
;
ÑÑ4 5
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ 
	exception
ÜÜ &
)
ÜÜ& '
{
áá 
_logger
àà 
.
àà 
LogInformation
àà &
(
àà& '
$"
àà' )
$str
àà) f
{
ààf g
	exception
ààg p
}
ààp q
"
ààq r
)
ààr s
;
ààs t
return
ââ 
Problem
ââ 
(
ââ 
$str
ââ B
)
ââB C
;
ââC D
}
ää 
}
ãã 	
[
åå 	
HttpPost
åå	 
]
åå 
public
çç 
IActionResult
çç 
AddSocialMedia
çç +
(
çç+ ,
SocialMedia
çç, 7
media
çç8 =
)
çç= >
{
éé 	
if
èè 
(
èè 
media
èè 
==
èè 
null
èè 
)
èè 
{
êê 
_logger
ëë 
.
ëë 
LogError
ëë  
(
ëë  !
$str
ëë! e
)
ëëe f
;
ëëf g
return
íí 

BadRequest
íí !
(
íí! "
new
íí" %
{
íí& '
message
íí( /
=
íí0 1
$str
íí2 [
}
íí\ ]
)
íí] ^
;
íí^ _
}
ìì 
try
îî 
{
ïï 
return
ññ 
_profileService
ññ &
.
ññ& '
AddSocialMedia
ññ' 5
(
ññ5 6
media
ññ6 ;
)
ññ; <
?
ññ= >
Ok
ññ? A
(
ññA B
new
ññB E
{
ññF G
message
ññH O
=
ññP Q
$str
ññR n
}
ñño p
)
ññp q
:
ññr s
Problem
ññt {
(
ññ{ |
$strññ| ô
)ññô ö
;ññö õ
}
óó 
catch
òò 
(
òò !
ValidationException
òò &
	exception
òò' 0
)
òò0 1
{
ôô 
_logger
öö 
.
öö 
LogInformation
öö &
(
öö& '
$"
öö' )
$str
öö) L
{
ööL M
	exception
ööM V
.
ööV W
Message
ööW ^
}
öö^ _
{
öö_ `
	exception
öö` i
.
ööi j

StackTrace
ööj t
}
ööt u
"
ööu v
)
ööv w
;
ööw x
return
õõ 

BadRequest
õõ !
(
õõ! "
	exception
õõ" +
.
õõ+ ,
Message
õõ, 3
)
õõ3 4
;
õõ4 5
}
úú 
catch
ùù 
(
ùù #
ArgumentNullException
ùù (
	exception
ùù) 2
)
ùù2 3
{
ûû 
_logger
üü 
.
üü 
LogInformation
üü &
(
üü& '
$"
üü' )
$str
üü) M
{
üüM N
	exception
üüN W
.
üüW X
Message
üüX _
}
üü_ `
{
üü` a
	exception
üüa j
.
üüj k

StackTrace
üük u
}
üüu v
"
üüv w
)
üüw x
;
üüx y
return
†† 

BadRequest
†† !
(
††! "
	exception
††" +
.
††+ ,
Message
††, 3
)
††3 4
;
††4 5
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
	exception
¢¢ &
)
¢¢& '
{
££ 
_logger
§§ 
.
§§ 
LogInformation
§§ &
(
§§& '
$"
§§' )
$str
§§) L
{
§§L M
	exception
§§M V
.
§§V W
Message
§§W ^
}
§§^ _
{
§§_ `
	exception
§§` i
.
§§i j

StackTrace
§§j t
}
§§t u
"
§§u v
)
§§v w
;
§§w x
return
•• 
Problem
•• 
(
•• 
$str
•• =
)
••= >
;
••> ?
}
¶¶ 
}
®® 	
[
©© 	

HttpDelete
©©	 
]
©© 
public
™™ 
IActionResult
™™  
DisableSocialMedia
™™ /
(
™™/ 0
int
™™0 3
SocialMedia_Id
™™4 B
)
™™B C
{
´´ 	
if
¨¨ 
(
¨¨ 
SocialMedia_Id
¨¨ 
<=
¨¨ !
$num
¨¨" #
)
¨¨# $
return
≠≠ 

BadRequest
≠≠ !
(
≠≠! "
new
≠≠" %
{
≠≠& '
message
≠≠( /
=
≠≠0 1
$str
≠≠2 \
}
≠≠] ^
)
≠≠^ _
;
≠≠_ `
try
∞∞ 
{
±± 
return
≤≤ 
_profileService
≤≤ &
.
≤≤& ' 
DisableSocialMedia
≤≤' 9
(
≤≤9 :
SocialMedia_Id
≤≤: H
)
≤≤H I
?
≤≤J K
Ok
≤≤L N
(
≤≤N O
new
≤≤O R
{
≤≤S T
message
≤≤U \
=
≤≤] ^
$str≤≤_ Ç
}≤≤É Ñ
)≤≤Ñ Ö
:≤≤Ü á
Problem≤≤à è
(≤≤è ê
$str≤≤ê Æ
)≤≤Æ Ø
;≤≤Ø ∞
}
≥≥ 
catch
¥¥ 
(
¥¥ #
ArgumentNullException
¥¥ (
	exception
¥¥) 2
)
¥¥2 3
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogInformation
∂∂ &
(
∂∂& '
$"
∂∂' )
$str
∂∂) Q
{
∂∂Q R
	exception
∂∂R [
.
∂∂[ \
Message
∂∂\ c
}
∂∂c d
{
∂∂d e
	exception
∂∂e n
.
∂∂n o

StackTrace
∂∂o y
}
∂∂y z
"
∂∂z {
)
∂∂{ |
;
∂∂| }
return
∑∑ 

BadRequest
∑∑ !
(
∑∑! "
	exception
∑∑" +
.
∑∑+ ,
Message
∑∑, 3
)
∑∑3 4
;
∑∑4 5
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
	exception
ππ &
)
ππ& '
{
∫∫ 
_logger
ªª 
.
ªª 
LogInformation
ªª &
(
ªª& '
$"
ªª' )
$str
ªª) i
{
ªªi j
	exception
ªªj s
}
ªªs t
"
ªªt u
)
ªªu v
;
ªªv w
return
ºº 
Problem
ºº 
(
ºº 
$str
ºº B
)
ººB C
;
ººC D
}
ΩΩ 
}
øø 	
[
¿¿ 	
HttpPost
¿¿	 
]
¿¿ 
public
¡¡ 
IActionResult
¡¡ 
AddAchievement
¡¡ +
(
¡¡+ ,
Achievements
¡¡, 8
achievement
¡¡9 D
)
¡¡D E
{
¬¬ 	
if
√√ 
(
√√ 
achievement
√√ 
==
√√ 
null
√√ #
)
√√# $
{
ƒƒ 
_logger
≈≈ 
.
≈≈ 
LogError
≈≈  
(
≈≈  !
$str
≈≈! e
)
≈≈e f
;
≈≈f g
return
∆∆ 

BadRequest
∆∆ !
(
∆∆! "
new
∆∆" %
{
∆∆& '
message
∆∆( /
=
∆∆0 1
$str
∆∆2 S
}
∆∆T U
)
∆∆U V
;
∆∆V W
}
«« 
try
»» 
{
…… 
return
   
_profileService
   &
.
  & '
AddAchievements
  ' 6
(
  6 7
achievement
  7 B
)
  B C
?
  D E
Ok
  F H
(
  H I
new
  I L
{
  M N
message
  O V
=
  W X
$str
  Y u
}
  v w
)
  w x
:
  y z
Problem  { Ç
(  Ç É
$str  É †
)  † °
;  ° ¢
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ !
ValidationException
ÃÃ &
	exception
ÃÃ' 0
)
ÃÃ0 1
{
ÕÕ 
_logger
ŒŒ 
.
ŒŒ 
LogInformation
ŒŒ &
(
ŒŒ& '
$"
ŒŒ' )
$str
ŒŒ) L
{
ŒŒL M
	exception
ŒŒM V
.
ŒŒV W
Message
ŒŒW ^
}
ŒŒ^ _
{
ŒŒ_ `
	exception
ŒŒ` i
.
ŒŒi j

StackTrace
ŒŒj t
}
ŒŒt u
"
ŒŒu v
)
ŒŒv w
;
ŒŒw x
return
œœ 

BadRequest
œœ !
(
œœ! "
	exception
œœ" +
.
œœ+ ,
Message
œœ, 3
)
œœ3 4
;
œœ4 5
}
–– 
catch
—— 
(
—— #
ArgumentNullException
—— (
	exception
——) 2
)
——2 3
{
““ 
_logger
”” 
.
”” 
LogInformation
”” &
(
””& '
$"
””' )
$str
””) M
{
””M N
	exception
””N W
.
””W X
Message
””X _
}
””_ `
{
””` a
	exception
””a j
.
””j k

StackTrace
””k u
}
””u v
"
””v w
)
””w x
;
””x y
return
‘‘ 

BadRequest
‘‘ !
(
‘‘! "
	exception
‘‘" +
.
‘‘+ ,
Message
‘‘, 3
)
‘‘3 4
;
‘‘4 5
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
	exception
÷÷ &
)
÷÷& '
{
◊◊ 
_logger
ÿÿ 
.
ÿÿ 
LogInformation
ÿÿ &
(
ÿÿ& '
$"
ÿÿ' )
$str
ÿÿ) L
{
ÿÿL M
	exception
ÿÿM V
.
ÿÿV W
Message
ÿÿW ^
}
ÿÿ^ _
{
ÿÿ_ `
	exception
ÿÿ` i
.
ÿÿi j

StackTrace
ÿÿj t
}
ÿÿt u
"
ÿÿu v
)
ÿÿv w
;
ÿÿw x
return
ŸŸ 
Problem
ŸŸ 
(
ŸŸ 
$str
ŸŸ =
)
ŸŸ= >
;
ŸŸ> ?
}
⁄⁄ 
}
€€ 	
[
‹‹ 	
HttpGet
‹‹	 
]
‹‹ 
public
›› 
IActionResult
››  
GetallAchievements
›› /
(
››/ 0
)
››0 1
{
ﬁﬁ 	
try
ﬂﬂ 
{
‡‡ 
return
‚‚ 
Ok
‚‚ 
(
‚‚ 
_profileService
‚‚ )
.
‚‚) * 
GetallAchievements
‚‚* <
(
‚‚< =
)
‚‚= >
)
‚‚> ?
;
‚‚? @
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
	exception
‰‰ &
)
‰‰& '
{
ÂÂ 
_logger
ÊÊ 
.
ÊÊ 
LogInformation
ÊÊ &
(
ÊÊ& '
$"
ÊÊ' )
$str
ÊÊ) y
{
ÊÊy z
	exceptionÊÊz É
.ÊÊÉ Ñ
MessageÊÊÑ ã
}ÊÊã å
{ÊÊå ç
	exceptionÊÊç ñ
.ÊÊñ ó

StackTraceÊÊó °
}ÊÊ° ¢
"ÊÊ¢ £
)ÊÊ£ §
;ÊÊ§ •
return
ÁÁ 
Problem
ÁÁ 
(
ÁÁ 
	exception
ÁÁ (
.
ÁÁ( )
Message
ÁÁ) 0
)
ÁÁ0 1
;
ÁÁ1 2
}
ËË 
}
ÎÎ 	
[
ÏÏ 	
HttpGet
ÏÏ	 
]
ÏÏ 
public
ÌÌ 
IActionResult
ÌÌ 1
#GetAllAchievementDetailsByProfileId
ÌÌ @
(
ÌÌ@ A
int
ÌÌA D
	Profileid
ÌÌE N
)
ÌÌN O
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
	Profileid
ÔÔ 
<=
ÔÔ 
$num
ÔÔ 
)
ÔÔ 
return
 

BadRequest
 !
(
! "
new
" %
{
& '
message
( /
=
0 1
$str
2 X
}
Y Z
)
Z [
;
[ \
try
ÒÒ 
{
ÚÚ 
return
ÙÙ 
Ok
ÙÙ 
(
ÙÙ 
_profileService
ÙÙ )
.
ÙÙ) *1
#GetAllAchievementDetailsByProfileId
ÙÙ* M
(
ÙÙM N
	Profileid
ÙÙN W
)
ÙÙW X
)
ÙÙX Y
;
ÙÙY Z
}
ıı 
catch
ˆˆ 
(
ˆˆ #
ArgumentNullException
ˆˆ (
	exception
ˆˆ) 2
)
ˆˆ2 3
{
˜˜ 
_logger
¯¯ 
.
¯¯ 
LogInformation
¯¯ &
(
¯¯& '
$"
¯¯' )
$str
¯¯) b
{
¯¯b c
	exception
¯¯c l
.
¯¯l m
Message
¯¯m t
}
¯¯t u
{
¯¯u v
	exception
¯¯v 
.¯¯ Ä

StackTrace¯¯Ä ä
}¯¯ä ã
"¯¯ã å
)¯¯å ç
;¯¯ç é
return
˘˘ 

BadRequest
˘˘ !
(
˘˘! "
	exception
˘˘" +
.
˘˘+ ,
Message
˘˘, 3
)
˘˘3 4
;
˘˘4 5
}
˙˙ 
catch
˚˚ 
(
˚˚ 
	Exception
˚˚ 
	exception
˚˚ &
)
˚˚& '
{
¸¸ 
_logger
˝˝ 
.
˝˝ 
LogInformation
˝˝ &
(
˝˝& '
$"
˝˝' )
$str˝˝) ä
{˝˝ä ã
	exception˝˝ã î
.˝˝î ï
Message˝˝ï ú
}˝˝ú ù
{˝˝ù û
	exception˝˝û ß
.˝˝ß ®

StackTrace˝˝® ≤
}˝˝≤ ≥
"˝˝≥ ¥
)˝˝¥ µ
;˝˝µ ∂
return
˛˛ 
Problem
˛˛ 
(
˛˛ 
	exception
˛˛ (
.
˛˛( )
Message
˛˛) 0
)
˛˛0 1
;
˛˛1 2
}
ˇˇ 
}
ÄÄ 	
[
ÅÅ 	

HttpDelete
ÅÅ	 
]
ÅÅ 
public
ÇÇ 
IActionResult
ÇÇ !
DisableAchievements
ÇÇ 0
(
ÇÇ0 1
int
ÇÇ1 4
achievementId
ÇÇ5 B
)
ÇÇB C
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
achievementId
ÑÑ 
<=
ÑÑ  
$num
ÑÑ! "
)
ÑÑ" #
return
ÖÖ 

BadRequest
ÖÖ !
(
ÖÖ! "
new
ÖÖ" %
{
ÖÖ& '
message
ÖÖ( /
=
ÖÖ0 1
$str
ÖÖ2 \
}
ÖÖ] ^
)
ÖÖ^ _
;
ÖÖ_ `
try
àà 
{
ââ 
return
ää 
_profileService
ää &
.
ää& ' 
DisableAchievement
ää' 9
(
ää9 :
achievementId
ää: G
)
ääG H
?
ääI J
Ok
ääK M
(
ääM N
new
ääN Q
{
ääR S
message
ääT [
=
ää\ ]
$strää^ Ä
}ääÅ Ç
)ääÇ É
:ääÑ Ö
ProblemääÜ ç
(ääç é
$strääé ¨
)ää¨ ≠
;ää≠ Æ
}
ãã 
catch
åå 
(
åå #
ArgumentNullException
åå (
	exception
åå) 2
)
åå2 3
{
çç 
_logger
éé 
.
éé 
LogInformation
éé &
(
éé& '
$"
éé' )
$str
éé) R
{
ééR S
	exception
ééS \
.
éé\ ]
Message
éé] d
}
ééd e
{
éée f
	exception
ééf o
.
ééo p

StackTrace
éép z
}
ééz {
"
éé{ |
)
éé| }
;
éé} ~
return
èè 

BadRequest
èè !
(
èè! "
	exception
èè" +
.
èè+ ,
Message
èè, 3
)
èè3 4
;
èè4 5
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
	exception
ëë &
)
ëë& '
{
íí 
_logger
ìì 
.
ìì 
LogInformation
ìì &
(
ìì& '
$"
ìì' )
$str
ìì) U
{
ììU V
	exception
ììV _
.
ìì_ `
Message
ìì` g
}
ììg h
{
ììh i
	exception
ììi r
.
ììr s

StackTrace
ììs }
}
ìì} ~
"
ìì~ 
)ìì Ä
;ììÄ Å
return
îî 
Problem
îî 
(
îî 
	exception
îî (
.
îî( )
Message
îî) 0
)
îî0 1
;
îî1 2
}
ïï 
}
ññ 	
[
óó 	
HttpGet
óó	 
]
óó 
public
òò 
IActionResult
òò 
GetallProfiles
òò +
(
òò+ ,
)
òò, -
{
ôô 	
try
öö 
{
õõ 
return
ùù 
Ok
ùù 
(
ùù 
_profileService
ùù )
.
ùù) *
GetallProfiles
ùù* 8
(
ùù8 9
)
ùù9 :
)
ùù: ;
;
ùù; <
}
ûû 
catch
üü 
(
üü 
	Exception
üü 
	exception
üü &
)
üü& '
{
†† 
_logger
°° 
.
°° 
LogInformation
°° &
(
°°& '
$"
°°' )
$str
°°) u
{
°°u v
	exception
°°v 
.°° Ä
Message°°Ä á
}°°á à
{°°à â
	exception°°â í
.°°í ì

StackTrace°°ì ù
}°°ù û
"°°û ü
)°°ü †
;°°† °
return
¢¢ 
Problem
¢¢ 
(
¢¢ 
	exception
¢¢ (
.
¢¢( )
Message
¢¢) 0
)
¢¢0 1
;
¢¢1 2
}
££ 
}
§§ 	
[
ßß 	
HttpGet
ßß	 
]
ßß 
public
®® 
IActionResult
®® 
GetProfileById
®® +
(
®®+ ,
int
®®, /
id
®®0 2
)
®®2 3
{
©© 	
if
™™ 
(
™™ 
id
™™ 
<=
™™ 
$num
™™ 
)
™™ 
{
´´ 
_logger
¨¨ 
.
¨¨ 
LogError
¨¨  
(
¨¨  !
$str
¨¨! d
)
¨¨d e
;
¨¨e f
return
≠≠ 

BadRequest
≠≠ !
(
≠≠! "
new
≠≠" %
{
≠≠& '
message
≠≠( /
=
≠≠0 1
$str
≠≠2 ]
}
≠≠^ _
)
≠≠_ `
;
≠≠` a
}
ÆÆ 
try
ØØ 
{
∞∞ 
return
≤≤ 
Ok
≤≤ 
(
≤≤ 
_profileService
≤≤ )
.
≤≤) *
GetProfileById
≤≤* 8
(
≤≤8 9
id
≤≤9 ;
)
≤≤; <
)
≤≤< =
;
≤≤= >
}
≥≥ 
catch
¥¥ 
(
¥¥ #
ArgumentNullException
¥¥ (
	exception
¥¥) 2
)
¥¥2 3
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogInformation
∂∂ &
(
∂∂& '
$"
∂∂' )
$str
∂∂) M
{
∂∂M N
	exception
∂∂N W
.
∂∂W X
Message
∂∂X _
}
∂∂_ `
{
∂∂` a
	exception
∂∂a j
.
∂∂j k

StackTrace
∂∂k u
}
∂∂u v
"
∂∂v w
)
∂∂w x
;
∂∂x y
return
∑∑ 

BadRequest
∑∑ !
(
∑∑! "
	exception
∑∑" +
.
∑∑+ ,
Message
∑∑, 3
)
∑∑3 4
;
∑∑4 5
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
	exception
ππ &
)
ππ& '
{
∫∫ 
_logger
ªª 
.
ªª 
LogInformation
ªª &
(
ªª& '
$"
ªª' )
$str
ªª) u
{
ªªu v
	exception
ªªv 
.ªª Ä
MessageªªÄ á
}ªªá à
{ªªà â
	exceptionªªâ í
.ªªí ì

StackTraceªªì ù
}ªªù û
"ªªû ü
)ªªü †
;ªª† °
return
ºº 
Problem
ºº 
(
ºº 
	exception
ºº (
.
ºº( )
Message
ºº) 0
)
ºº0 1
;
ºº1 2
}
ΩΩ 
}
ææ 	
[
øø 	
HttpGet
øø	 
]
øø 
public
¿¿ 
IActionResult
¿¿ '
GetProfileIdByGivenUserId
¿¿ 6
(
¿¿6 7
int
¿¿7 :
userId
¿¿; A
)
¿¿A B
{
¡¡ 	
try
¬¬ 
{
√√ 
return
ƒƒ 
Ok
ƒƒ 
(
ƒƒ 
_profileService
ƒƒ )
.
ƒƒ) *"
GetProfileIdByUserId
ƒƒ* >
(
ƒƒ> ?
userId
ƒƒ? E
)
ƒƒE F
)
ƒƒF G
;
ƒƒG H
}
≈≈ 
catch
∆∆ 
(
∆∆ !
ValidationException
∆∆ &
	exception
∆∆' 0
)
∆∆0 1
{
«« 
_logger
…… 
.
…… 
LogInformation
…… &
(
……& '
$"
……' )
$str
……) X
{
……X Y
	exception
……Y b
.
……b c
Message
……c j
}
……j k
{
……k l
	exception
……l u
.
……u v

StackTrace……v Ä
}……Ä Å
"……Å Ç
)……Ç É
;……É Ñ
return
ÀÀ 

BadRequest
ÀÀ !
(
ÀÀ! "
	exception
ÀÀ" +
.
ÀÀ+ ,
Message
ÀÀ, 3
)
ÀÀ3 4
;
ÀÀ4 5
}
ÕÕ 
}
œœ 	
[
–– 	
HttpGet
––	 
]
–– 
public
—— 
IActionResult
—— "
GetProfileIdByUserId
—— 1
(
——1 2
)
——2 3
{
““ 	
try
”” 
{
‘‘ 
int
’’ 
currentUser
’’ 
=
’’  !
Convert
’’" )
.
’’) *
ToInt32
’’* 1
(
’’1 2
User
’’2 6
.
’’6 7
	FindFirst
’’7 @
(
’’@ A
$str
’’A I
)
’’I J
?
’’J K
.
’’K L
Value
’’L Q
)
’’Q R
;
’’R S
return
÷÷ 
Ok
÷÷ 
(
÷÷ 
_profileService
÷÷ )
.
÷÷) *"
GetProfileIdByUserId
÷÷* >
(
÷÷> ?
currentUser
÷÷? J
)
÷÷J K
)
÷÷K L
;
÷÷M N
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
	exception
ÿÿ &
)
ÿÿ& '
{
ŸŸ 
_logger
€€ 
.
€€ 
LogInformation
€€ &
(
€€& '
$"
€€' )
$str
€€) S
{
€€S T
	exception
€€T ]
.
€€] ^
Message
€€^ e
}
€€e f
{
€€f g
	exception
€€g p
.
€€p q

StackTrace
€€q {
}
€€{ |
"
€€| }
)
€€} ~
;
€€~ 
return
›› 

BadRequest
›› !
(
››! "
	exception
››" +
.
››+ ,
Message
››, 3
)
››3 4
;
››4 5
}
ﬂﬂ 
}
·· 	
[
‚‚ 	
AllowAnonymous
‚‚	 
]
‚‚ 
[
„„ 	
HttpGet
„„	 
]
„„ 
public
‰‰ 
IActionResult
‰‰ 
GetProfileCount
‰‰ ,
(
‰‰, -
)
‰‰- .
{
ÂÂ 	
try
ÊÊ 
{
ÁÁ 
int
ËË  
currentdesignation
ËË &
=
ËË' (
Convert
ËË) 0
.
ËË0 1
ToInt32
ËË1 8
(
ËË8 9
User
ËË9 =
.
ËË= >
	FindFirst
ËË> G
(
ËËG H
$str
ËËH W
)
ËËW X
?
ËËX Y
.
ËËY Z
Value
ËËZ _
)
ËË_ `
;
ËËa b
return
ÈÈ 
Ok
ÈÈ 
(
ÈÈ 
_profileService
ÈÈ )
.
ÈÈ) *
GetProfileCount
ÈÈ* 9
(
ÈÈ9 : 
currentdesignation
ÈÈ: L
)
ÈÈL M
)
ÈÈM N
;
ÈÈN O
}
ÎÎ 
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
	exception
ÏÏ &
)
ÏÏ& '
{
ÌÌ 
_logger
ÓÓ 
.
ÓÓ 
LogInformation
ÓÓ &
(
ÓÓ& '
$"
ÓÓ' )
$str
ÓÓ) v
{
ÓÓv w
	exceptionÓÓw Ä
.ÓÓÄ Å
MessageÓÓÅ à
}ÓÓà â
{ÓÓâ ä
	exceptionÓÓä ì
.ÓÓì î

StackTraceÓÓî û
}ÓÓû ü
"ÓÓü †
)ÓÓ† °
;ÓÓ° ¢
return
ÔÔ 
Problem
ÔÔ 
(
ÔÔ 
	exception
ÔÔ (
.
ÔÔ( )
Message
ÔÔ) 0
)
ÔÔ0 1
;
ÔÔ1 2
}
 
}
ÒÒ 	
[
ÚÚ 	
HttpPost
ÚÚ	 
]
ÚÚ 
public
ÛÛ 
IActionResult
ÛÛ  
GetFilteredProfile
ÛÛ /
(
ÛÛ/ 0
CascadeFilter
ÛÛ0 =
filterValues
ÛÛ> J
)
ÛÛJ K
{
ÙÙ 	
try
ıı 
{
ˆˆ 
int
˜˜  
currentdesignation
˜˜ &
=
˜˜' (
Convert
˜˜) 0
.
˜˜0 1
ToInt32
˜˜1 8
(
˜˜8 9
User
˜˜9 =
.
˜˜= >
	FindFirst
˜˜> G
(
˜˜G H
$str
˜˜H W
)
˜˜W X
?
˜˜X Y
.
˜˜Y Z
Value
˜˜Z _
)
˜˜_ `
;
˜˜a b
return
¯¯ 
Ok
¯¯ 
(
¯¯ 
_profileService
¯¯ )
.
¯¯) * 
GetFilteredProfile
¯¯* <
(
¯¯< =
filterValues
¯¯= I
.
¯¯I J
UserName
¯¯J R
!
¯¯R S
,
¯¯S T
filterValues
¯¯T `
.
¯¯` a
DesignationId
¯¯a n
,
¯¯n o
filterValues
¯¯p |
.
¯¯| }
DomainID¯¯} Ö
,¯¯Ö Ü
filterValues¯¯á ì
.¯¯ì î
TechnologyId¯¯î †
,¯¯† °
filterValues¯¯¢ Æ
.¯¯Æ Ø
	CollegeId¯¯Ø ∏
,¯¯∏ π
filterValues¯¯∫ ∆
.¯¯∆ «
ProfileStatusId¯¯« ÷
,¯¯÷ ◊"
currentdesignation¯¯◊ È
)¯¯È Í
)¯¯Í Î
;¯¯Î Ï
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
	exception
˙˙ &
)
˙˙& '
{
˚˚ 
_logger
¸¸ 
.
¸¸ 
LogError
¸¸  
(
¸¸  !
$"
¸¸! #
$str
¸¸# L
{
¸¸L M
	exception
¸¸M V
.
¸¸V W
Message
¸¸W ^
}
¸¸^ _
{
¸¸_ `
	exception
¸¸` i
.
¸¸i j

StackTrace
¸¸j t
}
¸¸t u
"
¸¸u v
)
¸¸v w
;
¸¸w x
return
˝˝ 
Problem
˝˝ 
(
˝˝ 
	exception
˝˝ (
.
˝˝( )
Message
˝˝) 0
)
˝˝0 1
;
˝˝1 2
}
˛˛ 
}
ˇˇ 	
[
ÄÄ 	
HttpPost
ÄÄ	 
]
ÄÄ 
public
ÅÅ 
IActionResult
ÅÅ #
AcceptOrRejectProfile
ÅÅ 2
(
ÅÅ2 3
int
ÅÅ3 6
	profileId
ÅÅ7 @
,
ÅÅ@ A
int
ÅÅB E
response
ÅÅF N
)
ÅÅN O
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
	profileId
ÉÉ 
<=
ÉÉ 
$num
ÉÉ 
)
ÉÉ 
{
ÑÑ 
_logger
ÖÖ 
.
ÖÖ 
LogError
ÖÖ  
(
ÖÖ  !
$str
ÖÖ! f
)
ÖÖf g
;
ÖÖg h
return
ÜÜ 

BadRequest
ÜÜ !
(
ÜÜ! "
new
ÜÜ" %
{
ÜÜ& '
message
ÜÜ( /
=
ÜÜ0 1
$str
ÜÜ2 M
}
ÜÜN O
)
ÜÜO P
;
ÜÜP Q
}
áá 
try
àà 
{
ââ 
_profileService
ää 
.
ää  #
AcceptOrRejectProfile
ää  5
(
ää5 6
	profileId
ää6 ?
,
ää? @
response
ääA I
)
ääI J
;
ääJ K
return
ãã 
Ok
ãã 
(
ãã 
new
ãã 
{
ãã 
message
ãã  '
=
ãã( )
$str
ãã* B
}
ããC D
)
ããD E
;
ããE F
}
åå 
catch
çç 
(
çç !
ValidationException
çç &
	exception
çç' 0
)
çç0 1
{
éé 
_logger
èè 
.
èè 
LogInformation
èè &
(
èè& '
$"
èè' )
$str
èè) T
{
èèT U
	exception
èèU ^
.
èè^ _
Message
èè_ f
}
èèf g
{
èèg h
	exception
èèh q
.
èèq r

StackTrace
èèr |
}
èè| }
"
èè} ~
)
èè~ 
;èè Ä
return
êê 

BadRequest
êê !
(
êê! "
	exception
êê" +
.
êê+ ,
Message
êê, 3
)
êê3 4
;
êê4 5
}
ëë 
catch
íí 
(
íí 
	Exception
íí 
	exception
íí &
)
íí& '
{
ìì 
_logger
îî 
.
îî 
LogInformation
îî &
(
îî& '
$"
îî' )
$str
îî) T
{
îîT U
	exception
îîU ^
.
îî^ _
Message
îî_ f
}
îîf g
{
îîg h
	exception
îîh q
.
îîq r

StackTrace
îîr |
}
îî| }
"
îî} ~
)
îî~ 
;îî Ä
return
ïï 
Problem
ïï 
(
ïï 
$str
ïï =
)
ïï= >
;
ïï> ?
}
ññ 
}
óó 	
[
òò 	
HttpPost
òò	 
]
òò 
public
ôô 
IActionResult
ôô 
RequestToUpdate
ôô ,
(
ôô, -
int
ôô- 0
	profileId
ôô1 :
)
ôô: ;
{
öö 	
if
õõ 
(
õõ 
	profileId
õõ 
<=
õõ 
$num
õõ 
)
õõ 
{
úú 
_logger
ùù 
.
ùù 
LogError
ùù  
(
ùù  !
$str
ùù! `
)
ùù` a
;
ùùa b
return
ûû 

BadRequest
ûû !
(
ûû! "
new
ûû" %
{
ûû& '
message
ûû( /
=
ûû0 1
$str
ûû2 M
}
ûûN O
)
ûûO P
;
ûûP Q
}
üü 
try
†† 
{
°° 
_mailService
¢¢ 
.
¢¢ !
RequestToUpdateFile
¢¢ 0
(
¢¢0 1
	profileId
¢¢1 :
)
¢¢: ;
;
¢¢; <
return
££ 
Ok
££ 
(
££ 
new
££ 
{
££ 
message
££  '
=
££( )
$str
££) ^
}
££^ _
)
££_ `
;
££` a
}
§§ 
catch
•• 
(
•• !
ValidationException
•• &
	exception
••' 0
)
••0 1
{
¶¶ 
_logger
ßß 
.
ßß 
LogInformation
ßß &
(
ßß& '
$"
ßß' )
$str
ßß) N
{
ßßN O
	exception
ßßO X
.
ßßX Y
Message
ßßY `
}
ßß` a
{
ßßa b
	exception
ßßb k
.
ßßk l

StackTrace
ßßl v
}
ßßv w
"
ßßw x
)
ßßx y
;
ßßy z
return
®® 

BadRequest
®® !
(
®®! "
	exception
®®" +
.
®®+ ,
Message
®®, 3
)
®®3 4
;
®®4 5
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
	exception
™™ &
)
™™& '
{
´´ 
_logger
¨¨ 
.
¨¨ 
LogInformation
¨¨ &
(
¨¨& '
$"
¨¨' )
$str
¨¨) N
{
¨¨N O
	exception
¨¨O X
.
¨¨X Y
Message
¨¨Y `
}
¨¨` a
{
¨¨a b
	exception
¨¨b k
.
¨¨k l

StackTrace
¨¨l v
}
¨¨v w
"
¨¨w x
)
¨¨x y
;
¨¨y z
return
≠≠ 
Problem
≠≠ 
(
≠≠ 
$str
≠≠ =
)
≠≠= >
;
≠≠> ?
}
ÆÆ 
}
ØØ 	
[
∞∞ 	
HttpPost
∞∞	 
]
∞∞ 
public
±± 
IActionResult
±± 
ShareProfile
±± )
(
±±) *
string
±±* 0

profileUrl
±±1 ;
,
±±; <
int
±±= @
	profileId
±±A J
,
±±J K
string
±±L R
toEmailName
±±S ^
)
±±^ _
{
≤≤ 	
if
≥≥ 
(
≥≥ 
String
≥≥ 
.
≥≥ 
IsNullOrEmpty
≥≥ $
(
≥≥$ %

profileUrl
≥≥% /
)
≥≥/ 0
)
≥≥0 1
{
¥¥ 
_logger
µµ 
.
µµ 
LogError
µµ  
(
µµ  !
$str
µµ! ]
)
µµ] ^
;
µµ^ _
return
∂∂ 

BadRequest
∂∂ !
(
∂∂! "
new
∂∂" %
{
∂∂& '
message
∂∂( /
=
∂∂0 1
$str
∂∂2 M
}
∂∂N O
)
∂∂O P
;
∂∂P Q
}
∑∑ 
try
∏∏ 
{
ππ 
_mailService
∫∫ 
.
∫∫ 
ShareProfile
∫∫ )
(
∫∫) *

profileUrl
∫∫* 4
,
∫∫4 5
	profileId
∫∫6 ?
,
∫∫? @
toEmailName
∫∫A L
)
∫∫L M
;
∫∫M N
return
ªª 
Ok
ªª 
(
ªª 
$str
ªª ?
)
ªª? @
;
ªª@ A
}
ºº 
catch
ΩΩ 
(
ΩΩ !
ValidationException
ΩΩ &
	exception
ΩΩ' 0
)
ΩΩ0 1
{
ææ 
_logger
øø 
.
øø 
LogInformation
øø &
(
øø& '
$"
øø' )
$str
øø) K
{
øøK L
	exception
øøL U
.
øøU V
Message
øøV ]
}
øø] ^
{
øø^ _
	exception
øø_ h
.
øøh i

StackTrace
øøi s
}
øøs t
"
øøt u
)
øøu v
;
øøv w
return
¿¿ 

BadRequest
¿¿ !
(
¿¿! "
	exception
¿¿" +
.
¿¿+ ,
Message
¿¿, 3
)
¿¿3 4
;
¿¿4 5
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
	exception
¬¬ &
)
¬¬& '
{
√√ 
_logger
ƒƒ 
.
ƒƒ 
LogInformation
ƒƒ &
(
ƒƒ& '
$"
ƒƒ' )
$str
ƒƒ) K
{
ƒƒK L
	exception
ƒƒL U
.
ƒƒU V
Message
ƒƒV ]
}
ƒƒ] ^
{
ƒƒ^ _
	exception
ƒƒ_ h
.
ƒƒh i

StackTrace
ƒƒi s
}
ƒƒs t
"
ƒƒt u
)
ƒƒu v
;
ƒƒv w
return
≈≈ 
Problem
≈≈ 
(
≈≈ 
$str
≈≈ =
)
≈≈= >
;
≈≈> ?
}
∆∆ 
}
«« 	
[
»» 	
HttpPut
»»	 
]
»» 
public
…… 
IActionResult
…… !
updateProfileStatus
…… 0
(
……0 1
Profile
……1 8
profile
……9 @
)
……@ A
{
   	
if
ÀÀ 
(
ÀÀ 
profile
ÀÀ 
.
ÀÀ 
Equals
ÀÀ 
(
ÀÀ 
null
ÀÀ #
)
ÀÀ# $
)
ÀÀ$ %
{
ÃÃ 
_logger
ÕÕ 
.
ÕÕ 
LogError
ÕÕ  
(
ÕÕ  !
$str
ÕÕ! a
)
ÕÕa b
;
ÕÕb c
return
ŒŒ 

BadRequest
ŒŒ !
(
ŒŒ! "
new
ŒŒ" %
{
ŒŒ& '
message
ŒŒ( /
=
ŒŒ0 1
$str
ŒŒ2 J
}
ŒŒK L
)
ŒŒL M
;
ŒŒM N
}
œœ 
try
–– 
{
—— 
return
““ 
_profileService
““ &
.
““& '!
updateProfileStatus
““' :
(
““: ;
profile
““; B
)
““B C
?
““C D
Ok
““E G
(
““G H
new
““H K
{
““K L
message
““L S
=
““S T
$str
““T u
}
““u v
)
““v w
:
““w x
Problem““y Ä
(““Ä Å
$str““Å ü
)““ü †
;““† °
}
‘‘ 
catch
’’ 
(
’’ !
ValidationException
’’ &
	exception
’’' 0
)
’’0 1
{
÷÷ 
_logger
◊◊ 
.
◊◊ 
LogInformation
◊◊ &
(
◊◊& '
$"
◊◊' )
$str
◊◊) R
{
◊◊R S
	exception
◊◊S \
.
◊◊\ ]
Message
◊◊] d
}
◊◊d e
{
◊◊e f
	exception
◊◊f o
.
◊◊o p

StackTrace
◊◊p z
}
◊◊z {
"
◊◊{ |
)
◊◊| }
;
◊◊} ~
return
ÿÿ 

BadRequest
ÿÿ !
(
ÿÿ! "
	exception
ÿÿ" +
.
ÿÿ+ ,
Message
ÿÿ, 3
)
ÿÿ3 4
;
ÿÿ4 5
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
	Exception
⁄⁄ 
	exception
⁄⁄ &
)
⁄⁄& '
{
€€ 
_logger
‹‹ 
.
‹‹ 
LogInformation
‹‹ &
(
‹‹& '
$"
‹‹' )
$str
‹‹) R
{
‹‹R S
	exception
‹‹S \
.
‹‹\ ]
Message
‹‹] d
}
‹‹d e
{
‹‹e f
	exception
‹‹f o
.
‹‹o p

StackTrace
‹‹p z
}
‹‹z {
"
‹‹{ |
)
‹‹| }
;
‹‹} ~
return
›› 
Problem
›› 
(
›› 
$str
›› =
)
››= >
;
››> ?
}
ﬁﬁ 
}
ﬂﬂ 	
}
‡‡ 
}·· ﬂ
_C:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\ProfileStatusController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
]  
public		 
class		 #
ProfileStatusController		 $
:		% &
ControllerBase		' 5
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 	#
ProfileStatusController
 !
(! "
ILogger" )
<) *#
ProfileStatusController* A
>A B
loggerC I
)I J
{ 
_logger 
= 
logger 
; 
} 
private 
readonly "
IProfileStatusServices + 
ProfileStatusService, @
=A B$
ProfileStatusDataFactoryC [
.[ \)
GetProfileStatusServiceObject\ y
(y z
)z {
;{ |
[ 
HttpGet 
] 
public 

IActionResult 
ViewProfileStatuss +
(+ ,
), -
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ B
)B C
;C D
return 
Ok 
(  
ProfileStatusService *
.* +
ViewProfileStatuss+ =
(= >
)> ?
)? @
;@ A
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$" !
$str! N
{N O
	exceptionO X
.X Y
MessageY `
}` a
{a b
	exceptionb k
.k l

StackTracel v
}v w
"w x
)x y
;y z
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" ¿
\C:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\TechnologyController.cs
	namespace 	
PMS_API
 
; 
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
]  
public		 
class		  
TechnologyController		 !
:		" #
ControllerBase		$ 2
{

 
private 
readonly 
ILogger 
_logger $
;$ %
public 
 
TechnologyController 
(  
ILogger  '
<' ( 
TechnologyController( <
>< =
logger> D
)D E
{ 
_logger 
= 
logger 
; 
} 
private 
readonly 
ITechnologyServices (
technologyService) :
=; <!
TechnologyDataFactory= R
.R S&
GetTechnologyServiceObjectS m
(m n
)n o
;o p
[ 
HttpGet 
] 
public 

IActionResult 
ViewTechnologies )
() *
)* +
{ 
try 
{ 	
_logger 
. 
LogInformation #
(# $
$str$ @
)@ A
;A B
return 
Ok 
( 
technologyService '
.' (
ViewTechnologies( 8
(8 9
)9 :
): ;
;; <
} 	
catch 
( 
	Exception 
	exception "
)" #
{ 	
_logger 
. 
LogError 
( 
$"  
$str  H
{H I
	exceptionI R
.R S
MessageS Z
}Z [
{[ \
	exception\ e
.e f

StackTracef p
}p q
"q r
)r s
;s t
return 
Problem 
( 
	exception $
.$ %
Message% ,
), -
;- .
} 	
}   
}"" ºï
VC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Controllers\UserController.cs
	namespace 	
PMS_API
 
{ 
[		 
ApiController		 
]		 
[

 
Route

 

(


 
$str

 "
)

" #
]

# $
public 

class 
UserController 
:  !

Controller" ,
{ 
private 
readonly 
IUserServices &
_userServices' 4
;4 5
private 
readonly 
ILogger  
_logger! (
;( )
public 
UserController 
( 
IUserServices +
userServices, 8
,8 9
ILogger: A
<A B
UserControllerB P
>P Q
loggerR X
)X Y
{ 	
_userServices 
= 
userServices (
;( )
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IActionResult 
Getallusers (
(( )
int) ,
profilestatusId- <
)< =
{ 	
try 
{ 
int 
currentDesignation &
=' (
Convert) 0
.0 1
ToInt321 8
(8 9
User9 =
.= >
	FindFirst> G
(G H
$strH W
)W X
?X Y
.Y Z
ValueZ _
)_ `
;` a
return 
Ok 
( 
_userServices '
.' (
GetallUsers( 3
(3 4
profilestatusId4 C
,C D
currentDesignationE W
)W X
)X Y
;Y Z
} 
catch 
( 
	Exception 
	exception &
)& '
{   
_logger!! 
.!! 
LogInformation!! &
(!!& '
$"!!' )
$str!!) o
{!!o p
	exception!!p y
.!!y z
Message	!!z Å
}
!!Å Ç
{
!!Ç É
	exception
!!É å
.
!!å ç

StackTrace
!!ç ó
}
!!ó ò
"
!!ò ô
)
!!ô ö
;
!!ö õ
return"" 
Problem"" 
("" 
	exception"" (
.""( )
Message"") 0
)""0 1
;""1 2
}## 
}$$ 	
[%% 	
HttpGet%%	 
]%% 
public&& 
IActionResult&& 
GetUserProfile&& +
(&&+ ,
)&&, -
{'' 	
try)) 
{** 
int,, 
currentUser,, 
=,,  !
Convert,," )
.,,) *
ToInt32,,* 1
(,,1 2
User,,2 6
.,,6 7
	FindFirst,,7 @
(,,@ A
$str,,A I
),,I J
?,,J K
.,,K L
Value,,L Q
),,Q R
;,,R S
return.. 
Ok.. 
(.. 
_userServices.. '
...' (
GetUser..( /
(../ 0
currentUser..0 ;
)..; <
)..< =
;..= >
}00 
catch22 
(22 
	Exception22 
	exception22 &
)22& '
{33 
_logger55 
.55 
LogInformation55 &
(55& '
$"55' )
$str55) r
{55r s
	exception55s |
.55| }
Message	55} Ñ
}
55Ñ Ö
{
55Ö Ü
	exception
55Ü è
.
55è ê

StackTrace
55ê ö
}
55ö õ
"
55õ ú
)
55ú ù
;
55ù û
return77 
Problem77 
(77 
	exception77 (
.77( )
Message77) 0
)770 1
;771 2
}99 
};; 	
[<< 	
HttpGet<<	 
]<< 
public== 
IActionResult== "
GetSpecificUserDetails== 3
(==3 4
)==4 5
{>> 	
try?? 
{@@ 
returnBB 
OkBB 
(BB 
_userServicesBB '
.BB' ("
GetSpecificUserDetailsBB( >
(BB> ?
)BB? @
)BB@ A
;BBA B
}CC 
catchDD 
(DD 
	ExceptionDD 
	exceptionDD &
)DD& '
{EE 
_loggerFF 
.FF 
LogInformationFF &
(FF& '
$"FF' )
$strFF) z
{FFz {
	exception	FF{ Ñ
.
FFÑ Ö
Message
FFÖ å
}
FFå ç
{
FFç é
	exception
FFé ó
.
FFó ò

StackTrace
FFò ¢
}
FF¢ £
"
FF£ §
)
FF§ •
;
FF• ¶
returnGG 
ProblemGG 
(GG 
	exceptionGG (
.GG( )
MessageGG) 0
)GG0 1
;GG1 2
}HH 
}KK 	
[LL 	
HttpGetLL	 
]LL 
publicMM 
IActionResultMM 
GetUserByIdMM (
(MM( )
intMM) ,
idMM- /
)MM/ 0
{NN 	
tryOO 
{PP 
returnRR 
OkRR 
(RR 
_userServicesRR '
.RR' (
GetUserRR( /
(RR/ 0
idRR0 2
)RR2 3
)RR3 4
;RR4 5
}SS 
catchTT 
(TT 
ValidationExceptionTT &
	exceptionTT' 0
)TT0 1
{UU 
_loggerVV 
.VV 
LogInformationVV &
(VV& '
$"VV' )
$strVV) G
{VVG H
	exceptionVVH Q
.VVQ R
MessageVVR Y
}VVY Z
{VVZ [
	exceptionVV[ d
.VVd e

StackTraceVVe o
}VVo p
"VVp q
)VVq r
;VVr s
returnWW 

BadRequestWW !
(WW! "
	exceptionWW" +
.WW+ ,
MessageWW, 3
)WW3 4
;WW4 5
}XX 
catchYY 
(YY 
	ExceptionYY 
	exceptionYY &
)YY& '
{ZZ 
_logger[[ 
.[[ 
LogInformation[[ &
([[& '
$"[[' )
$str[[) o
{[[o p
	exception[[p y
.[[y z
Message	[[z Å
}
[[Å Ç
{
[[Ç É
	exception
[[É å
.
[[å ç

StackTrace
[[ç ó
}
[[ó ò
"
[[ò ô
)
[[ô ö
;
[[ö õ
return\\ 
Problem\\ 
(\\ 
	exception\\ (
.\\( )
Message\\) 0
)\\0 1
;\\1 2
}]] 
}^^ 	
[__ 	
HttpPost__	 
]__ 
public`` 
IActionResult`` 
AddUser`` $
(``$ %
User``% )

userValues``* 4
)``4 5
{aa 	
ifbb 
(bb 

userValuesbb 
==bb 
nullbb "
)bb" #
{cc 
_loggerdd 
.dd 
LogInformationdd &
(dd& '
$strdd' b
)ddb c
;ddc d
returnee 

BadRequestee !
(ee! "
newee" %
{ee& '
messageee( /
=ee0 1
$stree2 R
}eeS T
)eeT U
;eeU V
}ff 
trygg 
{hh 
intii 
currentUserii 
=ii  !
Convertii" )
.ii) *
ToInt32ii* 1
(ii1 2
Userii2 6
.ii6 7
	FindFirstii7 @
(ii@ A
$striiA I
)iiI J
?iiJ K
.iiK L
ValueiiL Q
)iiQ R
;iiR S
returnjj 
_userServicesjj $
.jj$ %
AddUserjj% ,
(jj, -

userValuesjj- 7
,jj7 8
currentUserjj9 D
)jjD E
?jjF G
OkjjH J
(jjJ K
newjjK N
{jjO P
messagejjQ X
=jjY Z
$strjj[ t
}jju v
)jjv w
:jjx y
Problem	jjz Å
(
jjÅ Ç
$str
jjÇ †
)
jj† °
;
jj° ¢
}kk 
catchll 
(ll 
ValidationExceptionll &
	exceptionll' 0
)ll0 1
{mm 
_loggernn 
.nn 
LogInformationnn &
(nn& '
$"nn' )
$strnn) C
{nnC D
	exceptionnnD M
.nnM N
MessagennN U
}nnU V
{nnV W
	exceptionnnW `
.nn` a

StackTracenna k
}nnk l
"nnl m
)nnm n
;nnn o
returnoo 

BadRequestoo !
(oo! "
	exceptionoo" +
.oo+ ,
Messageoo, 3
)oo3 4
;oo4 5
}pp 
catchqq 
(qq !
ArgumentNullExceptionqq (
	exceptionqq) 2
)qq2 3
{rr 
_loggerss 
.ss 
LogInformationss &
(ss& '
$"ss' )
$strss) C
{ssC D
	exceptionssD M
.ssM N
MessagessN U
}ssU V
{ssV W
	exceptionssW `
.ss` a

StackTracessa k
}ssk l
"ssl m
)ssm n
;ssn o
returntt 

BadRequesttt !
(tt! "
	exceptiontt" +
.tt+ ,
Messagett, 3
)tt3 4
;tt4 5
}uu 
catchvv 
(vv 
	Exceptionvv 
	exceptionvv &
)vv& '
{ww 
_loggerxx 
.xx 
LogInformationxx &
(xx& '
$"xx' )
$strxx) C
{xxC D
	exceptionxxD M
.xxM N
MessagexxN U
}xxU V
{xxV W
	exceptionxxW `
.xx` a

StackTracexxa k
}xxk l
"xxl m
)xxm n
;xxn o
returnyy 
Problemyy 
(yy 
$stryy =
)yy= >
;yy> ?
}zz 
}{{ 	
[|| 	
HttpPut||	 
]|| 
public}} 
IActionResult}} 

UpdateUser}} '
(}}' (
User}}( ,
user}}- 1
,}}1 2
int}}3 6
id}}7 9
)}}9 :
{~~ 	
if 
( 
user 
== 
null 
) 
{
ÄÄ 
_logger
ÅÅ 
.
ÅÅ 
LogInformation
ÅÅ &
(
ÅÅ& '
$str
ÅÅ' e
)
ÅÅe f
;
ÅÅf g
return
ÇÇ 

BadRequest
ÇÇ !
(
ÇÇ! "
$str
ÇÇ" ;
)
ÇÇ; <
;
ÇÇ< =
}
ÉÉ 
try
áá 
{
àà 
return
ää 
_userServices
ää $
.
ää$ %

UpdateUser
ää% /
(
ää/ 0
user
ää0 4
)
ää4 5
?
ää6 7
Ok
ää8 :
(
ää: ;
new
ää; >
{
ää? @
message
ääA H
=
ääI J
$str
ääK f
}
ääg h
)
ääh i
:
ääj k

BadRequest
ääl v
(
ääv w
new
ääw z
{
ää{ |
messageää} Ñ
=ääÖ Ü
$strääá •
}ää¶ ß
)ääß ®
;ää® ©
}
åå 
catch
éé 
(
éé 
	Exception
éé 
	exception
éé &
)
éé& '
{
èè 
_logger
êê 
.
êê 
LogInformation
êê &
(
êê& '
$"
êê' )
$str
êê) E
{
êêE F
	exception
êêF O
.
êêO P
Message
êêP W
}
êêW X
{
êêX Y
	exception
êêY b
.
êêb c

StackTrace
êêc m
}
êêm n
"
êên o
)
êêo p
;
êêp q
return
ëë 
Problem
ëë 
(
ëë 
	exception
ëë (
.
ëë( )
Message
ëë) 0
)
ëë0 1
;
ëë1 2
}
íí 
}
îî 	
[
ïï 	

HttpDelete
ïï	 
(
ïï 
Name
ïï 
=
ïï 
$str
ïï $
)
ïï$ %
]
ïï% &
public
ññ 
IActionResult
ññ 
Disable
ññ $
(
ññ$ %
int
ññ% (
id
ññ) +
)
ññ+ ,
{
óó 	
if
òò 
(
òò 
id
òò 
==
òò 
$num
òò 
)
òò 
return
òò 

BadRequest
òò  *
(
òò* +
new
òò+ .
{
òò/ 0
message
òò1 8
=
òò9 :
$str
òò; P
}
òòQ R
)
òòR S
;
òòS T
try
ôô 
{
öö 
return
úú 
_userServices
úú $
.
úú$ %
Disable
úú% ,
(
úú, -
id
úú- /
)
úú/ 0
?
úú1 2
Ok
úú3 5
(
úú5 6
new
úú6 9
{
úú: ;
message
úú< C
=
úúD E
$str
úúF b
}
úúc d
)
úúd e
:
úúf g

BadRequest
úúh r
(
úúr s
new
úús v
{
úúw x
messageúúy Ä
=úúÅ Ç
$strúúÉ °
}úú¢ £
)úú£ §
;úú§ •
}
ùù 
catch
üü 
(
üü 
	Exception
üü 
	exception
üü &
)
üü& '
{
†† 
_logger
°° 
.
°° 
LogInformation
°° &
(
°°& '
$"
°°' )
$str
°°) F
{
°°F G
	exception
°°G P
.
°°P Q
Message
°°Q X
}
°°X Y
{
°°Y Z
	exception
°°Z c
.
°°c d

StackTrace
°°d n
}
°°n o
"
°°o p
)
°°p q
;
°°q r
return
¢¢ 
Problem
¢¢ 
(
¢¢ 
	exception
¢¢ (
.
¢¢( )

StackTrace
¢¢) 3
)
¢¢3 4
;
¢¢4 5
}
££ 
}
§§ 	
[
®® 	
HttpPut
®®	 
(
®® 
$str
®® "
)
®®" #
]
®®# $
public
™™ 
IActionResult
™™ 
ChangePassword
™™ +
(
™™+ ,
string
™™, 2
OldPassword
™™3 >
,
™™> ?
string
™™@ F
NewPassword
™™G R
,
™™R S
string
™™T Z
ConfirmPassword
™™[ j
)
™™j k
{
¨¨ 	
if
ÆÆ 
(
ÆÆ 
string
ÆÆ 
.
ÆÆ 
IsNullOrEmpty
ÆÆ $
(
ÆÆ$ %
OldPassword
ÆÆ% 0
)
ÆÆ0 1
&&
ÆÆ2 4
string
ÆÆ5 ;
.
ÆÆ; <
IsNullOrEmpty
ÆÆ< I
(
ÆÆI J
NewPassword
ÆÆJ U
)
ÆÆU V
&&
ÆÆW Y
string
ÆÆZ `
.
ÆÆ` a
IsNullOrEmpty
ÆÆa n
(
ÆÆn o
ConfirmPassword
ÆÆo ~
)
ÆÆ~ 
)ÆÆ Ä

BadRequest
∞∞ 
(
∞∞ 
new
∞∞ 
{
∞∞  
message
∞∞! (
=
∞∞) *
$str
∞∞+ U
}
∞∞V W
)
∞∞W X
;
∞∞X Y
try
≤≤ 
{
¥¥ 
int
µµ 
currentUser
µµ 
=
µµ  !
Convert
µµ" )
.
µµ) *
ToInt32
µµ* 1
(
µµ1 2
User
µµ2 6
.
µµ6 7
	FindFirst
µµ7 @
(
µµ@ A
$str
µµA I
)
µµI J
?
µµJ K
.
µµK L
Value
µµL Q
)
µµQ R
;
µµR S
return
∂∂ 
_userServices
∂∂ $
.
∂∂$ %
ChangePassword
∂∂% 3
(
∂∂3 4
OldPassword
∂∂4 ?
,
∂∂? @
NewPassword
∂∂A L
,
∂∂L M
ConfirmPassword
∂∂N ]
,
∂∂] ^
currentUser
∂∂_ j
)
∂∂j k
?
∂∂l m
Ok
∂∂n p
(
∂∂p q
new
∂∂q t
{
∂∂u v
message
∂∂w ~
=∂∂ Ä
$str∂∂Å †
}∂∂° ¢
)∂∂¢ £
:∂∂§ •

BadRequest∂∂¶ ∞
(∂∂∞ ±
new∂∂± ¥
{∂∂µ ∂
message∂∂∑ æ
=∂∂ø ¿
$str∂∂¡ ﬂ
}∂∂‡ ·
)∂∂· ‚
;∂∂‚ „
}
∫∫ 
catch
ºº 
(
ºº !
ValidationException
ºº &
	exception
ºº' 0
)
ºº0 1
{
ææ 
_logger
¿¿ 
.
¿¿ 
LogInformation
¿¿ &
(
¿¿& '
$"
¿¿' )
$str¿¿) Ü
{¿¿Ü á
	exception¿¿á ê
.¿¿ê ë
Message¿¿ë ò
}¿¿ò ô
{¿¿ô ö
	exception¿¿ö £
.¿¿£ §

StackTrace¿¿§ Æ
}¿¿Æ Ø
"¿¿Ø ∞
)¿¿∞ ±
;¿¿± ≤
return
¬¬ 

BadRequest
¬¬ !
(
¬¬! "
	exception
¬¬" +
.
¬¬+ ,
Message
¬¬, 3
)
¬¬3 4
;
¬¬4 5
}
ƒƒ 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
   
_logger
ÃÃ 
.
ÃÃ 
LogInformation
ÃÃ &
(
ÃÃ& '
$"
ÃÃ' )
$strÃÃ) Ü
{ÃÃÜ á
	exceptionÃÃá ê
.ÃÃê ë
MessageÃÃë ò
}ÃÃò ô
{ÃÃô ö
	exceptionÃÃö £
.ÃÃ£ §

StackTraceÃÃ§ Æ
}ÃÃÆ Ø
"ÃÃØ ∞
)ÃÃ∞ ±
;ÃÃ± ≤
return
ŒŒ 

BadRequest
ŒŒ !
(
ŒŒ! "
new
ŒŒ" %
{
ŒŒ& '
message
ŒŒ( /
=
ŒŒ0 1
$str
ŒŒ2 U
}
ŒŒV W
)
ŒŒW X
;
ŒŒX Y
}
–– 
}
‘‘ 	
[
’’ 	
HttpGet
’’	 
]
’’ 
public
÷÷ 
IActionResult
÷÷ &
GetAllUsersByDesignation
÷÷ 5
(
÷÷5 6
)
÷÷6 7
{
◊◊ 	
try
ÿÿ 
{
ŸŸ 
int
⁄⁄  
currentDesignation
⁄⁄ &
=
⁄⁄' (
Convert
⁄⁄) 0
.
⁄⁄0 1
ToInt32
⁄⁄1 8
(
⁄⁄8 9
User
⁄⁄9 =
.
⁄⁄= >
	FindFirst
⁄⁄> G
(
⁄⁄G H
$str
⁄⁄H W
)
⁄⁄W X
?
⁄⁄X Y
.
⁄⁄Y Z
Value
⁄⁄Z _
)
⁄⁄_ `
;
⁄⁄` a
return
€€ 
Ok
€€ 
(
€€ 
_userServices
€€ '
.
€€' (&
GetAllUsersByDesignation
€€( @
(
€€@ A 
currentDesignation
€€A S
)
€€S T
)
€€T U
;
€€U V
}
‹‹ 
catch
›› 
(
›› 
	Exception
›› 
	exception
›› &
)
››& '
{
ﬁﬁ 
_logger
ﬂﬂ 
.
ﬂﬂ 
LogInformation
ﬂﬂ &
(
ﬂﬂ& '
$"
ﬂﬂ' )
$str
ﬂﬂ) |
{
ﬂﬂ| }
	exceptionﬂﬂ} Ü
.ﬂﬂÜ á
Messageﬂﬂá é
}ﬂﬂé è
{ﬂﬂè ê
	exceptionﬂﬂê ô
.ﬂﬂô ö

StackTraceﬂﬂö §
}ﬂﬂ§ •
"ﬂﬂ• ¶
)ﬂﬂ¶ ß
;ﬂﬂß ®
return
‡‡ 
Problem
‡‡ 
(
‡‡ 
	exception
‡‡ (
.
‡‡( )
Message
‡‡) 0
)
‡‡0 1
;
‡‡1 2
}
·· 
}
‚‚ 	
}
‰‰ 
}ÂÂ •
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\CustomException\MailException.cs
	namespace 	
PMS_API
 
{ 
[ 
Serializable 
] 
public 

class 
MailException 
:  
	Exception! *
{ 
public 
MailException 
( 
string #
errorMessage$ 0
)0 1
:2 3
base4 8
(8 9
errorMessage9 E
)E F
{F G
}G H
	protected		 
MailException		 
(		  
SerializationInfo		  1
info		2 6
,		6 7
StreamingContext		8 H
context		I P
)		P Q
:

 
base

 
(

 
info

 
,

 
context

  
)

  !
{ 	
} 	
} 
} É
bC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\CollegeDataAccessLayer.cs
	namespace 	
PMS_API
 
. 
DataAccessLayer !
{ 
public 

class "
CollegeDataAccessLayer '
:' (#
ICollegeDataAccessLayer( ?
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private 
readonly 
ILogger 
<  "
CollegeDataAccessLayer  6
>6 7
_logger8 ?
=@ A
defaultB I
!I J
;J K
public			 
List		 
<		 
College		 
>		 
GetColleges		 )
(		) *
)		* +
{

 	
try 
{ 
return 
_db 
. 
Colleges #
!# $
.$ %
ToList% +
(+ ,
), -
;- .
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
}   	
}$$ 
}%% ™Ÿ
SC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\Context.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Context 
: 
	DbContext $
{ 
public 
Context 
( 
) 
{ 
} 
public		 
Context		 
(		 
DbContextOptions		 '
<		' (
Context		( /
>		/ 0
options		1 8
)		8 9
:		: ;
base		< @
(		@ A
options		A H
)		H I
{

 	
} 	
	protected 
override 
void 
OnConfiguring  -
(- .#
DbContextOptionsBuilder. E
optionsBuilderF T
)T U
{ 	
optionsBuilder 
. 
UseSqlServer '
(' (
$str( a
)a b
;b c
} 	
public 
DbSet 
< 
User 
> 
? 
users !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DbSet 
< 
Profile 
> 
? 
profile &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 
PersonalDetails $
>$ %
?% &
personalDetails' 6
{7 8
get9 <
;< =
set> A
;A B
}C D
public 
DbSet 
< 
	Education 
> 
?  

educations! +
{, -
get. 1
;1 2
set3 6
;6 7
}8 9
public 
DbSet 
< 
Language 
> 
? 
	languages  )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 
DbSet 
< 
BreakDuration "
>" #
?# $
breakDurations% 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public 
DbSet 
< 
Projects 
> 
? 
projects  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DbSet 
< 
Skills 
> 
? 
skills $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DbSet 
< 
SocialMedia  
>  !
?! "
SocialMedias# /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
DbSet 
< 
College 
> 
? 
Colleges '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
public 
DbSet 
< 
Designation  
>  !
?! "
Designations# /
{0 1
get2 5
;5 6
set7 :
;: ;
}< =
public 
DbSet 
< 
Domain 
> 
? 
Domains %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DbSet 
< 

Technology 
>  
?  !
Technologies" .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
public 
DbSet 
< 
Organisation !
>! "
?" #
Organisations$ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public 
DbSet 
< 
ProfileStatus "
>" #
?# $
ProfileStatuss% 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public   
DbSet   
<   
AchievementType   $
>  $ %
?  % &
achievementtype  ' 6
{  7 8
get  9 <
;  < =
set  > A
;  A B
}  C D
public!! 
DbSet!! 
<!! 
Achievements!! !
>!!! "
?!!" #
achievements!!$ 0
{!!1 2
get!!3 6
;!!6 7
set!!8 ;
;!!; <
}!!= >
public"" 
DbSet"" 
<"" 
ProfileHistory"" #
>""# $
?""$ %
profilehistory""& 4
{""5 6
get""7 :
;"": ;
set""< ?
;""? @
}""A B
public## 
DbSet## 
<## 
CountryCode##  
>##  !
?##! "
CountryCodes### /
{##0 1
get##2 5
;##5 6
set##7 :
;##: ;
}##< =
public$$ 
DbSet$$ 
<$$ 
ChangePassword$$ #
>$$# $
?$$$ %
ChangePasswords$$& 5
{$$6 7
get$$8 ;
;$$; <
set$$= @
;$$@ A
}$$B C
	protected'' 
override'' 
void'' 
OnModelCreating''  /
(''/ 0
ModelBuilder''0 <
modelBuilder''= I
)''I J
{(( 	
modelBuilder)) 
.)) 
Entity)) 
<))  
College))  '
>))' (
())( )
)))) *
.** 
HasData**  
(**  !
new++ 
College++ $
{++% &
	CollegeId++' 0
=++1 2
$num++3 4
,++4 5
CollegeName++6 A
=++B C
$str++D K
,++K L
IsActive++M U
=++V W
true++X \
}++] ^
,++^ _
new,, 
College,, $
{,,% &
	CollegeId,,' 0
=,,1 2
$num,,3 4
,,,4 5
CollegeName,,6 A
=,,B C
$str,,D J
,,,J K
IsActive,,L T
=,,U V
true,,W [
},,\ ]
,,,] ^
new-- 
College-- $
{--% &
	CollegeId--' 0
=--1 2
$num--3 4
,--4 5
CollegeName--6 A
=--B C
$str--D I
,--I J
IsActive--K S
=--T U
true--V Z
}--[ \
,--\ ]
new.. 
College.. $
{..% &
	CollegeId..' 0
=..1 2
$num..3 4
,..4 5
CollegeName..6 A
=..B C
$str..D H
,..H I
IsActive..J R
=..S T
true..U Y
}..Z [
,..[ \
new// 
College// $
{//% &
	CollegeId//' 0
=//1 2
$num//3 4
,//4 5
CollegeName//6 A
=//B C
$str//D J
,//J K
IsActive//L T
=//U V
true//W [
}//\ ]
,//] ^
new00 
College00 $
{00% &
	CollegeId00' 0
=001 2
$num003 4
,004 5
CollegeName006 A
=00B C
$str00D I
,00I J
IsActive00K S
=00T U
true00V Z
}00[ \
,00\ ]
new11 
College11 $
{11% &
	CollegeId11' 0
=111 2
$num113 4
,114 5
CollegeName116 A
=11B C
$str11D I
,11I J
IsActive11K S
=11T U
true11V Z
}11[ \
,11\ ]
new22 
College22 $
{22% &
	CollegeId22' 0
=221 2
$num223 4
,224 5
CollegeName226 A
=22B C
$str22D P
,22P Q
IsActive22R Z
=22[ \
true22] a
}22b c
,22c d
new33 
College33 $
{33% &
	CollegeId33' 0
=331 2
$num333 4
,334 5
CollegeName336 A
=33B C
$str33D I
,33I J
IsActive33K S
=33T U
true33V Z
}33[ \
,33\ ]
new44 
College44 $
{44% &
	CollegeId44' 0
=441 2
$num443 5
,445 6
CollegeName447 B
=44C D
$str44E J
,44J K
IsActive44L T
=44U V
true44W [
}44\ ]
)55 
;55 
modelBuilder66 
.66 
Entity66 
<66  
Designation66  +
>66+ ,
(66, -
)66- .
.77 
HasData77  
(77  !
new88 
Designation88 (
{88) *
DesignationId88+ 8
=889 :
$num88; <
,88< =
DesignationName88> M
=88N O
$str88P T
,88T U
IsActive88V ^
=88_ `
true88a e
}88f g
,88g h
new99 
Designation99 (
{99) *
DesignationId99+ 8
=999 :
$num99; <
,99< =
DesignationName99> M
=99N O
$str99P W
,99W X
IsActive99Y a
=99b c
true99d h
}99i j
,99j k
new:: 
Designation:: (
{::) *
DesignationId::+ 8
=::9 :
$num::; <
,::< =
DesignationName::> M
=::N O
$str::P U
,::U V
IsActive::W _
=::` a
true::b f
}::g h
,::h i
new;; 
Designation;; (
{;;) *
DesignationId;;+ 8
=;;9 :
$num;;; <
,;;< =
DesignationName;;> M
=;;N O
$str;;P T
,;;T U
IsActive;;V ^
=;;_ `
true;;a e
};;f g
,;;g h
new<< 
Designation<< (
{<<) *
DesignationId<<+ 8
=<<9 :
$num<<; <
,<<< =
DesignationName<<> M
=<<N O
$str<<P U
,<<U V
IsActive<<W _
=<<` a
true<<b f
}<<g h
,<<h i
new== 
Designation== (
{==) *
DesignationId==+ 8
===9 :
$num==; <
,==< =
DesignationName==> M
===N O
$str==P T
,==T U
IsActive==V ^
===_ `
true==a e
}==f g
,==g h
new>> 
Designation>> (
{>>) *
DesignationId>>+ 8
=>>9 :
$num>>; <
,>>< =
DesignationName>>> M
=>>N O
$str>>P T
,>>T U
IsActive>>V ^
=>>_ `
true>>a e
}>>f g
,>>g h
new?? 
Designation?? (
{??) *
DesignationId??+ 8
=??9 :
$num??; <
,??< =
DesignationName??> M
=??N O
$str??P T
,??T U
IsActive??V ^
=??_ `
true??a e
}??f g
,??g h
new@@ 
Designation@@ (
{@@) *
DesignationId@@+ 8
=@@9 :
$num@@; <
,@@< =
DesignationName@@> M
=@@N O
$str@@P T
,@@T U
IsActive@@V ^
=@@_ `
true@@a e
}@@f g
,@@g h
newAA 
DesignationAA (
{AA) *
DesignationIdAA+ 8
=AA9 :
$numAA; =
,AA= >
DesignationNameAA? N
=AAO P
$strAAQ U
,AAU V
IsActiveAAW _
=AA` a
trueAAb f
}AAg h
,AAh i
newBB 
DesignationBB (
{BB) *
DesignationIdBB+ 8
=BB9 :
$numBB; =
,BB= >
DesignationNameBB? N
=BBO P
$strBBQ V
,BBV W
IsActiveBBX `
=BBa b
trueBBc g
}BBh i
,BBi j
newCC 
DesignationCC (
{CC) *
DesignationIdCC+ 8
=CC9 :
$numCC; =
,CC= >
DesignationNameCC? N
=CCO P
$strCCQ U
,CCU V
IsActiveCCW _
=CC` a
trueCCb f
}CCg h
)DD 
;DD 
modelBuilderEE 
.EE 
EntityEE 
<EE  
DomainEE  &
>EE& '
(EE' (
)EE( )
.FF 
HasDataFF  
(FF  !
newGG 
DomainGG #
{GG$ %
DomainIdGG& .
=GG/ 0
$numGG1 2
,GG2 3

DomainNameGG4 >
=GG? @
$strGGA E
,GGE F
IsActiveGGG O
=GGP Q
trueGGR V
}GGW X
,GGX Y
newHH 
DomainHH #
{HH$ %
DomainIdHH& .
=HH/ 0
$numHH1 2
,HH2 3

DomainNameHH4 >
=HH? @
$strHHA L
,HHL M
IsActiveHHN V
=HHW X
trueHHY ]
}HH^ _
,HH_ `
newII 
DomainII #
{II$ %
DomainIdII& .
=II/ 0
$numII1 2
,II2 3

DomainNameII4 >
=II? @
$strIIA F
,IIF G
IsActiveIIH P
=IIQ R
trueIIS W
}IIX Y
,IIY Z
newJJ 
DomainJJ #
{JJ$ %
DomainIdJJ& .
=JJ/ 0
$numJJ1 2
,JJ2 3

DomainNameJJ4 >
=JJ? @
$strJJA I
,JJI J
IsActiveJJK S
=JJT U
trueJJV Z
}JJ[ \
,JJ\ ]
newKK 
DomainKK #
{KK$ %
DomainIdKK& .
=KK/ 0
$numKK1 2
,KK2 3

DomainNameKK4 >
=KK? @
$strKKA E
,KKE F
IsActiveKKG O
=KKP Q
trueKKR V
}KKW X
,KKX Y
newLL 
DomainLL #
{LL$ %
DomainIdLL& .
=LL/ 0
$numLL1 2
,LL2 3

DomainNameLL4 >
=LL? @
$strLLA L
,LLL M
IsActiveLLN V
=LLW X
trueLLY ]
}LL^ _
,LL_ `
newMM 
DomainMM #
{MM$ %
DomainIdMM& .
=MM/ 0
$numMM1 2
,MM2 3

DomainNameMM4 >
=MM? @
$strMMA N
,MMN O
IsActiveMMP X
=MMY Z
trueMM[ _
}MM` a
,MMa b
newNN 
DomainNN #
{NN$ %
DomainIdNN& .
=NN/ 0
$numNN1 2
,NN2 3

DomainNameNN4 >
=NN? @
$strNNA J
,NNJ K
IsActiveNNL T
=NNU V
trueNNW [
}NN\ ]
,NN] ^
newOO 
DomainOO #
{OO$ %
DomainIdOO& .
=OO/ 0
$numOO1 2
,OO2 3

DomainNameOO4 >
=OO? @
$strOOA G
,OOG H
IsActiveOOI Q
=OOR S
trueOOT X
}OOY Z
,OOZ [
newPP 
DomainPP #
{PP$ %
DomainIdPP& .
=PP/ 0
$numPP1 3
,PP3 4

DomainNamePP5 ?
=PP@ A
$strPPB J
,PPJ K
IsActivePPL T
=PPU V
truePPW [
}PP\ ]
)QQ 
;QQ 
modelBuilderRR 
.RR 
EntityRR 
<RR  
GenderRR  &
>RR& '
(RR' (
)RR( )
.SS 
HasDataSS  
(SS  !
newTT 
GenderTT #
{TT$ %
GenderIdTT& .
=TT/ 0
$numTT1 2
,TT2 3

GenderNameTT4 >
=TT? @
$strTTA G
,TTG H
IsActiveTTI Q
=TTR S
trueTTT X
}TTY Z
,TTZ [
newUU 
GenderUU #
{UU$ %
GenderIdUU& .
=UU/ 0
$numUU1 2
,UU2 3

GenderNameUU4 >
=UU? @
$strUUA I
,UUI J
IsActiveUUK S
=UUT U
trueUUV Z
}UU[ \
,UU\ ]
newVV 
GenderVV #
{VV$ %
GenderIdVV& .
=VV/ 0
$numVV1 2
,VV2 3

GenderNameVV4 >
=VV? @
$strVVA I
,VVI J
IsActiveVVK S
=VVT U
trueVVV Z
}VV[ \
)WW 
;WW 
modelBuilderXX 
.XX 
EntityXX 
<XX  
OrganisationXX  ,
>XX, -
(XX- .
)XX. /
.YY 
HasDataYY  
(YY  !
newZZ 
OrganisationZZ )
{ZZ* +
OrganisationIdZZ, :
=ZZ; <
$numZZ= >
,ZZ> ?
OrganisationNameZZ@ P
=ZZQ R
$strZZS `
,ZZ` a
IsActiveZZb j
=ZZk l
trueZZm q
}ZZr s
,ZZs t
new[[ 
Organisation[[ )
{[[* +
OrganisationId[[, :
=[[; <
$num[[= >
,[[> ?
OrganisationName[[@ P
=[[Q R
$str[[S \
,[[\ ]
IsActive[[^ f
=[[g h
true[[i m
}[[n o
,[[o p
new\\ 
Organisation\\ )
{\\* +
OrganisationId\\, :
=\\; <
$num\\= >
,\\> ?
OrganisationName\\@ P
=\\Q R
$str\\S \
,\\\ ]
IsActive\\^ f
=\\g h
true\\i m
}\\n o
,\\o p
new]] 
Organisation]] )
{]]* +
OrganisationId]], :
=]]; <
$num]]= >
,]]> ?
OrganisationName]]@ P
=]]Q R
$str]]S Z
,]]Z [
IsActive]]\ d
=]]e f
true]]g k
}]]l m
,]]m n
new^^ 
Organisation^^ )
{^^* +
OrganisationId^^, :
=^^; <
$num^^= >
,^^> ?
OrganisationName^^@ P
=^^Q R
$str^^S [
,^^[ \
IsActive^^] e
=^^f g
true^^h l
}^^m n
,^^n o
new__ 
Organisation__ )
{__* +
OrganisationId__, :
=__; <
$num__= >
,__> ?
OrganisationName__@ P
=__Q R
$str__S W
,__W X
IsActive__Y a
=__b c
true__d h
}__i j
,__j k
new`` 
Organisation`` )
{``* +
OrganisationId``, :
=``; <
$num``= >
,``> ?
OrganisationName``@ P
=``Q R
$str``S Z
,``Z [
IsActive``\ d
=``e f
true``g k
}``l m
,``m n
newaa 
Organisationaa )
{aa* +
OrganisationIdaa, :
=aa; <
$numaa= >
,aa> ?
OrganisationNameaa@ P
=aaQ R
$straaS X
,aaX Y
IsActiveaaZ b
=aac d
trueaae i
}aaj k
,aak l
newbb 
Organisationbb )
{bb* +
OrganisationIdbb, :
=bb; <
$numbb= >
,bb> ?
OrganisationNamebb@ P
=bbQ R
$strbbS W
,bbW X
IsActivebbY a
=bbb c
truebbd h
}bbi j
,bbj k
newcc 
Organisationcc )
{cc* +
OrganisationIdcc, :
=cc; <
$numcc= ?
,cc? @
OrganisationNameccA Q
=ccR S
$strccT Z
,ccZ [
IsActivecc\ d
=cce f
trueccg k
}ccl m
)dd 
;dd 
modelBuilderee 
.ee 
Entityee 
<ee  

Technologyee  *
>ee* +
(ee+ ,
)ee, -
.ff 
HasDataff  
(ff  !
newgg 

Technologygg '
{gg( )
TechnologyIdgg* 6
=gg7 8
$numgg9 :
,gg: ;
TechnologyNamegg< J
=ggK L
$strggM S
,ggS T
IsActiveggU ]
=gg^ _
truegg` d
}gge f
,ggf g
newhh 

Technologyhh '
{hh( )
TechnologyIdhh* 6
=hh7 8
$numhh9 :
,hh: ;
TechnologyNamehh< J
=hhK L
$strhhM U
,hhU V
IsActivehhW _
=hh` a
truehhb f
}hhg h
,hhh i
newii 

Technologyii '
{ii( )
TechnologyIdii* 6
=ii7 8
$numii9 :
,ii: ;
TechnologyNameii< J
=iiK L
$striiM S
,iiS T
IsActiveiiU ]
=ii^ _
trueii` d
}iie f
,iif g
newjj 

Technologyjj '
{jj( )
TechnologyIdjj* 6
=jj7 8
$numjj9 :
,jj: ;
TechnologyNamejj< J
=jjK L
$strjjM R
,jjR S
IsActivejjT \
=jj] ^
truejj_ c
}jjd e
,jje f
newkk 

Technologykk '
{kk( )
TechnologyIdkk* 6
=kk7 8
$numkk9 :
,kk: ;
TechnologyNamekk< J
=kkK L
$strkkM R
,kkR S
IsActivekkT \
=kk] ^
truekk_ c
}kkd e
,kke f
newll 

Technologyll '
{ll( )
TechnologyIdll* 6
=ll7 8
$numll9 :
,ll: ;
TechnologyNamell< J
=llK L
$strllM U
,llU V
IsActivellW _
=ll` a
truellb f
}llg h
,llh i
newmm 

Technologymm '
{mm( )
TechnologyIdmm* 6
=mm7 8
$nummm9 :
,mm: ;
TechnologyNamemm< J
=mmK L
$strmmM R
,mmR S
IsActivemmT \
=mm] ^
truemm_ c
}mmd e
,mme f
newnn 

Technologynn '
{nn( )
TechnologyIdnn* 6
=nn7 8
$numnn9 :
,nn: ;
TechnologyNamenn< J
=nnK L
$strnnM V
,nnV W
IsActivennX `
=nna b
truennc g
}nnh i
,nni j
newoo 

Technologyoo '
{oo( )
TechnologyIdoo* 6
=oo7 8
$numoo9 :
,oo: ;
TechnologyNameoo< J
=ooK L
$strooM P
,ooP Q
IsActiveooR Z
=oo[ \
trueoo] a
}oob c
,ooc d
newpp 

Technologypp '
{pp( )
TechnologyIdpp* 6
=pp7 8
$numpp9 ;
,pp; <
TechnologyNamepp= K
=ppL M
$strppN U
,ppU V
IsActiveppW _
=pp` a
trueppb f
}ppg h
)qq 
;qq 
modelBuilderrr 
.rr 
Entityrr 
<rr  
ProfileStatusrr  -
>rr- .
(rr. /
)rr/ 0
.ss 
HasDatass  
(ss  !
newtt 
ProfileStatustt *
{tt+ ,
ProfileStatusIdtt- <
=tt= >
$numtt? @
,tt@ A
ProfileStatusNamettB S
=ttT U
$strttV `
,tt` a
IsActivettb j
=ttk l
truettm q
}ttr s
,tts t
newuu 
ProfileStatusuu *
{uu+ ,
ProfileStatusIduu- <
=uu= >
$numuu? @
,uu@ A
ProfileStatusNameuuB S
=uuT U
$struuV _
,uu_ `
IsActiveuua i
=uuj k
trueuul p
}uuq r
,uur s
newvv 
ProfileStatusvv *
{vv+ ,
ProfileStatusIdvv- <
=vv= >
$numvv? @
,vv@ A
ProfileStatusNamevvB S
=vvT U
$strvvV `
,vv` a
IsActivevvb j
=vvk l
truevvm q
}vvr s
)ww 
;ww 
modelBuilderxx 
.xx 
Entityxx 
<xx  
CountryCodexx  +
>xx+ ,
(xx, -
)xx- .
.yy 
HasDatayy  
(yy  !
newzz 
CountryCodezz (
{zz) *
CountryCodeIdzz+ 8
=zz9 :
$numzz; <
,zz< =
CountryCodeNamezz> M
=zzN O
$strzzP U
,zzU V
IsActivezzW _
=zz` a
truezzb f
}zzg h
,zzh i
new{{ 
CountryCode{{ (
{{{) *
CountryCodeId{{+ 8
={{9 :
$num{{; <
,{{< =
CountryCodeName{{> M
={{N O
$str{{P T
,{{T U
IsActive{{V ^
={{_ `
true{{a e
}{{f g
,{{g h
new|| 
CountryCode|| (
{||) *
CountryCodeId||+ 8
=||9 :
$num||; <
,||< =
CountryCodeName||> M
=||N O
$str||P U
,||U V
IsActive||W _
=||` a
true||b f
}||g h
,||h i
new}} 
CountryCode}} (
{}}) *
CountryCodeId}}+ 8
=}}9 :
$num}}; <
,}}< =
CountryCodeName}}> M
=}}N O
$str}}P U
,}}U V
IsActive}}W _
=}}` a
true}}b f
}}}g h
,}}h i
new~~ 
CountryCode~~ (
{~~) *
CountryCodeId~~+ 8
=~~9 :
$num~~; <
,~~< =
CountryCodeName~~> M
=~~N O
$str~~P U
,~~U V
IsActive~~W _
=~~` a
true~~b f
}~~g h
,~~h i
new 
CountryCode (
{) *
CountryCodeId+ 8
=9 :
$num; <
,< =
CountryCodeName> M
=N O
$strP U
,U V
IsActiveW _
=` a
trueb f
}g h
,h i
new
ÄÄ 
CountryCode
ÄÄ (
{
ÄÄ) *
CountryCodeId
ÄÄ+ 8
=
ÄÄ9 :
$num
ÄÄ; <
,
ÄÄ< =
CountryCodeName
ÄÄ> M
=
ÄÄN O
$str
ÄÄP V
,
ÄÄV W
IsActive
ÄÄX `
=
ÄÄa b
true
ÄÄc g
}
ÄÄh i
,
ÄÄi j
new
ÅÅ 
CountryCode
ÅÅ (
{
ÅÅ) *
CountryCodeId
ÅÅ+ 8
=
ÅÅ9 :
$num
ÅÅ; <
,
ÅÅ< =
CountryCodeName
ÅÅ> M
=
ÅÅN O
$str
ÅÅP V
,
ÅÅV W
IsActive
ÅÅX `
=
ÅÅa b
true
ÅÅc g
}
ÅÅh i
,
ÅÅi j
new
ÇÇ 
CountryCode
ÇÇ (
{
ÇÇ) *
CountryCodeId
ÇÇ+ 8
=
ÇÇ9 :
$num
ÇÇ; <
,
ÇÇ< =
CountryCodeName
ÇÇ> M
=
ÇÇN O
$str
ÇÇP U
,
ÇÇU V
IsActive
ÇÇW _
=
ÇÇ` a
true
ÇÇb f
}
ÇÇg h
,
ÇÇh i
new
ÉÉ 
CountryCode
ÉÉ (
{
ÉÉ) *
CountryCodeId
ÉÉ+ 8
=
ÉÉ9 :
$num
ÉÉ; =
,
ÉÉ= >
CountryCodeName
ÉÉ? N
=
ÉÉO P
$str
ÉÉQ V
,
ÉÉV W
IsActive
ÉÉX `
=
ÉÉa b
true
ÉÉc g
}
ÉÉh i
)
ÑÑ 
;
ÑÑ 
modelBuilder
ÖÖ 
.
ÖÖ 
Entity
ÖÖ 
<
ÖÖ  
User
ÖÖ  $
>
ÖÖ$ %
(
ÖÖ% &
)
ÖÖ& '
.
ÜÜ 
HasData
ÜÜ 
(
ÜÜ 
new
áá 
User
áá 
{
áá 
UserId
áá !
=
áá" #
$num
áá$ %
,
áá% &
Name
áá' +
=
áá, -
$str
áá. :
,
áá: ;
Email
áá< A
=
ááB C
$str
ááD Y
,
ááY Z
UserName
áá[ c
=
áád e
$str
ááf q
,
ááq r
Password
áás {
=
áá| }
$stráá~ ã
,ááã å
CountryCodeIdááç ö
=ááõ ú
$numááù û
,ááû ü
MobileNumberáá† ¨
=áá≠ Æ
$strááØ ª
,ááª º
DesignationIdááΩ  
=ááÀ Ã
$numááÕ Œ
,ááŒ œ'
ReportingPersonUsernameáá– Á
=ááË È
$strááÍ Ú
,ááÚ Û
OrganisationIdááÙ Ç
=ááÉ Ñ
$numááÖ Ü
,ááÜ á
GenderIdááà ê
=ááë í
$numááì î
,ááî ï
IsActiveááñ û
=ááü †
trueáá° •
}áá¶ ß
,ááß ®
new
àà 
User
àà 
{
àà 
UserId
àà !
=
àà" #
$num
àà$ %
,
àà% &
Name
àà' +
=
àà, -
$str
àà. 5
,
àà5 6
Email
àà7 <
=
àà= >
$str
àà? R
,
ààR S
UserName
ààT \
=
àà] ^
$str
àà_ i
,
àài j
Password
ààk s
=
ààt u
$strààv Ñ
,ààÑ Ö
CountryCodeIdààÜ ì
=ààî ï
$numààñ ó
,ààó ò
MobileNumberààô •
=àà¶ ß
$stràà® ¥
,àà¥ µ
DesignationIdàà∂ √
=ààƒ ≈
$numàà∆ «
,àà« »'
ReportingPersonUsernameàà… ‡
=àà· ‚
$stràà„ Ó
,ààÓ Ô
OrganisationIdàà ˛
=ààˇ Ä
$numààÅ Ç
,ààÇ É
GenderIdààÑ å
=ààç é
$numààè ê
,ààê ë
IsActiveààí ö
=ààõ ú
trueààù °
}àà¢ £
,àà£ §
new
ââ 
User
ââ 
{
ââ 
UserId
ââ !
=
ââ" #
$num
ââ$ %
,
ââ% &
Name
ââ' +
=
ââ, -
$str
ââ. 6
,
ââ6 7
Email
ââ8 =
=
ââ> ?
$str
ââ@ S
,
ââS T
UserName
ââU ]
=
ââ^ _
$str
ââ` k
,
ââk l
Password
ââm u
=
ââv w
$strââx Ö
,ââÖ Ü
CountryCodeIdââá î
=ââï ñ
$numââó ò
,ââò ô
MobileNumberââö ¶
=ââß ®
$strââ© µ
,ââµ ∂
DesignationIdââ∑ ƒ
=ââ≈ ∆
$numââ« »
,ââ» …'
ReportingPersonUsernameââ  ·
=ââ‚ „
$strââ‰ Ô
,ââÔ 
OrganisationIdââÒ ˇ
=ââÄ Å
$numââÇ É
,ââÉ Ñ
GenderIdââÖ ç
=ââé è
$numââê ë
,ââë í
IsActiveââì õ
=ââú ù
trueââû ¢
}ââ£ §
,ââ§ •
new
ää 
User
ää 
{
ää 
UserId
ää !
=
ää" #
$num
ää$ %
,
ää% &
Name
ää' +
=
ää, -
$str
ää. 7
,
ää7 8
Email
ää9 >
=
ää? @
$str
ääA V
,
ääV W
UserName
ääX `
=
ääa b
$str
ääc o
,
ääo p
Password
ääq y
=
ääz {
$strää| ä
,äää ã
CountryCodeIdääå ô
=ääö õ
$numääú ù
,ääù û
MobileNumberääü ´
=ää¨ ≠
$strääÆ ∫
,ää∫ ª
DesignationIdääº …
=ää  À
$numääÃ Õ
,ääÕ Œ'
ReportingPersonUsernameääœ Ê
=ääÁ Ë
$strääÈ Ò
,ääÒ Ú
OrganisationIdääÛ Å
=ääÇ É
$numääÑ Ö
,ääÖ Ü
GenderIdääá è
=ääê ë
$numääí ì
,ääì î
IsActiveääï ù
=ääû ü
trueää† §
}ää• ¶
,ää¶ ß
new
ãã 
User
ãã 
{
ãã 
UserId
ãã !
=
ãã" #
$num
ãã$ %
,
ãã% &
Name
ãã' +
=
ãã, -
$str
ãã. 7
,
ãã7 8
Email
ãã9 >
=
ãã? @
$str
ããA U
,
ããU V
UserName
ããW _
=
ãã` a
$str
ããb n
,
ããn o
Password
ããp x
=
ããy z
$strãã{ â
,ããâ ä
CountryCodeIdããã ò
=ããô ö
$numããõ ú
,ããú ù
MobileNumberããû ™
=ãã´ ¨
$strãã≠ π
,ããπ ∫
DesignationIdããª »
=ãã…  
$numããÀ Ã
,ããÃ Õ'
ReportingPersonUsernameããŒ Â
=ããÊ Á
$strããË Û
,ããÛ Ù
OrganisationIdããı É
=ããÑ Ö
$numããÜ á
,ããá à
GenderIdããâ ë
=ããí ì
$numããî ï
,ããï ñ
IsActiveããó ü
=ãã† °
trueãã¢ ¶
}ããß ®
)
åå 
;
åå 
modelBuilder
éé 
.
éé 
Entity
éé 
<
éé  
Profile
éé  '
>
éé' (
(
éé( )
)
éé) *
.
èè 
HasData
èè 
(
èè  
new
êê 
Profile
êê #
{
êê$ %
	ProfileId
êê& /
=
êê0 1
$num
êê2 3
,
êê3 4
ProfileStatusId
êê5 D
=
êêE F
$num
êêG H
,
êêH I
UserId
êêJ P
=
êêQ R
$num
êêS T
,
êêT U
IsActive
êêV ^
=
êê_ `
true
êêa e
}
êêf g
,
êêg h
new
ëë 
Profile
ëë #
{
ëë$ %
	ProfileId
ëë& /
=
ëë0 1
$num
ëë2 3
,
ëë3 4
ProfileStatusId
ëë5 D
=
ëëE F
$num
ëëG H
,
ëëH I
UserId
ëëJ P
=
ëëQ R
$num
ëëS T
,
ëëT U
IsActive
ëëV ^
=
ëë_ `
true
ëëa e
}
ëëf g
,
ëëg h
new
íí 
Profile
íí #
{
íí$ %
	ProfileId
íí& /
=
íí0 1
$num
íí2 3
,
íí3 4
ProfileStatusId
íí5 D
=
ííE F
$num
ííG H
,
ííH I
UserId
ííJ P
=
ííQ R
$num
ííS T
,
ííT U
IsActive
ííV ^
=
íí_ `
true
íía e
}
ííf g
,
ííg h
new
ìì 
Profile
ìì #
{
ìì$ %
	ProfileId
ìì& /
=
ìì0 1
$num
ìì2 3
,
ìì3 4
ProfileStatusId
ìì5 D
=
ììE F
$num
ììG H
,
ììH I
UserId
ììJ P
=
ììQ R
$num
ììS T
,
ììT U
IsActive
ììV ^
=
ìì_ `
true
ììa e
}
ììf g
,
ììg h
new
îî 
Profile
îî #
{
îî$ %
	ProfileId
îî& /
=
îî0 1
$num
îî2 3
,
îî3 4
ProfileStatusId
îî5 D
=
îîE F
$num
îîG H
,
îîH I
UserId
îîJ P
=
îîQ R
$num
îîS T
,
îîT U
IsActive
îîV ^
=
îî_ `
true
îîa e
}
îîf g
)
ïï 
;
ïï 
modelBuilder
ññ 
.
ññ 
Entity
ññ 
<
ññ  
	Education
ññ  )
>
ññ) *
(
ññ* +
)
ññ+ ,
.
óó 
HasData
óó 
(
óó  
new
òò 
	Education
òò %
{
òò& '
EducationId
òò( 3
=
òò4 5
$num
òò6 7
,
òò7 8
	ProfileId
òò9 B
=
òòC D
$num
òòE F
,
òòF G
Degree
òòH N
=
òòO P
$str
òòQ U
,
òòU V
Course
òòW ]
=
òò^ _
$str
òò` e
,
òòe f
	CollegeId
òòg p
=
òòq r
$num
òòs t
,
òòt u
Starting
òòv ~
=òò Ä
$numòòÅ Ö
,òòÖ Ü
Endingòòá ç
=òòé è
$numòòê î
,òòî ï

Percentageòòñ †
=òò° ¢
$numòò£ ®
,òò® ©
IsActiveòò™ ≤
=òò≥ ¥
trueòòµ π
}òò∫ ª
,òòª º
new
ôô 
	Education
ôô %
{
ôô& '
EducationId
ôô( 3
=
ôô4 5
$num
ôô6 7
,
ôô7 8
	ProfileId
ôô9 B
=
ôôC D
$num
ôôE F
,
ôôF G
Degree
ôôH N
=
ôôO P
$str
ôôQ X
,
ôôX Y
Course
ôôZ `
=
ôôa b
$str
ôôc g
,
ôôg h
	CollegeId
ôôi r
=
ôôs t
$num
ôôu v
,
ôôv w
Startingôôx Ä
=ôôÅ Ç
$numôôÉ á
,ôôá à
Endingôôâ è
=ôôê ë
$numôôí ñ
,ôôñ ó

Percentageôôò ¢
=ôô£ §
$numôô• ™
,ôô™ ´
IsActiveôô¨ ¥
=ôôµ ∂
trueôô∑ ª
}ôôº Ω
,ôôΩ æ
new
öö 
	Education
öö %
{
öö& '
EducationId
öö( 3
=
öö4 5
$num
öö6 7
,
öö7 8
	ProfileId
öö9 B
=
ööC D
$num
ööE F
,
ööF G
Degree
ööH N
=
ööO P
$str
ööQ V
,
ööV W
Course
ööX ^
=
öö_ `
$str
ööa f
,
ööf g
	CollegeId
ööh q
=
öör s
$num
ööt u
,
ööu v
Starting
ööw 
=ööÄ Å
$numööÇ Ü
,ööÜ á
Endingööà é
=ööè ê
$numööë ï
,ööï ñ

Percentageööó °
=öö¢ £
$numöö§ ©
,öö© ™
IsActiveöö´ ≥
=öö¥ µ
trueöö∂ ∫
}ööª º
,ööº Ω
new
õõ 
	Education
õõ %
{
õõ& '
EducationId
õõ( 3
=
õõ4 5
$num
õõ6 7
,
õõ7 8
	ProfileId
õõ9 B
=
õõC D
$num
õõE F
,
õõF G
Degree
õõH N
=
õõO P
$str
õõQ U
,
õõU V
Course
õõW ]
=
õõ^ _
$str
õõ` e
,
õõe f
	CollegeId
õõg p
=
õõq r
$num
õõs u
,
õõu v
Starting
õõw 
=õõÄ Å
$numõõÇ Ü
,õõÜ á
Endingõõà é
=õõè ê
$numõõë ï
,õõï ñ

Percentageõõó °
=õõ¢ £
$numõõ§ ©
,õõ© ™
IsActiveõõ´ ≥
=õõ¥ µ
trueõõ∂ ∫
}õõª º
,õõº Ω
new
úú 
	Education
úú %
{
úú& '
EducationId
úú( 3
=
úú4 5
$num
úú6 7
,
úú7 8
	ProfileId
úú9 B
=
úúC D
$num
úúE F
,
úúF G
Degree
úúH N
=
úúO P
$str
úúQ X
,
úúX Y
Course
úúZ `
=
úúa b
$str
úúc g
,
úúg h
	CollegeId
úúi r
=
úús t
$num
úúu v
,
úúv w
Startingúúx Ä
=úúÅ Ç
$numúúÉ á
,úúá à
Endingúúâ è
=úúê ë
$numúúí ñ
,úúñ ó

Percentageúúò ¢
=úú£ §
$numúú• ™
,úú™ ´
IsActiveúú¨ ¥
=úúµ ∂
trueúú∑ ª
}úúº Ω
)
ûû 
;
ûû 
modelBuilder
üü 
.
üü 
Entity
üü 
<
üü  
ProfileHistory
üü  .
>
üü. /
(
üü/ 0
)
üü0 1
.
†† 
HasData
†† 
(
††  
new
°° 
ProfileHistory
°° *
{
°°+ ,
ProfileHistoryId
°°- =
=
°°> ?
$num
°°@ A
,
°°A B
	ProfileId
°°C L
=
°°M N
$num
°°O P
,
°°P Q
ApprovedDate
°°R ^
=
°°_ `
new
°°a d
System
°°e k
.
°°k l
DateTime
°°l t
(
°°t u
$num
°°u y
,
°°y z
$num
°°{ }
,
°°} ~
$num°° Å
)°°Å Ç
,°°Ç É
IsActive°°Ñ å
=°°ç é
true°°è ì
}°°î ï
,°°ï ñ
new
¢¢ 
ProfileHistory
¢¢ *
{
¢¢+ ,
ProfileHistoryId
¢¢- =
=
¢¢> ?
$num
¢¢@ A
,
¢¢A B
	ProfileId
¢¢C L
=
¢¢M N
$num
¢¢O P
,
¢¢P Q
ApprovedDate
¢¢R ^
=
¢¢_ `
new
¢¢a d
System
¢¢e k
.
¢¢k l
DateTime
¢¢l t
(
¢¢t u
$num
¢¢u y
,
¢¢y z
$num
¢¢{ }
,
¢¢} ~
$num¢¢ Å
)¢¢Å Ç
,¢¢Ç É
IsActive¢¢Ñ å
=¢¢ç é
true¢¢è ì
}¢¢î ï
,¢¢ï ñ
new
££ 
ProfileHistory
££ *
{
££+ ,
ProfileHistoryId
££- =
=
££> ?
$num
££@ A
,
££A B
	ProfileId
££C L
=
££M N
$num
££O P
,
££P Q
ApprovedDate
££R ^
=
££_ `
new
££a d
System
££e k
.
££k l
DateTime
££l t
(
££t u
$num
££u y
,
££y z
$num
££{ }
,
££} ~
$num££ Å
)££Å Ç
,££Ç É
IsActive££Ñ å
=££ç é
true££è ì
}££î ï
,££ï ñ
new
§§ 
ProfileHistory
§§ *
{
§§+ ,
ProfileHistoryId
§§- =
=
§§> ?
$num
§§@ A
,
§§A B
	ProfileId
§§C L
=
§§M N
$num
§§O P
,
§§P Q
ApprovedDate
§§R ^
=
§§_ `
new
§§a d
System
§§e k
.
§§k l
DateTime
§§l t
(
§§t u
$num
§§u y
,
§§y z
$num
§§{ }
,
§§} ~
$num§§ Å
)§§Å Ç
,§§Ç É
IsActive§§Ñ å
=§§ç é
true§§è ì
}§§î ï
)
•• 
;
•• 
modelBuilder
¶¶ 
.
¶¶ 
Entity
¶¶ 
<
¶¶  
Skills
¶¶  &
>
¶¶& '
(
¶¶' (
)
¶¶( )
.
ßß 
HasData
ßß  
(
ßß  !
new
®® 
Skills
®® #
{
®®$ %
SkillId
®®& -
=
®®. /
$num
®®0 1
,
®®1 2
	ProfileId
®®3 <
=
®®= >
$num
®®? @
,
®®@ A
TechnologyId
®®B N
=
®®O P
$num
®®Q R
,
®®R S
DomainId
®®T \
=
®®] ^
$num
®®_ `
,
®®` a
IsActive
®®b j
=
®®k l
true
®®m q
}
®®r s
,
®®s t
new
©© 
Skills
©© #
{
©©$ %
SkillId
©©& -
=
©©. /
$num
©©0 1
,
©©1 2
	ProfileId
©©3 <
=
©©= >
$num
©©? @
,
©©@ A
TechnologyId
©©B N
=
©©O P
$num
©©Q R
,
©©R S
DomainId
©©T \
=
©©] ^
$num
©©_ `
,
©©` a
IsActive
©©b j
=
©©k l
true
©©m q
}
©©r s
,
©©s t
new
™™ 
Skills
™™ #
{
™™$ %
SkillId
™™& -
=
™™. /
$num
™™0 1
,
™™1 2
	ProfileId
™™3 <
=
™™= >
$num
™™? @
,
™™@ A
TechnologyId
™™B N
=
™™O P
$num
™™Q R
,
™™R S
DomainId
™™T \
=
™™] ^
$num
™™_ `
,
™™` a
IsActive
™™b j
=
™™k l
true
™™m q
}
™™r s
,
™™s t
new
´´ 
Skills
´´ #
{
´´$ %
SkillId
´´& -
=
´´. /
$num
´´0 1
,
´´1 2
	ProfileId
´´3 <
=
´´= >
$num
´´? @
,
´´@ A
TechnologyId
´´B N
=
´´O P
$num
´´Q R
,
´´R S
DomainId
´´T \
=
´´] ^
$num
´´_ `
,
´´` a
IsActive
´´b j
=
´´k l
true
´´m q
}
´´r s
,
´´s t
new
¨¨ 
Skills
¨¨ #
{
¨¨$ %
SkillId
¨¨& -
=
¨¨. /
$num
¨¨0 1
,
¨¨1 2
	ProfileId
¨¨3 <
=
¨¨= >
$num
¨¨? @
,
¨¨@ A
TechnologyId
¨¨B N
=
¨¨O P
$num
¨¨Q R
,
¨¨R S
DomainId
¨¨T \
=
¨¨] ^
$num
¨¨_ `
,
¨¨` a
IsActive
¨¨b j
=
¨¨k l
true
¨¨m q
}
¨¨r s
)
≠≠ 
;
≠≠ 
modelBuilder
ÆÆ 
.
ÆÆ 
Entity
ÆÆ 
<
ÆÆ  
Projects
ÆÆ  (
>
ÆÆ( )
(
ÆÆ) *
)
ÆÆ* +
.
ØØ 
HasData
ØØ  
(
ØØ  !
new
∞∞ 
Projects
∞∞ %
{
∞∞& '
	ProjectId
∞∞( 1
=
∞∞2 3
$num
∞∞4 5
,
∞∞5 6
	ProfileId
∞∞7 @
=
∞∞A B
$num
∞∞C D
,
∞∞D E
ProjectName
∞∞F Q
=
∞∞R S
$str
∞∞T Y
,
∞∞Y Z 
ProjectDescription
∞∞[ m
=
∞∞n o
$str∞∞p Ç
,∞∞Ç É
StartingMonth∞∞Ñ ë
=∞∞í ì
$str∞∞î ù
,∞∞ù û
StartingYear∞∞ü ´
=∞∞¨ ≠
$num∞∞Æ ≤
,∞∞≤ ≥
EndingMonth∞∞¥ ø
=∞∞¿ ¡
$str∞∞¬ À
,∞∞À Ã

EndingYear∞∞Õ ◊
=∞∞ÿ Ÿ
$num∞∞⁄ ﬁ
,∞∞ﬁ ﬂ
Designation∞∞‡ Î
=∞∞Ï Ì
$str∞∞Ó Ú
,∞∞Ú Û
	ToolsUsed∞∞Ù ˝
=∞∞˛ ˇ
$str∞∞Ä á
,∞∞á à
IsActive∞∞â ë
=∞∞í ì
true∞∞î ò
}∞∞ô ö
,∞∞ö õ
new
±± 
Projects
±± %
{
±±& '
	ProjectId
±±( 1
=
±±2 3
$num
±±4 5
,
±±5 6
	ProfileId
±±7 @
=
±±A B
$num
±±C D
,
±±D E
ProjectName
±±F Q
=
±±R S
$str
±±T Y
,
±±Y Z 
ProjectDescription
±±[ m
=
±±n o
$str±±p Ö
,±±Ö Ü
StartingMonth±±á î
=±±ï ñ
$str±±ó û
,±±û ü
StartingYear±±† ¨
=±±≠ Æ
$num±±Ø ≥
,±±≥ ¥
EndingMonth±±µ ¿
=±±¡ ¬
$str±±√ …
,±±…  

EndingYear±±À ’
=±±÷ ◊
$num±±ÿ ‹
,±±‹ ›
Designation±±ﬁ È
=±±Í Î
$str±±Ï Ò
,±±Ò Ú
	ToolsUsed±±Û ¸
=±±˝ ˛
$str±±ˇ â
,±±â ä
IsActive±±ã ì
=±±î ï
true±±ñ ö
}±±õ ú
,±±ú ù
new
≤≤ 
Projects
≤≤ %
{
≤≤& '
	ProjectId
≤≤( 1
=
≤≤2 3
$num
≤≤4 5
,
≤≤5 6
	ProfileId
≤≤7 @
=
≤≤A B
$num
≤≤C D
,
≤≤D E
ProjectName
≤≤F Q
=
≤≤R S
$str
≤≤T Y
,
≤≤Y Z 
ProjectDescription
≤≤[ m
=
≤≤n o
$str≤≤p É
,≤≤É Ñ
StartingMonth≤≤Ö í
=≤≤ì î
$str≤≤ï û
,≤≤û ü
StartingYear≤≤† ¨
=≤≤≠ Æ
$num≤≤Ø ≥
,≤≤≥ ¥
EndingMonth≤≤µ ¿
=≤≤¡ ¬
$str≤≤√ …
,≤≤…  

EndingYear≤≤À ’
=≤≤÷ ◊
$num≤≤ÿ ‹
,≤≤‹ ›
Designation≤≤ﬁ È
=≤≤Í Î
$str≤≤Ï 
,≤≤ Ò
	ToolsUsed≤≤Ú ˚
=≤≤¸ ˝
$str≤≤˛ Ñ
,≤≤Ñ Ö
IsActive≤≤Ü é
=≤≤è ê
true≤≤ë ï
}≤≤ñ ó
,≤≤ó ò
new
≥≥ 
Projects
≥≥ %
{
≥≥& '
	ProjectId
≥≥( 1
=
≥≥2 3
$num
≥≥4 5
,
≥≥5 6
	ProfileId
≥≥7 @
=
≥≥A B
$num
≥≥C D
,
≥≥D E
ProjectName
≥≥F Q
=
≥≥R S
$str
≥≥T Y
,
≥≥Y Z 
ProjectDescription
≥≥[ m
=
≥≥n o
$str≥≥p Ñ
,≥≥Ñ Ö
StartingMonth≥≥Ü ì
=≥≥î ï
$str≥≥ñ †
,≥≥† °
StartingYear≥≥¢ Æ
=≥≥Ø ∞
$num≥≥± µ
,≥≥µ ∂
EndingMonth≥≥∑ ¬
=≥≥√ ƒ
$str≥≥≈ œ
,≥≥œ –

EndingYear≥≥— €
=≥≥‹ ›
$num≥≥ﬁ ‚
,≥≥‚ „
Designation≥≥‰ Ô
=≥≥ Ò
$str≥≥Ú ˆ
,≥≥ˆ ˜
	ToolsUsed≥≥¯ Å
=≥≥Ç É
$str≥≥Ñ ã
,≥≥ã å
IsActive≥≥ç ï
=≥≥ñ ó
true≥≥ò ú
}≥≥ù û
,≥≥û ü
new
¥¥ 
Projects
¥¥ %
{
¥¥& '
	ProjectId
¥¥( 1
=
¥¥2 3
$num
¥¥4 5
,
¥¥5 6
	ProfileId
¥¥7 @
=
¥¥A B
$num
¥¥C D
,
¥¥D E
ProjectName
¥¥F Q
=
¥¥R S
$str
¥¥T Y
,
¥¥Y Z 
ProjectDescription
¥¥[ m
=
¥¥n o
$str¥¥p Ç
,¥¥Ç É
StartingMonth¥¥Ñ ë
=¥¥í ì
$str¥¥î û
,¥¥û ü
StartingYear¥¥† ¨
=¥¥≠ Æ
$num¥¥Ø ≥
,¥¥≥ ¥
EndingMonth¥¥µ ¿
=¥¥¡ ¬
$str¥¥√ Œ
,¥¥Œ œ

EndingYear¥¥– ⁄
=¥¥€ ‹
$num¥¥› ·
,¥¥· ‚
Designation¥¥„ Ó
=¥¥Ô 
$str¥¥Ò ı
,¥¥ı ˆ
	ToolsUsed¥¥˜ Ä
=¥¥Å Ç
$str¥¥É â
,¥¥â ä
IsActive¥¥ã ì
=¥¥î ï
true¥¥ñ ö
}¥¥õ ú
)
µµ 
;
µµ 
modelBuilder
∑∑ 
.
∑∑ 
Entity
∑∑ 
<
∑∑  
PersonalDetails
∑∑  /
>
∑∑/ 0
(
∑∑0 1
)
∑∑1 2
.
∏∏ 
HasData
∏∏ 
(
∏∏  
new
ππ 
PersonalDetails
ππ +
{
ππ, -
PersonalDetailsId
ππ. ?
=
ππ@ A
$num
ππB C
,
ππC D
	ProfileId
ππE N
=
ππO P
$num
ππQ R
,
ππR S
	Objective
ππT ]
=
ππ^ _
$str
ππ` p
,
ππp q
DateOfBirth
ππr }
=
ππ~ 
newππÄ É
SystemππÑ ä
.ππä ã
DateTimeππã ì
(ππì î
$numππî ò
,ππò ô
$numππö ú
,ππú ù
$numππû †
)ππ† °
,ππ° ¢
Nationalityππ£ Æ
=ππØ ∞
$strππ± π
,πππ ∫
DateOfJoiningππª »
=ππ…  
newππÀ Œ
Systemππœ ’
.ππ’ ÷
DateTimeππ÷ ﬁ
(ππﬁ ﬂ
$numππﬂ „
,ππ„ ‰
$numππÂ Á
,ππÁ Ë
$numππÈ Î
)ππÎ Ï
,ππÏ Ì
base64headerππÓ ˙
=ππ˚ ¸
$strππ˝ Ç
,ππÇ É
UserIdππÑ ä
=ππã å
$numππç é
,ππé è
IsActiveππê ò
=ππô ö
trueππõ ü
}ππ† °
,ππ° ¢
new
∫∫ 
PersonalDetails
∫∫ +
{
∫∫, -
PersonalDetailsId
∫∫. ?
=
∫∫@ A
$num
∫∫B C
,
∫∫C D
	ProfileId
∫∫E N
=
∫∫O P
$num
∫∫Q R
,
∫∫R S
	Objective
∫∫T ]
=
∫∫^ _
$str
∫∫` p
,
∫∫p q
DateOfBirth
∫∫r }
=
∫∫~ 
new∫∫Ä É
System∫∫Ñ ä
.∫∫ä ã
DateTime∫∫ã ì
(∫∫ì î
$num∫∫î ò
,∫∫ò ô
$num∫∫ö ú
,∫∫ú ù
$num∫∫û †
)∫∫† °
,∫∫° ¢
Nationality∫∫£ Æ
=∫∫Ø ∞
$str∫∫± π
,∫∫π ∫
DateOfJoining∫∫ª »
=∫∫…  
new∫∫À Œ
System∫∫œ ’
.∫∫’ ÷
DateTime∫∫÷ ﬁ
(∫∫ﬁ ﬂ
$num∫∫ﬂ „
,∫∫„ ‰
$num∫∫Â Á
,∫∫Á Ë
$num∫∫È Î
)∫∫Î Ï
,∫∫Ï Ì
base64header∫∫Ó ˙
=∫∫˚ ¸
$str∫∫˝ Ç
,∫∫Ç É
UserId∫∫Ñ ä
=∫∫ã å
$num∫∫ç é
,∫∫é è
IsActive∫∫ê ò
=∫∫ô ö
true∫∫õ ü
}∫∫† °
,∫∫° ¢
new
ªª 
PersonalDetails
ªª +
{
ªª, -
PersonalDetailsId
ªª. ?
=
ªª@ A
$num
ªªB C
,
ªªC D
	ProfileId
ªªE N
=
ªªO P
$num
ªªQ R
,
ªªR S
	Objective
ªªT ]
=
ªª^ _
$str
ªª` p
,
ªªp q
DateOfBirth
ªªr }
=
ªª~ 
newªªÄ É
SystemªªÑ ä
.ªªä ã
DateTimeªªã ì
(ªªì î
$numªªî ò
,ªªò ô
$numªªö ú
,ªªú ù
$numªªû †
)ªª† °
,ªª° ¢
Nationalityªª£ Æ
=ªªØ ∞
$strªª± π
,ªªπ ∫
DateOfJoiningªªª »
=ªª…  
newªªÀ Œ
Systemªªœ ’
.ªª’ ÷
DateTimeªª÷ ﬁ
(ªªﬁ ﬂ
$numªªﬂ „
,ªª„ ‰
$numªªÂ Á
,ªªÁ Ë
$numªªÈ Î
)ªªÎ Ï
,ªªÏ Ì
base64headerªªÓ ˙
=ªª˚ ¸
$strªª˝ Ç
,ªªÇ É
UserIdªªÑ ä
=ªªã å
$numªªç é
,ªªé è
IsActiveªªê ò
=ªªô ö
trueªªõ ü
}ªª† °
,ªª° ¢
new
ºº 
PersonalDetails
ºº +
{
ºº, -
PersonalDetailsId
ºº. ?
=
ºº@ A
$num
ººB C
,
ººC D
	ProfileId
ººE N
=
ººO P
$num
ººQ R
,
ººR S
	Objective
ººT ]
=
ºº^ _
$str
ºº` p
,
ººp q
DateOfBirth
ººr }
=
ºº~ 
newººÄ É
SystemººÑ ä
.ººä ã
DateTimeººã ì
(ººì î
$numººî ò
,ººò ô
$numººö ú
,ººú ù
$numººû †
)ºº† °
,ºº° ¢
Nationalityºº£ Æ
=ººØ ∞
$strºº± π
,ººπ ∫
DateOfJoiningººª »
=ºº…  
newººÀ Œ
Systemººœ ’
.ºº’ ÷
DateTimeºº÷ ﬁ
(ººﬁ ﬂ
$numººﬂ „
,ºº„ ‰
$numººÂ Á
,ººÁ Ë
$numººÈ Î
)ººÎ Ï
,ººÏ Ì
base64headerººÓ ˙
=ºº˚ ¸
$strºº˝ Ç
,ººÇ É
UserIdººÑ ä
=ººã å
$numººç é
,ººé è
IsActiveººê ò
=ººô ö
trueººõ ü
}ºº† °
,ºº° ¢
new
ΩΩ 
PersonalDetails
ΩΩ +
{
ΩΩ, -
PersonalDetailsId
ΩΩ. ?
=
ΩΩ@ A
$num
ΩΩB C
,
ΩΩC D
	ProfileId
ΩΩE N
=
ΩΩO P
$num
ΩΩQ R
,
ΩΩR S
	Objective
ΩΩT ]
=
ΩΩ^ _
$str
ΩΩ` p
,
ΩΩp q
DateOfBirth
ΩΩr }
=
ΩΩ~ 
newΩΩÄ É
SystemΩΩÑ ä
.ΩΩä ã
DateTimeΩΩã ì
(ΩΩì î
$numΩΩî ò
,ΩΩò ô
$numΩΩö ú
,ΩΩú ù
$numΩΩû †
)ΩΩ† °
,ΩΩ° ¢
NationalityΩΩ£ Æ
=ΩΩØ ∞
$strΩΩ± π
,ΩΩπ ∫
DateOfJoiningΩΩª »
=ΩΩ…  
newΩΩÀ Œ
SystemΩΩœ ’
.ΩΩ’ ÷
DateTimeΩΩ÷ ﬁ
(ΩΩﬁ ﬂ
$numΩΩﬂ „
,ΩΩ„ ‰
$numΩΩÂ Á
,ΩΩÁ Ë
$numΩΩÈ Î
)ΩΩÎ Ï
,ΩΩÏ Ì
base64headerΩΩÓ ˙
=ΩΩ˚ ¸
$strΩΩ˝ Ç
,ΩΩÇ É
UserIdΩΩÑ ä
=ΩΩã å
$numΩΩç é
,ΩΩé è
IsActiveΩΩê ò
=ΩΩô ö
trueΩΩõ ü
}ΩΩ† °
)
ææ 
;
ææ 
modelBuilder
øø 
.
øø 
Entity
øø 
<
øø  
BreakDuration
øø  -
>
øø- .
(
øø. /
)
øø/ 0
.
¿¿ 
HasData
¿¿  
(
¿¿  !
new
¡¡ 
BreakDuration
¡¡ *
{
¡¡+ ,
BreakDuration_Id
¡¡- =
=
¡¡> ?
$num
¡¡@ A
,
¡¡A B
StartingDuration
¡¡C S
=
¡¡T U
new
¡¡V Y
DateTime
¡¡Z b
(
¡¡b c
$num
¡¡c g
,
¡¡g h
$num
¡¡i k
,
¡¡k l
$num
¡¡m o
)
¡¡o p
,
¡¡p q
EndingDuration¡¡r Ä
=¡¡Å Ç
new¡¡É Ü
DateTime¡¡á è
(¡¡è ê
$num¡¡ê î
,¡¡î ï
$num¡¡ñ ò
,¡¡ò ô
$num¡¡ö ú
)¡¡ú ù
,¡¡ù û!
PersonalDetailsId¡¡ü ∞
=¡¡± ≤
$num¡¡≥ ¥
,¡¡¥ µ
IsActive¡¡∂ æ
=¡¡ø ¿
true¡¡¡ ≈
}¡¡∆ «
,¡¡« »
new
¬¬ 
BreakDuration
¬¬ *
{
¬¬+ ,
BreakDuration_Id
¬¬- =
=
¬¬> ?
$num
¬¬@ A
,
¬¬A B
StartingDuration
¬¬C S
=
¬¬T U
new
¬¬V Y
DateTime
¬¬Z b
(
¬¬b c
$num
¬¬c g
,
¬¬g h
$num
¬¬i k
,
¬¬k l
$num
¬¬m o
)
¬¬o p
,
¬¬p q
EndingDuration¬¬r Ä
=¬¬Å Ç
new¬¬É Ü
DateTime¬¬á è
(¬¬è ê
$num¬¬ê î
,¬¬î ï
$num¬¬ñ ò
,¬¬ò ô
$num¬¬ö ú
)¬¬ú ù
,¬¬ù û!
PersonalDetailsId¬¬ü ∞
=¬¬± ≤
$num¬¬≥ ¥
,¬¬¥ µ
IsActive¬¬∂ æ
=¬¬ø ¿
true¬¬¡ ≈
}¬¬∆ «
,¬¬« »
new
√√ 
BreakDuration
√√ *
{
√√+ ,
BreakDuration_Id
√√- =
=
√√> ?
$num
√√@ A
,
√√A B
StartingDuration
√√C S
=
√√T U
new
√√V Y
DateTime
√√Z b
(
√√b c
$num
√√c g
,
√√g h
$num
√√i k
,
√√k l
$num
√√m o
)
√√o p
,
√√p q
EndingDuration√√r Ä
=√√Å Ç
new√√É Ü
DateTime√√á è
(√√è ê
$num√√ê î
,√√î ï
$num√√ñ ò
,√√ò ô
$num√√ö ú
)√√ú ù
,√√ù û!
PersonalDetailsId√√ü ∞
=√√± ≤
$num√√≥ ¥
,√√¥ µ
IsActive√√∂ æ
=√√ø ¿
true√√¡ ≈
}√√∆ «
,√√« »
new
ƒƒ 
BreakDuration
ƒƒ *
{
ƒƒ+ ,
BreakDuration_Id
ƒƒ- =
=
ƒƒ> ?
$num
ƒƒ@ A
,
ƒƒA B
StartingDuration
ƒƒC S
=
ƒƒT U
new
ƒƒV Y
DateTime
ƒƒZ b
(
ƒƒb c
$num
ƒƒc g
,
ƒƒg h
$num
ƒƒi k
,
ƒƒk l
$num
ƒƒm o
)
ƒƒo p
,
ƒƒp q
EndingDurationƒƒr Ä
=ƒƒÅ Ç
newƒƒÉ Ü
DateTimeƒƒá è
(ƒƒè ê
$numƒƒê î
,ƒƒî ï
$numƒƒñ ò
,ƒƒò ô
$numƒƒö ú
)ƒƒú ù
,ƒƒù û!
PersonalDetailsIdƒƒü ∞
=ƒƒ± ≤
$numƒƒ≥ ¥
,ƒƒ¥ µ
IsActiveƒƒ∂ æ
=ƒƒø ¿
trueƒƒ¡ ≈
}ƒƒ∆ «
,ƒƒ« »
new
≈≈ 
BreakDuration
≈≈ *
{
≈≈+ ,
BreakDuration_Id
≈≈- =
=
≈≈> ?
$num
≈≈@ A
,
≈≈A B
StartingDuration
≈≈C S
=
≈≈T U
new
≈≈V Y
DateTime
≈≈Z b
(
≈≈b c
$num
≈≈c g
,
≈≈g h
$num
≈≈i k
,
≈≈k l
$num
≈≈m o
)
≈≈o p
,
≈≈p q
EndingDuration≈≈r Ä
=≈≈Å Ç
new≈≈É Ü
DateTime≈≈á è
(≈≈è ê
$num≈≈ê î
,≈≈î ï
$num≈≈ñ ò
,≈≈ò ô
$num≈≈ö ú
)≈≈ú ù
,≈≈ù û!
PersonalDetailsId≈≈ü ∞
=≈≈± ≤
$num≈≈≥ ¥
,≈≈¥ µ
IsActive≈≈∂ æ
=≈≈ø ¿
true≈≈¡ ≈
}≈≈∆ «
,≈≈« »
new
∆∆ 
BreakDuration
∆∆ *
{
∆∆+ ,
BreakDuration_Id
∆∆- =
=
∆∆> ?
$num
∆∆@ A
,
∆∆A B
StartingDuration
∆∆C S
=
∆∆T U
new
∆∆V Y
DateTime
∆∆Z b
(
∆∆b c
$num
∆∆c g
,
∆∆g h
$num
∆∆i k
,
∆∆k l
$num
∆∆m o
)
∆∆o p
,
∆∆p q
EndingDuration∆∆r Ä
=∆∆Å Ç
new∆∆É Ü
DateTime∆∆á è
(∆∆è ê
$num∆∆ê î
,∆∆î ï
$num∆∆ñ ò
,∆∆ò ô
$num∆∆ö ú
)∆∆ú ù
,∆∆ù û!
PersonalDetailsId∆∆ü ∞
=∆∆± ≤
$num∆∆≥ ¥
,∆∆¥ µ
IsActive∆∆∂ æ
=∆∆ø ¿
true∆∆¡ ≈
}∆∆∆ «
)
«« 
;
«« 
modelBuilder
»» 
.
»» 
Entity
»» 
<
»»  
Language
»»  (
>
»»( )
(
»») *
)
»»* +
.
…… 
HasData
…… 
(
…… 
new
   
Language
   #
{
  $ %

LanguageId
  & 0
=
  1 2
$num
  3 4
,
  4 5
LanguageName
  6 B
=
  C D
$str
  E N
,
  N O
Read
  P T
=
  U V
true
  W [
,
  [ \
Write
  ] b
=
  c d
true
  e i
,
  i j
Speak
  k p
=
  q r
true
  s w
,
  w x 
PersonalDetailsId  y ä
=  ã å
$num  ç é
,  é è
	CreatedOn  ê ô
=  ö õ
System  ú ¢
.  ¢ £
DateTime  £ ´
.  ´ ¨
Now  ¨ Ø
,  Ø ∞
IsActive  ± π
=  ∫ ª
true  º ¿
}  ¡ ¬
,  ¬ √
new
ÀÀ 
Language
ÀÀ #
{
ÀÀ$ %

LanguageId
ÀÀ& 0
=
ÀÀ1 2
$num
ÀÀ3 4
,
ÀÀ4 5
LanguageName
ÀÀ6 B
=
ÀÀC D
$str
ÀÀE L
,
ÀÀL M
Read
ÀÀN R
=
ÀÀS T
true
ÀÀU Y
,
ÀÀY Z
Write
ÀÀ[ `
=
ÀÀa b
true
ÀÀc g
,
ÀÀg h
Speak
ÀÀi n
=
ÀÀo p
true
ÀÀq u
,
ÀÀu v 
PersonalDetailsIdÀÀw à
=ÀÀâ ä
$numÀÀã å
,ÀÀå ç
	CreatedOnÀÀé ó
=ÀÀò ô
SystemÀÀö †
.ÀÀ† °
DateTimeÀÀ° ©
.ÀÀ© ™
NowÀÀ™ ≠
,ÀÀ≠ Æ
IsActiveÀÀØ ∑
=ÀÀ∏ π
trueÀÀ∫ æ
}ÀÀø ¿
,ÀÀ¿ ¡
new
ÃÃ 
Language
ÃÃ #
{
ÃÃ$ %

LanguageId
ÃÃ& 0
=
ÃÃ1 2
$num
ÃÃ3 4
,
ÃÃ4 5
LanguageName
ÃÃ6 B
=
ÃÃC D
$str
ÃÃE L
,
ÃÃL M
Read
ÃÃN R
=
ÃÃS T
true
ÃÃU Y
,
ÃÃY Z
Write
ÃÃ[ `
=
ÃÃa b
true
ÃÃc g
,
ÃÃg h
Speak
ÃÃi n
=
ÃÃo p
true
ÃÃq u
,
ÃÃu v 
PersonalDetailsIdÃÃw à
=ÃÃâ ä
$numÃÃã å
,ÃÃå ç
	CreatedOnÃÃé ó
=ÃÃò ô
SystemÃÃö †
.ÃÃ† °
DateTimeÃÃ° ©
.ÃÃ© ™
NowÃÃ™ ≠
,ÃÃ≠ Æ
IsActiveÃÃØ ∑
=ÃÃ∏ π
trueÃÃ∫ æ
}ÃÃø ¿
,ÃÃ¿ ¡
new
ÕÕ 
Language
ÕÕ #
{
ÕÕ$ %

LanguageId
ÕÕ& 0
=
ÕÕ1 2
$num
ÕÕ3 4
,
ÕÕ4 5
LanguageName
ÕÕ6 B
=
ÕÕC D
$str
ÕÕE M
,
ÕÕM N
Read
ÕÕO S
=
ÕÕT U
true
ÕÕV Z
,
ÕÕZ [
Write
ÕÕ\ a
=
ÕÕb c
true
ÕÕd h
,
ÕÕh i
Speak
ÕÕj o
=
ÕÕp q
true
ÕÕr v
,
ÕÕv w 
PersonalDetailsIdÕÕx â
=ÕÕä ã
$numÕÕå ç
,ÕÕç é
	CreatedOnÕÕè ò
=ÕÕô ö
SystemÕÕõ °
.ÕÕ° ¢
DateTimeÕÕ¢ ™
.ÕÕ™ ´
NowÕÕ´ Æ
,ÕÕÆ Ø
IsActiveÕÕ∞ ∏
=ÕÕπ ∫
trueÕÕª ø
}ÕÕ¿ ¡
,ÕÕ¡ ¬
new
ŒŒ 
Language
ŒŒ #
{
ŒŒ$ %

LanguageId
ŒŒ& 0
=
ŒŒ1 2
$num
ŒŒ3 4
,
ŒŒ4 5
LanguageName
ŒŒ6 B
=
ŒŒC D
$str
ŒŒE P
,
ŒŒP Q
Read
ŒŒR V
=
ŒŒW X
true
ŒŒY ]
,
ŒŒ] ^
Write
ŒŒ_ d
=
ŒŒe f
true
ŒŒg k
,
ŒŒk l
Speak
ŒŒm r
=
ŒŒs t
true
ŒŒu y
,
ŒŒy z 
PersonalDetailsIdŒŒ{ å
=ŒŒç é
$numŒŒè ê
,ŒŒê ë
	CreatedOnŒŒí õ
=ŒŒú ù
SystemŒŒû §
.ŒŒ§ •
DateTimeŒŒ• ≠
.ŒŒ≠ Æ
NowŒŒÆ ±
,ŒŒ± ≤
IsActiveŒŒ≥ ª
=ŒŒº Ω
trueŒŒæ ¬
}ŒŒ√ ƒ
,ŒŒƒ ≈
new
œœ 
Language
œœ #
{
œœ$ %

LanguageId
œœ& 0
=
œœ1 2
$num
œœ3 4
,
œœ4 5
LanguageName
œœ6 B
=
œœC D
$str
œœE N
,
œœN O
Read
œœP T
=
œœU V
true
œœW [
,
œœ[ \
Write
œœ] b
=
œœc d
true
œœe i
,
œœi j
Speak
œœk p
=
œœq r
true
œœs w
,
œœw x 
PersonalDetailsIdœœy ä
=œœã å
$numœœç é
,œœé è
	CreatedOnœœê ô
=œœö õ
Systemœœú ¢
.œœ¢ £
DateTimeœœ£ ´
.œœ´ ¨
Nowœœ¨ Ø
,œœØ ∞
IsActiveœœ± π
=œœ∫ ª
trueœœº ¿
}œœ¡ ¬
,œœ¬ √
new
–– 
Language
–– #
{
––$ %

LanguageId
––& 0
=
––1 2
$num
––3 4
,
––4 5
LanguageName
––6 B
=
––C D
$str
––E N
,
––N O
Read
––P T
=
––U V
true
––W [
,
––[ \
Write
––] b
=
––c d
true
––e i
,
––i j
Speak
––k p
=
––q r
true
––s w
,
––w x 
PersonalDetailsId––y ä
=––ã å
$num––ç é
,––é è
	CreatedOn––ê ô
=––ö õ
System––ú ¢
.––¢ £
DateTime––£ ´
.––´ ¨
Now––¨ Ø
,––Ø ∞
IsActive––± π
=––∫ ª
true––º ¿
}––¡ ¬
,––¬ √
new
—— 
Language
—— #
{
——$ %

LanguageId
——& 0
=
——1 2
$num
——3 4
,
——4 5
LanguageName
——6 B
=
——C D
$str
——E N
,
——N O
Read
——P T
=
——U V
true
——W [
,
——[ \
Write
——] b
=
——c d
true
——e i
,
——i j
Speak
——k p
=
——q r
true
——s w
,
——w x 
PersonalDetailsId——y ä
=——ã å
$num——ç é
,——é è
	CreatedOn——ê ô
=——ö õ
System——ú ¢
.——¢ £
DateTime——£ ´
.——´ ¨
Now——¨ Ø
,——Ø ∞
IsActive——± π
=——∫ ª
true——º ¿
}——¡ ¬
,——¬ √
new
““ 
Language
““ #
{
““$ %

LanguageId
““& 0
=
““1 2
$num
““3 4
,
““4 5
LanguageName
““6 B
=
““C D
$str
““E K
,
““K L
Read
““M Q
=
““R S
true
““T X
,
““X Y
Write
““Z _
=
““` a
true
““b f
,
““f g
Speak
““h m
=
““n o
true
““p t
,
““t u 
PersonalDetailsId““v á
=““à â
$num““ä ã
,““ã å
	CreatedOn““ç ñ
=““ó ò
System““ô ü
.““ü †
DateTime““† ®
.““® ©
Now““© ¨
,““¨ ≠
IsActive““Æ ∂
=““∑ ∏
true““π Ω
}““æ ø
,““ø ¿
new
”” 
Language
”” #
{
””$ %

LanguageId
””& 0
=
””1 2
$num
””3 5
,
””5 6
LanguageName
””7 C
=
””D E
$str
””F N
,
””N O
Read
””P T
=
””U V
true
””W [
,
””[ \
Write
””] b
=
””c d
true
””e i
,
””i j
Speak
””k p
=
””q r
true
””s w
,
””w x 
PersonalDetailsId””y ä
=””ã å
$num””ç é
,””é è
	CreatedOn””ê ô
=””ö õ
System””ú ¢
.””¢ £
DateTime””£ ´
.””´ ¨
Now””¨ Ø
,””Ø ∞
IsActive””± π
=””∫ ª
true””º ¿
}””¡ ¬
)
‘‘ 
;
‘‘ 
modelBuilder
ÿÿ 
.
ÿÿ 
Entity
ÿÿ 
<
ÿÿ  
SocialMedia
ÿÿ  +
>
ÿÿ+ ,
(
ÿÿ, -
)
ÿÿ- .
.
ŸŸ 
HasData
ŸŸ 
(
ŸŸ 
new
⁄⁄ 
SocialMedia
⁄⁄ )
{
⁄⁄* +
SocialMedia_Id
⁄⁄, :
=
⁄⁄; <
$num
⁄⁄= >
,
⁄⁄> ?
SocialMedia_Name
⁄⁄@ P
=
⁄⁄Q R
$str
⁄⁄S ]
,
⁄⁄] ^
SocialMedia_Link
⁄⁄_ o
=
⁄⁄p q
$str⁄⁄r Ñ
,⁄⁄Ñ Ö!
PersonalDetailsId⁄⁄Ü ó
=⁄⁄ò ô
$num⁄⁄ö õ
,⁄⁄õ ú
IsActive⁄⁄ù •
=⁄⁄¶ ß
true⁄⁄® ¨
}⁄⁄≠ Æ
,⁄⁄Æ Ø
new
€€ 
SocialMedia
€€ )
{
€€* +
SocialMedia_Id
€€, :
=
€€; <
$num
€€= >
,
€€> ?
SocialMedia_Name
€€@ P
=
€€Q R
$str
€€S ]
,
€€] ^
SocialMedia_Link
€€_ o
=
€€p q
$str€€r Ñ
,€€Ñ Ö!
PersonalDetailsId€€Ü ó
=€€ò ô
$num€€ö õ
,€€õ ú
IsActive€€ù •
=€€¶ ß
true€€® ¨
}€€≠ Æ
,€€Æ Ø
new
‹‹ 
SocialMedia
‹‹ )
{
‹‹* +
SocialMedia_Id
‹‹, :
=
‹‹; <
$num
‹‹= >
,
‹‹> ?
SocialMedia_Name
‹‹@ P
=
‹‹Q R
$str
‹‹S ]
,
‹‹] ^
SocialMedia_Link
‹‹_ o
=
‹‹p q
$str‹‹r Ñ
,‹‹Ñ Ö!
PersonalDetailsId‹‹Ü ó
=‹‹ò ô
$num‹‹ö õ
,‹‹õ ú
IsActive‹‹ù •
=‹‹¶ ß
true‹‹® ¨
}‹‹≠ Æ
,‹‹Æ Ø
new
›› 
SocialMedia
›› )
{
››* +
SocialMedia_Id
››, :
=
››; <
$num
››= >
,
››> ?
SocialMedia_Name
››@ P
=
››Q R
$str
››S \
,
››\ ]
SocialMedia_Link
››^ n
=
››o p
$str››q Ç
,››Ç É!
PersonalDetailsId››Ñ ï
=››ñ ó
$num››ò ô
,››ô ö
IsActive››õ £
=››§ •
true››¶ ™
}››´ ¨
,››¨ ≠
new
ﬁﬁ 
SocialMedia
ﬁﬁ )
{
ﬁﬁ* +
SocialMedia_Id
ﬁﬁ, :
=
ﬁﬁ; <
$num
ﬁﬁ= >
,
ﬁﬁ> ?
SocialMedia_Name
ﬁﬁ@ P
=
ﬁﬁQ R
$str
ﬁﬁS ^
,
ﬁﬁ^ _
SocialMedia_Link
ﬁﬁ` p
=
ﬁﬁq r
$strﬁﬁs Ü
,ﬁﬁÜ á!
PersonalDetailsIdﬁﬁà ô
=ﬁﬁö õ
$numﬁﬁú ù
,ﬁﬁù û
IsActiveﬁﬁü ß
=ﬁﬁ® ©
trueﬁﬁ™ Æ
}ﬁﬁØ ∞
)
ﬂﬂ 
;
ﬂﬂ 
modelBuilder
‡‡ 
.
‡‡ 
Entity
‡‡ 
<
‡‡  
AchievementType
‡‡  /
>
‡‡/ 0
(
‡‡0 1
)
‡‡1 2
.
·· 
HasData
··  
(
··  !
new
‚‚ 
AchievementType
‚‚ ,
{
‚‚- .
AchievementTypeId
‚‚/ @
=
‚‚A B
$num
‚‚C D
,
‚‚D E!
AchievementTypeName
‚‚F Y
=
‚‚Z [
$str
‚‚\ d
,
‚‚d e
IsActive
‚‚f n
=
‚‚o p
true
‚‚q u
}
‚‚v w
,
‚‚w x
new
„„ 
AchievementType
„„ ,
{
„„- .
AchievementTypeId
„„/ @
=
„„A B
$num
„„C D
,
„„D E!
AchievementTypeName
„„F Y
=
„„Z [
$str
„„\ j
,
„„j k
IsActive
„„l t
=
„„u v
true
„„w {
}
„„| }
)
‰‰ 
;
‰‰ 
modelBuilder
ÂÂ 
.
ÂÂ 
Entity
ÂÂ 
<
ÂÂ  
Achievements
ÂÂ  ,
>
ÂÂ, -
(
ÂÂ- .
)
ÂÂ. /
.
ÊÊ 
HasData
ÊÊ  
(
ÊÊ  !
new
ÁÁ 
Achievements
ÁÁ )
{
ÁÁ* +
AchievementId
ÁÁ, 9
=
ÁÁ: ;
$num
ÁÁ< =
,
ÁÁ= >
	ProfileId
ÁÁ? H
=
ÁÁI J
$num
ÁÁK L
,
ÁÁL M
AchievementTypeId
ÁÁN _
=
ÁÁ` a
$num
ÁÁb c
,
ÁÁc d
base64header
ÁÁe q
=
ÁÁr s
$str
ÁÁt y
,
ÁÁy z
IsActiveÁÁ{ É
=ÁÁÑ Ö
trueÁÁÜ ä
}ÁÁã å
,ÁÁå ç
new
ËË 
Achievements
ËË )
{
ËË* +
AchievementId
ËË, 9
=
ËË: ;
$num
ËË< =
,
ËË= >
	ProfileId
ËË? H
=
ËËI J
$num
ËËK L
,
ËËL M
AchievementTypeId
ËËN _
=
ËË` a
$num
ËËb c
,
ËËc d
base64header
ËËe q
=
ËËr s
$str
ËËt y
,
ËËy z
IsActiveËË{ É
=ËËÑ Ö
trueËËÜ ä
}ËËã å
,ËËå ç
new
ÈÈ 
Achievements
ÈÈ )
{
ÈÈ* +
AchievementId
ÈÈ, 9
=
ÈÈ: ;
$num
ÈÈ< =
,
ÈÈ= >
	ProfileId
ÈÈ? H
=
ÈÈI J
$num
ÈÈK L
,
ÈÈL M
AchievementTypeId
ÈÈN _
=
ÈÈ` a
$num
ÈÈb c
,
ÈÈc d
base64header
ÈÈe q
=
ÈÈr s
$str
ÈÈt y
,
ÈÈy z
IsActiveÈÈ{ É
=ÈÈÑ Ö
trueÈÈÜ ä
}ÈÈã å
,ÈÈå ç
new
ÍÍ 
Achievements
ÍÍ )
{
ÍÍ* +
AchievementId
ÍÍ, 9
=
ÍÍ: ;
$num
ÍÍ< =
,
ÍÍ= >
	ProfileId
ÍÍ? H
=
ÍÍI J
$num
ÍÍK L
,
ÍÍL M
AchievementTypeId
ÍÍN _
=
ÍÍ` a
$num
ÍÍb c
,
ÍÍc d
base64header
ÍÍe q
=
ÍÍr s
$str
ÍÍt y
,
ÍÍy z
IsActiveÍÍ{ É
=ÍÍÑ Ö
trueÍÍÜ ä
}ÍÍã å
,ÍÍå ç
new
ÎÎ 
Achievements
ÎÎ )
{
ÎÎ* +
AchievementId
ÎÎ, 9
=
ÎÎ: ;
$num
ÎÎ< =
,
ÎÎ= >
	ProfileId
ÎÎ? H
=
ÎÎI J
$num
ÎÎK L
,
ÎÎL M
AchievementTypeId
ÎÎN _
=
ÎÎ` a
$num
ÎÎb c
,
ÎÎc d
base64header
ÎÎe q
=
ÎÎr s
$str
ÎÎt y
,
ÎÎy z
IsActiveÎÎ{ É
=ÎÎÑ Ö
trueÎÎÜ ä
}ÎÎã å
)
ÏÏ 
;
ÏÏ 
}
 	
}
ÚÚ 
}ÛÛ Ö
fC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\DesignationDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

class &
DesignationDataAccessLayer +
:+ ,'
IDesignationDataAccessLayer, G
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private		 
readonly		 
ILogger		 
<		  &
DesignationDataAccessLayer		  :
>		: ;
_logger		< C
=		D E
default		F M
!		M N
;		N O
public	 
List 
< 
Designation  
>  !
GetDesignations" 1
(1 2
)2 3
{ 	
try 
{ 
return 
_db 
. 
Designations '
!' (
.( )
Include) 0
(0 1
d1 2
=>2 4
d4 5
.5 6
users6 ;
); <
.< =
ToList= C
(C D
)D E
;E F
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw   
;   
}!! 
}"" 	
}&& 
}'' ¸
aC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\DomainDataAccessLayer.cs
	namespace 	
PMS_API
 
. 
DataAccessLayer !
{ 
public 

class !
DomainDataAccessLayer &
:& '"
IDomainDataAccessLayer' =
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory% 9
.9 :
GetDbContextObject: L
(L M
)M N
;N O
private 
readonly 
ILogger 
<  !
DomainDataAccessLayer  5
>5 6
_logger7 >
=? @
defaultA H
!H I
;I J
public			 
List		 
<		 
Domain		 
>		 

GetDomains		 '
(		' (
)		( )
{

 	
try 
{ 
return 
_db 
. 
Domains "
!" #
.# $
ToList$ *
(* +
)+ ,
;, -
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
}   
}!! 	
}%% 
}&& ‚
cC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\ICollegeDataAccessLayer.cs
	namespace 	
PMS_API
 
. 
DataAccessLayer !
{ 
public 

	interface #
ICollegeDataAccessLayer ,
{ 
public 
List 
< 
College 
> 
GetColleges (
(( )
)) *
;* +
} 
} Ú
gC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\IDesignationDataAccessLayer.cs
	namespace 	
PMS_API
 
. 
DataAccessLayer !
{ 
public 

	interface '
IDesignationDataAccessLayer 0
{ 
public 
List 
< 
Designation 
>  
GetDesignations! 0
(0 1
)1 2
;2 3
} 
} ≤
bC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\IDomainDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface "
IDomainDataAccessLayer +
{ 
public 
List 
< 
Domain 
> 

GetDomains &
(& '
)' (
;( )
} 
}  
hC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\IOrganisationDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface (
IOrganisationDataAccessLayer 1
{ 
public 
List 
< 
Organisation  
>  !
GetOrganisations" 2
(2 3
)3 4
;4 5
} 
} Œ
iC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\IProfileStatusDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface )
IProfileStatusDataAccessLayer 2
{ 
public 
List 
< 
ProfileStatus !
>! "
GetProfileStatuss# 4
(4 5
)5 6
;6 7
} 
} √
fC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\ITechnologyDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface &
ITechnologyDataAccessLayer /
{ 
public 
List 
< 

Technology 
> 
GetTechnologies  /
(/ 0
)0 1
;1 2
} 
} ä(
_C:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\MailDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

	interface  
IMailDataAccessLayer )
{ 
public		 
string		 
GetUserEmail		 "
(		" #
int		# &
Userid		' -
)		- .
;		. /
public

 
string

 
GetUserName

 !
(

! "
int

" %
Userid

& ,
)

, -
;

- .
public 
string $
GetUserNameWithProfileId .
(. /
int/ 2
	profileId3 <
)< =
;= >
} 
public 

class 
MailDataAccessLayer $
:$ % 
IMailDataAccessLayer% 9
{ 
private 
readonly 
Context  
_context! )
;) *
private 
readonly 
ILogger  
<  !
ProfileService! /
>/ 0
_logger1 8
;8 9
public 
MailDataAccessLayer #
(# $
Context$ +
context, 3
,3 4
ILogger5 <
<< =
ProfileService= K
>K L
loggerM S
)S T
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
} 	
public 
string 
GetUserEmail "
(" #
int# &
Userid' -
)- .
{ 	
try 
{ 
return 
_context 
.  
users  %
!% &
.& '
Find' +
(+ ,
Userid, 2
)2 3
!3 4
.4 5
Email5 :
!: ;
;; <
} 
catch 
( 
	Exception !
getUserEmailException 2
)2 3
{ 
_logger 
. 
LogInformation &
(& '
$"' )
$str) \
{\ ]!
getUserEmailException] r
.r s
Messages z
}z {
$str{ ~
{~ "
getUserEmailException	 î
.
î ï

StackTrace
ï ü
}
ü †
"
† °
)
° ¢
;
¢ £
throw   
;   
}!! 
}"" 	
public## 
string## 
GetUserName## !
(##! "
int##" %
Userid##& ,
)##, -
{$$ 	
try%% 
{&& 
return'' 
_context'' 
.''  
users''  %
!''% &
.''& '
Find''' +
(''+ ,
Userid'', 2
)''2 3
!''3 4
.''4 5
UserName''5 =
!''= >
;''> ?
}(( 
catch)) 
()) 
	Exception))  
getUserNameException)) 1
)))1 2
{** 
_logger++ 
.++ 
LogInformation++ &
(++& '
$"++' )
$str++) Z
{++Z [ 
getUserNameException++[ o
.++o p
Message++p w
}++w x
$str++x {
{++{ |!
getUserNameException	++| ê
.
++ê ë

StackTrace
++ë õ
}
++õ ú
"
++ú ù
)
++ù û
;
++û ü
throw,, 
;,, 
}-- 
}.. 	
public00 
string00 $
GetUserNameWithProfileId00 .
(00. /
int00/ 2
	profileId003 <
)00< =
{11 	
try22 
{33 
int44 
userId44 
=44 
(44 
from44 !
profile44" )
in44* ,
_context44- 5
.445 6
profile446 =
where44> C
profile44D K
.44K L
	ProfileId44L U
==44U W
	profileId44W `
select44a g
profile44h o
.44o p
	ProfileId44p y
)44y z
.44z {
First	44{ Ä
(
44Ä Å
)
44Å Ç
;
44Ç É
return55 
_context55 
.55  
users55  %
!55% &
.55& '
Find55' +
(55+ ,
userId55, 2
)552 3
!553 4
.554 5
UserName555 =
!55= >
;55> ?
}66 
catch77 
(77 
	Exception77  
getUserNameException77 1
)771 2
{88 
_logger99 
.99 
LogInformation99 &
(99& '
$"99' )
$str99) Z
{99Z [ 
getUserNameException99[ o
.99o p
Message99p w
}99w x
$str99x {
{99{ |!
getUserNameException	99| ê
.
99ê ë

StackTrace
99ë õ
}
99õ ú
"
99ú ù
)
99ù û
;
99û ü
throw:: 
;:: 
};; 
}<< 	
}== 
}?? ˙
gC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\OrganisationDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

class '
OrganisationDataAccessLayer ,
:, -(
IOrganisationDataAccessLayer- I
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private 
readonly 
ILogger 
<  '
OrganisationDataAccessLayer  ;
>; <
_logger= D
=E F
defaultG N
!N O
;O P
public			 
List		 
<		 
Organisation		 !
>		! "
GetOrganisations		# 3
(		3 4
)		4 5
{

 	
try 
{ 
return 
_db 
. 
Organisations (
!( )
.) *
ToList* 0
(0 1
)1 2
;2 3
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
}   
}!! 	
}%% 
}&& ù
WC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\ProfileData.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IProfileData !
{		 
bool

 

AddProfile

 
(

 
Profile

 
profile

  '
)

' (
;

( )
bool 
AddPersonalDetail 
( 
PersonalDetails .
personalDetails/ >
)> ?
;? @
List 
< 
PersonalDetails 
> !
GetAllPersonalDetails 3
(3 4
)4 5
;5 6
PersonalDetails "
GetPersonalDetailsById .
(. /
int/ 2

Personalid3 =
)= >
;> ?
bool  
UpdatePersonalDetail !
(! "
PersonalDetails" 1
personalDetails2 A
)A B
;B C
bool "
DisablePersonalDetails #
(# $
int$ '
PersonalDetailsid( 9
)9 :
;: ;
bool 
AddEducation 
( 
	Education #
	education$ -
)- .
;. /
List 
< 
	Education 
> "
GetallEducationDetails .
(. /
)/ 0
;0 1
	Education #
GetEducationDetailsById )
() *
int* -
Educationid. 9
)9 :
;: ;
bool 
UpdateEducation 
( 
	Education &
	education' 0
)0 1
;1 2
bool %
DisableEducationalDetails &
(& '
int' *
Educationid+ 6
)6 7
;7 8
bool 
AddProjects 
( 
Projects !
project" )
)) *
;* +
List 
< 
Projects 
>  
GetallProjectDetails +
(+ ,
), -
;- .
Projects !
GetProjectDetailsById &
(& '
int' *
	Projectid+ 4
)4 5
;5 6
bool 
UpdateProjects 
( 
Projects $
projects% -
)- .
;. /
bool !
DisableProjectDetails "
(" #
int# &
	Projectid' 0
)0 1
;1 2
bool 
	AddSkills 
( 
Skills 
skill #
)# $
;$ %
List 
< 
Skills 
> 
GetallSkillDetails '
(' (
)( )
;) *
Skills   
GetSkillDetailsById   "
(  " #
int  # &
Skillid  ' .
)  . /
;  / 0
bool!! 
UpdateSkills!! 
(!! 
Skills!!  
skill!!! &
)!!& '
;!!' (
bool"" 
DisableSkillDetails""  
(""  !
int""! $
Skillid""% ,
)"", -
;""- .
bool$$ 
AddAchievements$$ 
($$ 
Achievements$$ )
achievements$$* 6
)$$6 7
;$$7 8
List%% 
<%% 
Achievements%% 
>%% 
GetallAchievements%% -
(%%- .
)%%. /
;%%/ 0
bool'' 
DisableAchievement'' 
(''  
int''  #
AchievementId''$ 1
)''1 2
;''2 3
bool)) 
AddLanguage)) 
()) 
Language)) !
language))" *
)))* +
;))+ ,
bool** 
DisableLanguage** 
(** 
int**  

Languageid**! +
)**+ ,
;**, -
bool,, 
AddSocialMedia,, 
(,, 
SocialMedia,, '
media,,( -
),,- .
;,,. /
bool-- 
DisableSocialMedia-- 
(--  
int--  #
SocialMediaid--$ 1
)--1 2
;--2 3

Technology00 
GetTechnologyById00 $
(00$ %
int00% (
Technologyid00) 5
)005 6
;006 7
List11 
<11 

Technology11 
>11 
GetallTechnologies11 +
(11+ ,
)11, -
;11- .
public44 
List44 
<44 
Profile44 
>44 
GetallProfiles44 +
(44+ ,
)44, -
;44- .
Profile55 
GetProfileById55 
(55 
int55 "
	ProfileId55# ,
)55, -
;55- .
public66 
ProfileStatus66 '
GetProfileStatusByProfileId66 8
(668 9
int669 <
	Profileid66= F
)66F G
;66G H
public77 
List77 
<77 
User77 
>77 
GetFilteredProfile77 ,
(77, -
string77- 3
userName774 <
,77< =
int77> A
designationId77B O
,77O P
int77Q T
domainID77U ]
,77] ^
int77_ b
technologyId77c o
,77o p
int77q t
	collegeId77u ~
,77~ 
int
77Ä É
profileStatusId
77Ñ ì
,
77ì î
int
77ï ò 
currentdesignation
77ô ´
)
77´ ¨
;
77¨ ≠
}:: 
public<< 

class<< 
ProfileData<< 
:<< 
IProfileData<< +
{== 
private>> 
readonly>> 
Context>>  
_context>>! )
;>>) *
private?? 
readonly?? 
ILogger??  
<??  !
ProfileService??! /
>??/ 0
_logger??1 8
;??8 9
publicAA 
ProfileDataAA 
(AA 
ContextAA "
contextAA# *
,AA* +
ILoggerAA, 3
<AA3 4
ProfileServiceAA4 B
>AAB C
loggerAAD J
)AAJ K
{BB 	
_contextCC 
=CC 
contextCC 
;CC 
_loggerDD 
=DD 
loggerDD 
;DD 
}EE 	
publicFF 
boolFF 

AddProfileFF 
(FF 
ProfileFF &
profileFF' .
)FF. /
{GG 	
profileHH 
.HH 
IsActiveHH 
=HH 
trueHH #
;HH# $
ifKK 
(KK 
profileKK 
==KK 
nullKK 
)KK  
throwLL 
newLL 
ArgumentExceptionLL +
(LL+ ,
$strLL, [
)LL[ \
;LL\ ]
tryNN 
{OO 
profilePP 
.PP 
IsActivePP  
=PP! "
truePP# '
;PP' (
_contextQQ 
.QQ 
profileQQ  
!QQ  !
.QQ! "
AddQQ" %
(QQ% &
profileQQ& -
)QQ- .
;QQ. /
_contextRR 
.RR 
SaveChangesRR $
(RR$ %
)RR% &
;RR& '
returnSS 
trueSS 
;SS 
}TT 
catchVV 
(VV 
	ExceptionVV 
	exceptionVV &
)VV& '
{WW 
_loggerYY 
.YY 
LogErrorYY  
(YY  !
$"YY! #
$strYY# <
{YY< =
	exceptionYY= F
.YYF G
MessageYYG N
}YYN O
"YYO P
)YYP Q
;YYQ R
_loggerZZ 
.ZZ 
LogInformationZZ &
(ZZ& '
$"ZZ' )
$strZZ) B
{ZZB C
	exceptionZZC L
.ZZL M

StackTraceZZM W
}ZZW X
"ZZX Y
)ZZY Z
;ZZZ [
return\\ 
false\\ 
;\\ 
}]] 
}`` 	
publicaa 
Listaa 
<aa 
PersonalDetailsaa #
>aa# $!
GetAllPersonalDetailsaa% :
(aa: ;
)aa; <
{bb 	
trydd 
{ee 
returnff 
_contextff 
.ff  
personalDetailsff  /
!ff/ 0
.ff0 1
Includeff1 8
(ff8 9
sff9 :
=>ff; =
sff> ?
.ff? @
languageff@ H
)ffH I
.ffI J
IncludeffJ Q
(ffQ R
sffR S
=>ffT V
sffW X
.ffX Y
breakDurationffY f
)fff g
.ffg h
Includeffh o
(ffo p
sffp q
=>ffr t
sffu v
.ffv w
socialmedia	ffw Ç
)
ffÇ É
.
ffÉ Ñ
ToList
ffÑ ä
(
ffä ã
)
ffã å
;
ffå ç
}ii 
catchkk 
(kk 
	Exceptionkk 
	exceptionkk &
)kk& '
{ll 
_loggermm 
.mm 
LogErrormm  
(mm  !
$"mm! #
$strmm# G
{mmG H
	exceptionmmH Q
.mmQ R
MessagemmR Y
}mmY Z
"mmZ [
)mm[ \
;mm\ ]
_loggernn 
.nn 
LogInformationnn &
(nn& '
$"nn' )
$strnn) M
{nnM N
	exceptionnnN W
.nnW X

StackTracennX b
}nnb c
"nnc d
)nnd e
;nne f
throwoo 
;oo 
}pp 
}qq 	
publicrr 
PersonalDetailsrr "
GetPersonalDetailsByIdrr 5
(rr5 6
intrr6 9

Personalidrr: D
)rrD E
{ss 	
ifuu 
(uu 

Personaliduu 
<=uu 
$numuu 
)uu  
throwww 
newww 
ValidationExceptionww -
(ww- .
$strww. Q
)wwQ R
;wwR S
tryyy 
{zz 
var{{ 
personalDetails{{ #
={{$ %!
GetAllPersonalDetails{{& ;
({{; <
){{< =
.{{= >
FirstOrDefault{{> L
({{L M
x{{M N
=>{{O Q
x{{R S
.{{S T
PersonalDetailsId{{T e
=={{f h

Personalid{{i s
){{s t
;{{t u
if|| 
(|| 
personalDetails|| #
==||$ &
null||' +
)||+ ,
throw||- 2
new||3 6!
ArgumentNullException||7 L
(||L M
$"||M O
$str||O \
{||\ ]

Personalid||] g
}||g h
"||h i
)||i j
;||j k
return}} 
personalDetails}} &
;}}& '
}~~ 
catch 
( 
	Exception 
	exception &
)& '
{
ÄÄ 
_logger
ÅÅ 
.
ÅÅ 
LogError
ÅÅ  
(
ÅÅ  !
$"
ÅÅ! #
$str
ÅÅ# H
{
ÅÅH I
	exception
ÅÅI R
.
ÅÅR S
Message
ÅÅS Z
}
ÅÅZ [
"
ÅÅ[ \
)
ÅÅ\ ]
;
ÅÅ] ^
_logger
ÇÇ 
.
ÇÇ 
LogInformation
ÇÇ &
(
ÇÇ& '
$"
ÇÇ' )
$str
ÇÇ) N
{
ÇÇN O
	exception
ÇÇO X
.
ÇÇX Y

StackTrace
ÇÇY c
}
ÇÇc d
"
ÇÇd e
)
ÇÇe f
;
ÇÇf g
throw
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÖÖ 	
public
áá 
bool
áá 
AddPersonalDetail
áá %
(
áá% &
PersonalDetails
áá& 5
personalDetails
áá6 E
)
ááE F
{
àà 	
if
ãã 
(
ãã 
personalDetails
ãã 
==
ãã  "
null
ãã# '
)
ãã' (
throw
åå 
new
åå 
ArgumentException
åå +
(
åå+ ,
$str
åå, [
)
åå[ \
;
åå\ ]
try
éé 
{
èè 
personalDetails
êê 
.
êê  
IsActive
êê  (
=
êê) *
true
êê+ /
;
êê/ 0
_context
ëë 
.
ëë 
personalDetails
ëë (
!
ëë( )
.
ëë) *
Add
ëë* -
(
ëë- .
personalDetails
ëë. =
)
ëë= >
;
ëë> ?
_context
íí 
.
íí 
SaveChanges
íí $
(
íí$ %
)
íí% &
;
íí& '
return
ìì 
true
ìì 
;
ìì 
}
îî 
catch
ññ 
(
ññ 
	Exception
ññ 
	exception
ññ &
)
ññ& '
{
óó 
_logger
ôô 
.
ôô 
LogError
ôô  
(
ôô  !
$"
ôô! #
$str
ôô# D
{
ôôD E
	exception
ôôE N
.
ôôN O
Message
ôôO V
}
ôôV W
"
ôôW X
)
ôôX Y
;
ôôY Z
_logger
öö 
.
öö 
LogInformation
öö &
(
öö& '
$"
öö' )
$str
öö) J
{
ööJ K
	exception
ööK T
.
ööT U

StackTrace
ööU _
}
öö_ `
"
öö` a
)
ööa b
;
ööb c
return
úú 
false
úú 
;
úú 
}
ùù 
}
†† 	
public
°° 
bool
°° "
UpdatePersonalDetail
°° (
(
°°( )
PersonalDetails
°°) 8
personalDetails
°°9 H
)
°°H I
{
¢¢ 	
if
££ 
(
££ 
personalDetails
££ 
==
££  "
null
££# '
)
££' (
throw
§§ 
new
§§ !
ValidationException
§§ -
(
§§- .
$str
§§. `
)
§§` a
;
§§a b
try
¶¶ 
{
ßß 
_context
®® 
.
®® 
personalDetails
®® (
!
®®( )
.
®®) *
Update
®®* 0
(
®®0 1
personalDetails
®®1 @
)
®®@ A
;
®®A B
_context
©© 
.
©© 
SaveChanges
©© $
(
©©$ %
)
©©% &
;
©©& '
return
™™ 
true
™™ 
;
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
	exception
¨¨ &
)
¨¨& '
{
≠≠ 
_logger
ÆÆ 
.
ÆÆ 
LogError
ÆÆ  
(
ÆÆ  !
$"
ÆÆ! #
$str
ÆÆ# F
{
ÆÆF G
	exception
ÆÆG P
.
ÆÆP Q
Message
ÆÆQ X
}
ÆÆX Y
"
ÆÆY Z
)
ÆÆZ [
;
ÆÆ[ \
_logger
ØØ 
.
ØØ 
LogInformation
ØØ &
(
ØØ& '
$"
ØØ' )
$str
ØØ) L
{
ØØL M
	exception
ØØM V
.
ØØV W

StackTrace
ØØW a
}
ØØa b
"
ØØb c
)
ØØc d
;
ØØd e
return
∞∞ 
false
∞∞ 
;
∞∞ 
}
±± 
}
≥≥ 	
public
µµ 
bool
µµ $
DisablePersonalDetails
µµ *
(
µµ* +
int
µµ+ .
PersonalDetailsid
µµ/ @
)
µµ@ A
{
∂∂ 	
if
∑∑ 
(
∑∑ 
PersonalDetailsid
∑∑ !
<=
∑∑" $
$num
∑∑% &
)
∑∑& '
throw
∏∏ 
new
∏∏ !
ValidationException
∏∏ -
(
∏∏- .
$str
∏∏. Y
)
∏∏Y Z
;
∏∏Z [
try
∫∫ 
{
ªª 
var
ºº 
personalDetails
ºº #
=
ºº$ %
_context
ºº& .
.
ºº. /
personalDetails
ºº/ >
!
ºº> ?
.
ºº? @
Find
ºº@ D
(
ººD E
PersonalDetailsid
ººE V
)
ººV W
;
ººW X
if
ΩΩ 
(
ΩΩ 
personalDetails
ΩΩ #
==
ΩΩ$ &
null
ΩΩ' +
)
ΩΩ+ ,
throw
ΩΩ- 2
new
ΩΩ3 6#
ArgumentNullException
ΩΩ7 L
(
ΩΩL M
$"
ΩΩM O
$str
ΩΩO k
{
ΩΩk l
PersonalDetailsid
ΩΩl }
}
ΩΩ} ~
"
ΩΩ~ 
)ΩΩ Ä
;ΩΩÄ Å
personalDetails
ææ 
.
ææ  
IsActive
ææ  (
=
ææ) *
false
ææ+ 0
;
ææ0 1
_context
øø 
.
øø 
personalDetails
øø (
.
øø( )
Update
øø) /
(
øø/ 0
personalDetails
øø0 ?
)
øø? @
;
øø@ A
_context
¿¿ 
.
¿¿ 
SaveChanges
¿¿ $
(
¿¿$ %
)
¿¿% &
;
¿¿& '
return
¡¡ 
true
¡¡ 
;
¡¡ 
}
√√ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
	exception
∆∆ &
)
∆∆& '
{
«« 
_logger
…… 
.
…… 
LogError
……  
(
……  !
$"
……! #
$str
……# H
{
……H I
	exception
……I R
.
……R S
Message
……S Z
}
……Z [
"
……[ \
)
……\ ]
;
……] ^
_logger
   
.
   
LogInformation
   &
(
  & '
$"
  ' )
$str
  ) N
{
  N O
	exception
  O X
.
  X Y

StackTrace
  Y c
}
  c d
"
  d e
)
  e f
;
  f g
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
}
ÃÃ 
}
ŒŒ 	
public
œœ 
List
œœ 
<
œœ 
	Education
œœ 
>
œœ $
GetallEducationDetails
œœ 5
(
œœ5 6
)
œœ6 7
{
–– 	
try
““ 
{
”” 
return
’’ 
_context
’’ 
.
’’  

educations
’’  *
!
’’* +
.
’’+ ,
Include
’’, 3
(
’’3 4
$str
’’4 =
)
’’= >
.
’’> ?
ToList
’’? E
(
’’E F
)
’’F G
;
’’G H
}
◊◊ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
	exception
ŸŸ &
)
ŸŸ& '
{
⁄⁄ 
_logger
‹‹ 
.
‹‹ 
LogError
‹‹  
(
‹‹  !
$"
‹‹! #
$str
‹‹# H
{
‹‹H I
	exception
‹‹I R
.
‹‹R S
Message
‹‹S Z
}
‹‹Z [
"
‹‹[ \
)
‹‹\ ]
;
‹‹] ^
_logger
›› 
.
›› 
LogInformation
›› &
(
››& '
$"
››' )
$str
››) N
{
››N O
	exception
››O X
.
››X Y

StackTrace
››Y c
}
››c d
"
››d e
)
››e f
;
››f g
throw
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 	
public
·· 
	Education
·· %
GetEducationDetailsById
·· 0
(
··0 1
int
··1 4
Educationid
··5 @
)
··@ A
{
‚‚ 	
if
„„ 
(
„„ 
Educationid
„„ 
<=
„„ 
$num
„„  
)
„„  !
throw
ÂÂ 
new
ÂÂ !
ValidationException
ÂÂ -
(
ÂÂ- .
$str
ÂÂ. S
)
ÂÂS T
;
ÂÂT U
try
ÁÁ 
{
ËË 
var
ÈÈ 
	education
ÈÈ 
=
ÈÈ $
GetallEducationDetails
ÈÈ  6
(
ÈÈ6 7
)
ÈÈ7 8
.
ÈÈ8 9
First
ÈÈ9 >
(
ÈÈ> ?
x
ÈÈ? @
=>
ÈÈA C
x
ÈÈD E
.
ÈÈE F
EducationId
ÈÈF Q
==
ÈÈR T
Educationid
ÈÈU `
&&
ÈÈa c
x
ÈÈd e
.
ÈÈe f
IsActive
ÈÈf n
)
ÈÈn o
;
ÈÈo p
if
ÍÍ 
(
ÍÍ 
	education
ÍÍ 
==
ÍÍ  
null
ÍÍ! %
)
ÍÍ% &
throw
ÍÍ' ,
new
ÍÍ- 0#
ArgumentNullException
ÍÍ1 F
(
ÍÍF G
$"
ÍÍG I
$str
ÍÍI V
{
ÍÍV W
Educationid
ÍÍW b
}
ÍÍb c
"
ÍÍc d
)
ÍÍd e
;
ÍÍe f
return
ÎÎ 
	education
ÎÎ  
;
ÎÎ  !
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ 
	Exception
ÌÌ 
	exception
ÌÌ &
)
ÌÌ& '
{
ÓÓ 
_logger
ÔÔ 
.
ÔÔ 
LogError
ÔÔ  
(
ÔÔ  !
$"
ÔÔ! #
$str
ÔÔ# I
{
ÔÔI J
	exception
ÔÔJ S
.
ÔÔS T
Message
ÔÔT [
}
ÔÔ[ \
"
ÔÔ\ ]
)
ÔÔ] ^
;
ÔÔ^ _
_logger
 
.
 
LogInformation
 &
(
& '
$"
' )
$str
) O
{
O P
	exception
P Y
.
Y Z

StackTrace
Z d
}
d e
"
e f
)
f g
;
g h
throw
ÒÒ 
;
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
public
ıı 
bool
ıı 
AddEducation
ıı  
(
ıı  !
	Education
ıı! *
	education
ıı+ 4
)
ıı4 5
{
ˆˆ 	
if
˘˘ 
(
˘˘ 
	education
˘˘ 
==
˘˘ 
null
˘˘ !
)
˘˘! "
throw
˙˙ 
new
˙˙ 
ArgumentException
˙˙ +
(
˙˙+ ,
$str
˙˙, \
)
˙˙\ ]
;
˙˙] ^
try
˝˝ 
{
˛˛ 
	education
ˇˇ 
.
ˇˇ 
IsActive
ˇˇ "
=
ˇˇ# $
true
ˇˇ% )
;
ˇˇ) *
_context
ÄÄ 
.
ÄÄ 

educations
ÄÄ #
!
ÄÄ# $
.
ÄÄ$ %
Add
ÄÄ% (
(
ÄÄ( )
	education
ÄÄ) 2
)
ÄÄ2 3
;
ÄÄ3 4
_context
ÅÅ 
.
ÅÅ 
SaveChanges
ÅÅ $
(
ÅÅ$ %
)
ÅÅ% &
;
ÅÅ& '
return
ÇÇ 
true
ÇÇ 
;
ÇÇ 
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
	exception
ÑÑ &
)
ÑÑ& '
{
ÖÖ 
_logger
áá 
.
áá 
LogError
áá  
(
áá  !
$"
áá! #
$str
áá# >
{
áá> ?
	exception
áá? H
.
ááH I
Message
ááI P
}
ááP Q
"
ááQ R
)
ááR S
;
ááS T
_logger
àà 
.
àà 
LogInformation
àà &
(
àà& '
$"
àà' )
$str
àà) D
{
ààD E
	exception
ààE N
.
ààN O

StackTrace
ààO Y
}
ààY Z
"
ààZ [
)
àà[ \
;
àà\ ]
throw
ââ 
;
ââ 
}
ää 
}
çç 	
public
éé 
bool
éé 
UpdateEducation
éé #
(
éé# $
	Education
éé$ -
	education
éé. 7
)
éé7 8
{
èè 	
if
êê 
(
êê 
	education
êê 
==
êê 
null
êê !
)
êê! "
throw
ëë 
new
ëë !
ValidationException
ëë -
(
ëë- .
$str
ëë. c
)
ëëc d
;
ëëd e
try
íí 
{
ìì 
_context
îî 
.
îî 

educations
îî #
!
îî# $
.
îî$ %
Update
îî% +
(
îî+ ,
	education
îî, 5
)
îî5 6
;
îî6 7
_context
ïï 
.
ïï 
SaveChanges
ïï $
(
ïï$ %
)
ïï% &
;
ïï& '
return
ññ 
true
ññ 
;
ññ 
}
óó 
catch
òò 
(
òò 
	Exception
òò 
	exception
òò &
)
òò& '
{
ôô 
_logger
õõ 
.
õõ 
LogError
õõ  
(
õõ  !
$"
õõ! #
$str
õõ# A
{
õõA B
	exception
õõB K
.
õõK L
Message
õõL S
}
õõS T
"
õõT U
)
õõU V
;
õõV W
_logger
úú 
.
úú 
LogInformation
úú &
(
úú& '
$"
úú' )
$str
úú) F
{
úúF G
	exception
úúG P
.
úúP Q

StackTrace
úúQ [
}
úú[ \
"
úú\ ]
)
úú] ^
;
úú^ _
return
ùù 
false
ùù 
;
ùù 
}
ûû 
}
†† 	
public
££ 
bool
££ '
DisableEducationalDetails
££ -
(
££- .
int
££. 1
Educationid
££2 =
)
££= >
{
§§ 	
if
•• 
(
•• 
Educationid
•• 
<=
•• 
$num
••  
)
••  !
throw
ßß 
new
ßß !
ValidationException
ßß -
(
ßß- .
$str
ßß. S
)
ßßS T
;
ßßT U
try
©© 
{
™™ 
var
´´ 
	education
´´ 
=
´´ 
_context
´´  (
.
´´( )

educations
´´) 3
!
´´3 4
.
´´4 5
Find
´´5 9
(
´´9 :
Educationid
´´: E
)
´´E F
;
´´F G
if
¨¨ 
(
¨¨ 
	education
¨¨ 
==
¨¨  
null
¨¨! %
)
¨¨% &
throw
¨¨' ,
new
¨¨- 0#
ArgumentNullException
¨¨1 F
(
¨¨F G
$"
¨¨G I
$str
¨¨I _
{
¨¨_ `
Educationid
¨¨` k
}
¨¨k l
"
¨¨l m
)
¨¨m n
;
¨¨n o
	education
≠≠ 
.
≠≠ 
IsActive
≠≠ "
=
≠≠# $
false
≠≠% *
;
≠≠* +
_context
ÆÆ 
.
ÆÆ 

educations
ÆÆ #
.
ÆÆ# $
Update
ÆÆ$ *
(
ÆÆ* +
	education
ÆÆ+ 4
)
ÆÆ4 5
;
ÆÆ5 6
_context
ØØ 
.
ØØ 
SaveChanges
ØØ $
(
ØØ$ %
)
ØØ% &
;
ØØ& '
return
∞∞ 
true
∞∞ 
;
∞∞ 
}
≤≤ 
catch
µµ 
(
µµ 
	Exception
µµ 
	exception
µµ &
)
µµ& '
{
∂∂ 
_logger
∑∑ 
.
∑∑ 
LogError
∑∑  
(
∑∑  !
$"
∑∑! #
$str
∑∑# I
{
∑∑I J
	exception
∑∑J S
.
∑∑S T
Message
∑∑T [
}
∑∑[ \
"
∑∑\ ]
)
∑∑] ^
;
∑∑^ _
_logger
∏∏ 
.
∏∏ 
LogInformation
∏∏ &
(
∏∏& '
$"
∏∏' )
$str
∏∏) R
{
∏∏R S
	exception
∏∏S \
.
∏∏\ ]

StackTrace
∏∏] g
}
∏∏g h
"
∏∏h i
)
∏∏i j
;
∏∏j k
return
ππ 
false
ππ 
;
ππ 
}
∫∫ 
}
ºº 	
public
ΩΩ 
bool
ΩΩ 
AddProjects
ΩΩ 
(
ΩΩ  
Projects
ΩΩ  (
project
ΩΩ) 0
)
ΩΩ0 1
{
ææ 	
if
¡¡ 
(
¡¡ 
project
¡¡ 
==
¡¡ 
null
¡¡ 
)
¡¡  
throw
¬¬ 
new
¬¬ 
ArgumentException
¬¬ +
(
¬¬+ ,
$str
¬¬, Z
)
¬¬Z [
;
¬¬[ \
try
ƒƒ 
{
≈≈ 
project
∆∆ 
.
∆∆ 
IsActive
∆∆  
=
∆∆! "
true
∆∆# '
;
∆∆' (
_context
«« 
.
«« 
projects
«« !
!
««! "
.
««" #
Add
««# &
(
««& '
project
««' .
)
««. /
;
««/ 0
_context
»» 
.
»» 
SaveChanges
»» $
(
»»$ %
)
»»% &
;
»»& '
return
…… 
true
…… 
;
…… 
}
   
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
	exception
ÃÃ &
)
ÃÃ& '
{
ÕÕ 
_logger
ŒŒ 
.
ŒŒ 
LogError
ŒŒ  
(
ŒŒ  !
$"
ŒŒ! #
$str
ŒŒ# =
{
ŒŒ= >
	exception
ŒŒ> G
.
ŒŒG H
Message
ŒŒH O
}
ŒŒO P
"
ŒŒP Q
)
ŒŒQ R
;
ŒŒR S
_logger
œœ 
.
œœ 
LogInformation
œœ &
(
œœ& '
$"
œœ' )
$str
œœ) C
{
œœC D
	exception
œœD M
.
œœM N

StackTrace
œœN X
}
œœX Y
"
œœY Z
)
œœZ [
;
œœ[ \
return
—— 
false
—— 
;
—— 
}
““ 
}
’’ 	
public
÷÷ 
List
÷÷ 
<
÷÷ 
Projects
÷÷ 
>
÷÷ "
GetallProjectDetails
÷÷ 2
(
÷÷2 3
)
÷÷3 4
{
◊◊ 	
try
ŸŸ 
{
⁄⁄ 
return
‹‹ 
_context
‹‹ 
.
‹‹  
projects
‹‹  (
!
‹‹( )
.
‹‹) *
ToList
‹‹* 0
(
‹‹0 1
)
‹‹1 2
;
‹‹2 3
}
ﬁﬁ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
	exception
‡‡ &
)
‡‡& '
{
·· 
_logger
‚‚ 
.
‚‚ 
LogError
‚‚  
(
‚‚  !
$"
‚‚! #
$str
‚‚# F
{
‚‚F G
	exception
‚‚G P
.
‚‚P Q
Message
‚‚Q X
}
‚‚X Y
"
‚‚Y Z
)
‚‚Z [
;
‚‚[ \
_logger
„„ 
.
„„ 
LogInformation
„„ &
(
„„& '
$"
„„' )
$str
„„) L
{
„„L M
	exception
„„M V
.
„„V W

StackTrace
„„W a
}
„„a b
"
„„b c
)
„„c d
;
„„d e
throw
‰‰ 
;
‰‰ 
}
ÂÂ 
}
ÊÊ 	
public
ÁÁ 
Projects
ÁÁ #
GetProjectDetailsById
ÁÁ -
(
ÁÁ- .
int
ÁÁ. 1
	Projectid
ÁÁ2 ;
)
ÁÁ; <
{
ËË 	
if
ÈÈ 
(
ÈÈ 
	Projectid
ÈÈ 
<=
ÈÈ 
$num
ÈÈ 
)
ÈÈ 
throw
ÎÎ 
new
ÎÎ !
ValidationException
ÎÎ -
(
ÎÎ- .
$str
ÎÎ. Q
)
ÎÎQ R
;
ÎÎR S
try
ÌÌ 
{
ÓÓ 
var
ÔÔ 
project
ÔÔ 
=
ÔÔ "
GetallProjectDetails
ÔÔ 2
(
ÔÔ2 3
)
ÔÔ3 4
.
ÔÔ4 5
First
ÔÔ5 :
(
ÔÔ: ;
x
ÔÔ; <
=>
ÔÔ= ?
x
ÔÔ@ A
.
ÔÔA B
	ProjectId
ÔÔB K
==
ÔÔL N
	Projectid
ÔÔO X
&&
ÔÔY [
x
ÔÔ\ ]
.
ÔÔ] ^
IsActive
ÔÔ^ f
)
ÔÔf g
;
ÔÔg h
if
 
(
 
project
 
==
 
null
 #
)
# $
throw
% *
new
+ .#
ArgumentNullException
/ D
(
D E
$"
E G
$str
G T
{
T U
	Projectid
U ^
}
^ _
"
_ `
)
` a
;
a b
return
ÒÒ 
project
ÒÒ 
;
ÒÒ 
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
	exception
ÛÛ &
)
ÛÛ& '
{
ÙÙ 
_logger
ıı 
.
ıı 
LogError
ıı  
(
ıı  !
$"
ıı! #
$str
ıı# G
{
ııG H
	exception
ııH Q
.
ııQ R
Message
ııR Y
}
ııY Z
"
ııZ [
)
ıı[ \
;
ıı\ ]
_logger
ˆˆ 
.
ˆˆ 
LogInformation
ˆˆ &
(
ˆˆ& '
$"
ˆˆ' )
$str
ˆˆ) M
{
ˆˆM N
	exception
ˆˆN W
.
ˆˆW X

StackTrace
ˆˆX b
}
ˆˆb c
"
ˆˆc d
)
ˆˆd e
;
ˆˆe f
throw
˜˜ 
;
˜˜ 
}
¯¯ 
}
˘˘ 	
public
˙˙ 
bool
˙˙ 
UpdateProjects
˙˙ "
(
˙˙" #
Projects
˙˙# +
projects
˙˙, 4
)
˙˙4 5
{
˚˚ 	
if
¸¸ 
(
¸¸ 
projects
¸¸ 
==
¸¸ 
null
¸¸  
)
¸¸  !
throw
˝˝ 
new
˝˝ !
ValidationException
˝˝ -
(
˝˝- .
$str
˝˝. a
)
˝˝a b
;
˝˝b c
try
ÄÄ 
{
ÅÅ 
projects
ÇÇ 
.
ÇÇ 
IsActive
ÇÇ !
=
ÇÇ" #
true
ÇÇ$ (
;
ÇÇ( )
_context
ÉÉ 
.
ÉÉ 
projects
ÉÉ !
!
ÉÉ! "
.
ÉÉ" #
Update
ÉÉ# )
(
ÉÉ) *
projects
ÉÉ* 2
)
ÉÉ2 3
;
ÉÉ3 4
_context
ÑÑ 
.
ÑÑ 
SaveChanges
ÑÑ $
(
ÑÑ$ %
)
ÑÑ% &
;
ÑÑ& '
return
ÖÖ 
true
ÖÖ 
;
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
	exception
áá &
)
áá& '
{
àà 
_logger
ââ 
.
ââ 
LogError
ââ  
(
ââ  !
$"
ââ! #
$str
ââ# @
{
ââ@ A
	exception
ââA J
.
ââJ K
Message
ââK R
}
ââR S
"
ââS T
)
ââT U
;
ââU V
_logger
ää 
.
ää 
LogInformation
ää &
(
ää& '
$"
ää' )
$str
ää) F
{
ääF G
	exception
ääG P
.
ääP Q

StackTrace
ääQ [
}
ää[ \
"
ää\ ]
)
ää] ^
;
ää^ _
return
ãã 
false
ãã 
;
ãã 
}
åå 
}
éé 	
public
èè 
bool
èè #
DisableProjectDetails
èè )
(
èè) *
int
èè* -
	Projectid
èè. 7
)
èè7 8
{
êê 	
if
ëë 
(
ëë 
	Projectid
ëë 
<=
ëë 
$num
ëë 
)
ëë 
throw
ìì 
new
ìì !
ValidationException
ìì -
(
ìì- .
$str
ìì. Q
)
ììQ R
;
ììR S
try
ïï 
{
ññ 
var
óó 
projects
óó 
=
óó 
_context
óó '
.
óó' (
projects
óó( 0
!
óó0 1
.
óó1 2
Find
óó2 6
(
óó6 7
	Projectid
óó7 @
)
óó@ A
;
óóA B
if
òò 
(
òò 
projects
òò 
==
òò 
null
òò  $
)
òò$ %
throw
ôô 
new
ôô #
ArgumentNullException
ôô 3
(
ôô3 4
$"
ôô4 6
$str
ôô6 J
{
ôôJ K
	Projectid
ôôK T
}
ôôT U
"
ôôU V
)
ôôV W
;
ôôW X
projects
õõ 
.
õõ 
IsActive
õõ !
=
õõ" #
false
õõ$ )
;
õõ) *
_context
úú 
.
úú 
projects
úú !
.
úú! "
Update
úú" (
(
úú( )
projects
úú) 1
)
úú1 2
;
úú2 3
_context
ùù 
.
ùù 
SaveChanges
ùù $
(
ùù$ %
)
ùù% &
;
ùù& '
return
ûû 
true
ûû 
;
ûû 
}
†† 
catch
°° 
(
°° 
	Exception
°° 
	exception
°° &
)
°°& '
{
¢¢ 
_logger
££ 
.
££ 
LogError
££  
(
££  !
$"
££! #
$str
££# G
{
££G H
	exception
££H Q
.
££Q R
Message
££R Y
}
££Y Z
"
££Z [
)
££[ \
;
££\ ]
_logger
§§ 
.
§§ 
LogInformation
§§ &
(
§§& '
$"
§§' )
$str
§§) M
{
§§M N
	exception
§§N W
.
§§W X

StackTrace
§§X b
}
§§b c
"
§§c d
)
§§d e
;
§§e f
return
•• 
false
•• 
;
•• 
}
¶¶ 
}
®® 	
public
©© 
bool
©© 
	AddSkills
©© 
(
©© 
Skills
©© $
skill
©©% *
)
©©* +
{
™™ 	
if
≠≠ 
(
≠≠ 
skill
≠≠ 
==
≠≠ 
null
≠≠ 
)
≠≠ 
throw
ÆÆ 
new
ÆÆ 
ArgumentException
ÆÆ +
(
ÆÆ+ ,
$str
ÆÆ, X
)
ÆÆX Y
;
ÆÆY Z
try
∞∞ 
{
±± 
skill
≤≤ 
.
≤≤ 
IsActive
≤≤ 
=
≤≤  
true
≤≤! %
;
≤≤% &
_context
≥≥ 
.
≥≥ 
skills
≥≥ 
!
≥≥  
.
≥≥  !
Add
≥≥! $
(
≥≥$ %
skill
≥≥% *
)
≥≥* +
;
≥≥+ ,
_context
¥¥ 
.
¥¥ 
SaveChanges
¥¥ $
(
¥¥$ %
)
¥¥% &
;
¥¥& '
return
µµ 
true
µµ 
;
µµ 
}
∂∂ 
catch
∏∏ 
(
∏∏ 
	Exception
∏∏ 
	exception
∏∏ &
)
∏∏& '
{
ππ 
_logger
∫∫ 
.
∫∫ 
LogError
∫∫  
(
∫∫  !
$"
∫∫! #
$str
∫∫# ;
{
∫∫; <
	exception
∫∫< E
.
∫∫E F
Message
∫∫F M
}
∫∫M N
"
∫∫N O
)
∫∫O P
;
∫∫P Q
_logger
ªª 
.
ªª 
LogInformation
ªª &
(
ªª& '
$"
ªª' )
$str
ªª) A
{
ªªA B
	exception
ªªB K
.
ªªK L

StackTrace
ªªL V
}
ªªV W
"
ªªW X
)
ªªX Y
;
ªªY Z
return
ΩΩ 
false
ΩΩ 
;
ΩΩ 
}
ææ 
}
¡¡ 	
public
¬¬ 
List
¬¬ 
<
¬¬ 
Skills
¬¬ 
>
¬¬  
GetallSkillDetails
¬¬ .
(
¬¬. /
)
¬¬/ 0
{
√√ 	
try
≈≈ 
{
∆∆ 
return
»» 
_context
»» 
.
»»  
skills
»»  &
!
»»& '
.
»»' (
Include
»»( /
(
»»/ 0
$str
»»0 8
)
»»8 9
.
»»9 :
Include
»»: A
(
»»A B
$str
»»B N
)
»»N O
.
»»O P
ToList
»»P V
(
»»V W
)
»»W X
;
»»X Y
}
   
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
	exception
ÃÃ &
)
ÃÃ& '
{
ÕÕ 
_logger
ŒŒ 
.
ŒŒ 
LogError
ŒŒ  
(
ŒŒ  !
$"
ŒŒ! #
$str
ŒŒ# D
{
ŒŒD E
	exception
ŒŒE N
.
ŒŒN O
Message
ŒŒO V
}
ŒŒV W
"
ŒŒW X
)
ŒŒX Y
;
ŒŒY Z
_logger
œœ 
.
œœ 
LogInformation
œœ &
(
œœ& '
$"
œœ' )
$str
œœ) J
{
œœJ K
	exception
œœK T
.
œœT U

StackTrace
œœU _
}
œœ_ `
"
œœ` a
)
œœa b
;
œœb c
throw
–– 
;
–– 
}
—— 
}
““ 	
public
”” 
Skills
”” !
GetSkillDetailsById
”” )
(
””) *
int
””* -
Skillid
””. 5
)
””5 6
{
‘‘ 	
if
’’ 
(
’’ 
Skillid
’’ 
<=
’’ 
$num
’’ 
)
’’ 
throw
◊◊ 
new
◊◊ !
ValidationException
◊◊ -
(
◊◊- .
$str
◊◊. O
)
◊◊O P
;
◊◊P Q
try
ŸŸ 
{
⁄⁄ 
var
€€ 
skills
€€ 
=
€€  
GetallSkillDetails
€€ /
(
€€/ 0
)
€€0 1
.
€€1 2
First
€€2 7
(
€€7 8
x
€€8 9
=>
€€: <
x
€€= >
.
€€> ?
SkillId
€€? F
==
€€G I
Skillid
€€J Q
&&
€€R T
x
€€U V
.
€€V W
IsActive
€€W _
)
€€_ `
;
€€` a
if
‹‹ 
(
‹‹ 
skills
‹‹ 
==
‹‹ 
null
‹‹ "
)
‹‹" #
throw
‹‹$ )
new
‹‹* -#
ArgumentNullException
‹‹. C
(
‹‹C D
$"
‹‹D F
$str
‹‹F S
{
‹‹S T
Skillid
‹‹T [
}
‹‹[ \
"
‹‹\ ]
)
‹‹] ^
;
‹‹^ _
return
›› 
skills
›› 
;
›› 
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
	Exception
ﬂﬂ 
	exception
ﬂﬂ &
)
ﬂﬂ& '
{
‡‡ 
_logger
·· 
.
·· 
LogError
··  
(
··  !
$"
··! #
$str
··# E
{
··E F
	exception
··F O
.
··O P
Message
··P W
}
··W X
"
··X Y
)
··Y Z
;
··Z [
_logger
‚‚ 
.
‚‚ 
LogInformation
‚‚ &
(
‚‚& '
$"
‚‚' )
$str
‚‚) K
{
‚‚K L
	exception
‚‚L U
.
‚‚U V

StackTrace
‚‚V `
}
‚‚` a
"
‚‚a b
)
‚‚b c
;
‚‚c d
throw
„„ 
;
„„ 
}
‰‰ 
}
ÂÂ 	
public
ÊÊ 
bool
ÊÊ 
UpdateSkills
ÊÊ  
(
ÊÊ  !
Skills
ÊÊ! '
skill
ÊÊ( -
)
ÊÊ- .
{
ÁÁ 	
if
ËË 
(
ËË 
skill
ËË 
==
ËË 
null
ËË 
)
ËË 
throw
ÈÈ 
new
ÈÈ !
ValidationException
ÈÈ -
(
ÈÈ- .
$str
ÈÈ. ^
)
ÈÈ^ _
;
ÈÈ_ `
try
ÍÍ 
{
ÎÎ 
skill
ÏÏ 
.
ÏÏ 
IsActive
ÏÏ 
=
ÏÏ  
true
ÏÏ! %
;
ÏÏ% &
_context
ÌÌ 
.
ÌÌ 
skills
ÌÌ 
!
ÌÌ  
.
ÌÌ  !
Update
ÌÌ! '
(
ÌÌ' (
skill
ÌÌ( -
)
ÌÌ- .
;
ÌÌ. /
_context
ÓÓ 
.
ÓÓ 
SaveChanges
ÓÓ $
(
ÓÓ$ %
)
ÓÓ% &
;
ÓÓ& '
return
ÔÔ 
true
ÔÔ 
;
ÔÔ 
}
 
catch
ÒÒ 
(
ÒÒ 
	Exception
ÒÒ 
	exception
ÒÒ &
)
ÒÒ& '
{
ÚÚ 
_logger
ÛÛ 
.
ÛÛ 
LogError
ÛÛ  
(
ÛÛ  !
$"
ÛÛ! #
$str
ÛÛ# =
{
ÛÛ= >
	exception
ÛÛ> G
.
ÛÛG H
Message
ÛÛH O
}
ÛÛO P
"
ÛÛP Q
)
ÛÛQ R
;
ÛÛR S
_logger
ÙÙ 
.
ÙÙ 
LogInformation
ÙÙ &
(
ÙÙ& '
$"
ÙÙ' )
$str
ÙÙ) C
{
ÙÙC D
	exception
ÙÙD M
.
ÙÙM N

StackTrace
ÙÙN X
}
ÙÙX Y
"
ÙÙY Z
)
ÙÙZ [
;
ÙÙ[ \
return
ıı 
false
ıı 
;
ıı 
}
ˆˆ 
}
˜˜ 	
public
¯¯ 
bool
¯¯ !
DisableSkillDetails
¯¯ '
(
¯¯' (
int
¯¯( +
Skillid
¯¯, 3
)
¯¯3 4
{
˘˘ 	
if
˙˙ 
(
˙˙ 
Skillid
˙˙ 
<=
˙˙ 
$num
˙˙ 
)
˙˙ 
throw
¸¸ 
new
¸¸ !
ValidationException
¸¸ -
(
¸¸- .
$str
¸¸. O
)
¸¸O P
;
¸¸P Q
try
˛˛ 
{
ˇˇ 
var
ÄÄ 
skills
ÄÄ 
=
ÄÄ 
_context
ÄÄ %
.
ÄÄ% &
skills
ÄÄ& ,
!
ÄÄ, -
.
ÄÄ- .
Find
ÄÄ. 2
(
ÄÄ2 3
Skillid
ÄÄ3 :
)
ÄÄ: ;
;
ÄÄ; <
if
ÅÅ 
(
ÅÅ 
skills
ÅÅ 
==
ÅÅ 
null
ÅÅ "
)
ÅÅ" #
throw
ÅÅ$ )
new
ÅÅ* -#
ArgumentNullException
ÅÅ. C
(
ÅÅC D
$"
ÅÅD F
$str
ÅÅF X
{
ÅÅX Y
Skillid
ÅÅY `
}
ÅÅ` a
"
ÅÅa b
)
ÅÅb c
;
ÅÅc d
skills
ÇÇ 
.
ÇÇ 
IsActive
ÇÇ 
=
ÇÇ  !
false
ÇÇ" '
;
ÇÇ' (
_context
ÉÉ 
.
ÉÉ 
skills
ÉÉ 
.
ÉÉ  
Update
ÉÉ  &
(
ÉÉ& '
skills
ÉÉ' -
)
ÉÉ- .
;
ÉÉ. /
_context
ÑÑ 
.
ÑÑ 
SaveChanges
ÑÑ $
(
ÑÑ$ %
)
ÑÑ% &
;
ÑÑ& '
return
ÖÖ 
true
ÖÖ 
;
ÖÖ 
}
áá 
catch
ää 
(
ää 
	Exception
ää 
	exception
ää &
)
ää& '
{
ãã 
_logger
åå 
.
åå 
LogError
åå  
(
åå  !
$"
åå! #
$str
åå# E
{
ååE F
	exception
ååF O
.
ååO P
Message
ååP W
}
ååW X
"
ååX Y
)
ååY Z
;
ååZ [
_logger
çç 
.
çç 
LogInformation
çç &
(
çç& '
$"
çç' )
$str
çç) K
{
ççK L
	exception
ççL U
.
ççU V

StackTrace
ççV `
}
çç` a
"
çça b
)
ççb c
;
ççc d
return
éé 
false
éé 
;
éé 
}
èè 
}
ëë 	
public
íí 
bool
íí 
AddLanguage
íí 
(
íí  
Language
íí  (
language
íí) 1
)
íí1 2
{
ìì 	
if
ññ 
(
ññ 
language
ññ 
==
ññ 
null
ññ  
)
ññ  !
throw
óó 
new
óó 
ArgumentException
óó +
(
óó+ ,
$str
óó, \
)
óó\ ]
;
óó] ^
try
ôô 
{
öö 
language
õõ 
.
õõ 
IsActive
õõ !
=
õõ! "
true
õõ" &
;
õõ& '
_context
úú 
.
úú 
	languages
úú "
!
úú" #
.
úú# $
Add
úú$ '
(
úú' (
language
úú( 0
)
úú0 1
;
úú1 2
_context
ùù 
.
ùù 
SaveChanges
ùù $
(
ùù$ %
)
ùù% &
;
ùù& '
return
ûû 
true
ûû 
;
ûû 
}
üü 
catch
°° 
(
°° 
	Exception
°° 
	exception
°° &
)
°°& '
{
¢¢ 
_logger
££ 
.
££ 
LogError
££  
(
££  !
$"
££! #
$str
££# =
{
££= >
	exception
££> G
.
££G H
Message
££H O
}
££O P
"
££P Q
)
££Q R
;
££R S
_logger
§§ 
.
§§ 
LogInformation
§§ &
(
§§& '
$"
§§' )
$str
§§) C
{
§§C D
	exception
§§D M
.
§§M N

StackTrace
§§N X
}
§§X Y
"
§§Y Z
)
§§Z [
;
§§[ \
return
¶¶ 
false
¶¶ 
;
¶¶ 
}
ßß 
}
™™ 	
public
´´ 
bool
´´ 
DisableLanguage
´´ #
(
´´# $
int
´´$ '

Languageid
´´( 2
)
´´2 3
{
¨¨ 	
if
≠≠ 
(
≠≠ 

Languageid
≠≠ 
<=
≠≠ 
$num
≠≠ 
)
≠≠  
throw
ØØ 
new
ØØ !
ValidationException
ØØ -
(
ØØ- .
$str
ØØ. R
)
ØØR S
;
ØØS T
try
±± 
{
≤≤ 
var
≥≥ 
	languages
≥≥ 
=
≥≥ 
_context
≥≥  (
.
≥≥( )
	languages
≥≥) 2
!
≥≥2 3
.
≥≥3 4
Find
≥≥4 8
(
≥≥8 9

Languageid
≥≥9 C
)
≥≥C D
;
≥≥D E
if
¥¥ 
(
¥¥ 
	languages
¥¥ 
==
¥¥  
null
¥¥! %
)
¥¥% &
throw
¥¥' ,
new
¥¥- 0#
ArgumentNullException
¥¥1 F
(
¥¥F G
$"
¥¥G I
$str
¥¥I ^
{
¥¥^ _

Languageid
¥¥_ i
}
¥¥i j
"
¥¥j k
)
¥¥k l
;
¥¥l m
	languages
µµ 
.
µµ 
IsActive
µµ "
=
µµ# $
false
µµ% *
;
µµ* +
_context
∂∂ 
.
∂∂ 
	languages
∂∂ "
.
∂∂" #
Update
∂∂# )
(
∂∂) *
	languages
∂∂* 3
)
∂∂3 4
;
∂∂4 5
_context
∑∑ 
.
∑∑ 
SaveChanges
∑∑ $
(
∑∑$ %
)
∑∑% &
;
∑∑& '
return
∏∏ 
true
∏∏ 
;
∏∏ 
}
∫∫ 
catch
ªª 
(
ªª 
	Exception
ªª 
	exception
ªª &
)
ªª& '
{
ºº 
_logger
ΩΩ 
.
ΩΩ 
LogError
ΩΩ  
(
ΩΩ  !
$"
ΩΩ! #
$str
ΩΩ# A
{
ΩΩA B
	exception
ΩΩB K
.
ΩΩK L
Message
ΩΩL S
}
ΩΩS T
"
ΩΩT U
)
ΩΩU V
;
ΩΩV W
_logger
ææ 
.
ææ 
LogInformation
ææ &
(
ææ& '
$"
ææ' )
$str
ææ) G
{
ææG H
	exception
ææH Q
.
ææQ R

StackTrace
ææR \
}
ææ\ ]
"
ææ] ^
)
ææ^ _
;
ææ_ `
return
øø 
false
øø 
;
øø 
}
¿¿ 
}
¬¬ 	
public
√√ 
bool
√√ 
AddSocialMedia
√√ "
(
√√" #
SocialMedia
√√# .
media
√√/ 4
)
√√4 5
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
media
≈≈ 
==
≈≈ 
null
≈≈ 
)
≈≈ 
throw
∆∆ 
new
∆∆ 
ArgumentException
∆∆ +
(
∆∆+ ,
$str
∆∆, `
)
∆∆` a
;
∆∆a b
try
«« 
{
»» 
media
…… 
.
…… 
IsActive
…… 
=
…… 
true
…… #
;
……# $
_context
   
.
   
SocialMedias
   %
!
  % &
.
  & '
Add
  ' *
(
  * +
media
  + 0
)
  0 1
;
  1 2
_context
ÀÀ 
.
ÀÀ 
SaveChanges
ÀÀ $
(
ÀÀ$ %
)
ÀÀ% &
;
ÀÀ& '
return
ÃÃ 
true
ÃÃ 
;
ÃÃ 
}
ÕÕ 
catch
œœ 
(
œœ 
	Exception
œœ 
	exception
œœ &
)
œœ& '
{
–– 
_logger
—— 
.
—— 
LogError
——  
(
——  !
$"
——! #
$str
——# @
{
——@ A
	exception
——A J
.
——J K
Message
——K R
}
——R S
"
——S T
)
——T U
;
——U V
_logger
““ 
.
““ 
LogInformation
““ &
(
““& '
$"
““' )
$str
““) F
{
““F G
	exception
““G P
.
““P Q

StackTrace
““Q [
}
““[ \
"
““\ ]
)
““] ^
;
““^ _
return
‘‘ 
false
‘‘ 
;
‘‘ 
}
’’ 
}
÷÷ 	
public
◊◊ 
bool
◊◊  
DisableSocialMedia
◊◊ &
(
◊◊& '
int
◊◊' *
SocialMediaid
◊◊+ 8
)
◊◊8 9
{
ÿÿ 	
if
ŸŸ 
(
ŸŸ 
SocialMediaid
ŸŸ 
<=
ŸŸ  
$num
ŸŸ! "
)
ŸŸ" #
throw
€€ 
new
€€ !
ValidationException
€€ -
(
€€- .
$str
€€. U
)
€€U V
;
€€V W
try
›› 
{
ﬁﬁ 
var
ﬂﬂ 
SocialMedias
ﬂﬂ  
=
ﬂﬂ! "
_context
ﬂﬂ# +
.
ﬂﬂ+ ,
SocialMedias
ﬂﬂ, 8
!
ﬂﬂ8 9
.
ﬂﬂ9 :
Find
ﬂﬂ: >
(
ﬂﬂ> ?
SocialMediaid
ﬂﬂ? L
)
ﬂﬂL M
;
ﬂﬂM N
if
‡‡ 
(
‡‡ 
SocialMedias
‡‡  
==
‡‡! #
null
‡‡$ (
)
‡‡( )
throw
‡‡* /
new
‡‡0 3#
ArgumentNullException
‡‡4 I
(
‡‡I J
$"
‡‡J L
$str
‡‡L d
{
‡‡d e
SocialMediaid
‡‡e r
}
‡‡r s
"
‡‡s t
)
‡‡t u
;
‡‡u v
SocialMedias
·· 
.
·· 
IsActive
·· %
=
··& '
false
··( -
;
··- .
_context
‚‚ 
.
‚‚ 
SocialMedias
‚‚ %
.
‚‚% &
Update
‚‚& ,
(
‚‚, -
SocialMedias
‚‚- 9
)
‚‚9 :
;
‚‚: ;
_context
„„ 
.
„„ 
SaveChanges
„„ $
(
„„$ %
)
„„% &
;
„„& '
return
‰‰ 
true
‰‰ 
;
‰‰ 
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
	exception
ÁÁ &
)
ÁÁ& '
{
ËË 
_logger
ÈÈ 
.
ÈÈ 
LogError
ÈÈ  
(
ÈÈ  !
$"
ÈÈ! #
$str
ÈÈ# D
{
ÈÈD E
	exception
ÈÈE N
.
ÈÈN O
Message
ÈÈO V
}
ÈÈV W
"
ÈÈW X
)
ÈÈX Y
;
ÈÈY Z
_logger
ÍÍ 
.
ÍÍ 
LogInformation
ÍÍ &
(
ÍÍ& '
$"
ÍÍ' )
$str
ÍÍ) J
{
ÍÍJ K
	exception
ÍÍK T
.
ÍÍT U

StackTrace
ÍÍU _
}
ÍÍ_ `
"
ÍÍ` a
)
ÍÍa b
;
ÍÍb c
return
ÎÎ 
false
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}
ÓÓ 	
public
ÔÔ 
List
ÔÔ 
<
ÔÔ 

Technology
ÔÔ 
>
ÔÔ  
GetallTechnologies
ÔÔ  2
(
ÔÔ2 3
)
ÔÔ3 4
{
 	
try
ÚÚ 
{
ÛÛ 
return
ıı 
_context
ıı 
.
ıı  
Technologies
ıı  ,
!
ıı, -
.
ıı- .
ToList
ıı. 4
(
ıı4 5
)
ıı5 6
;
ıı6 7
}
˜˜ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
	exception
˘˘ &
)
˘˘& '
{
˙˙ 
_logger
˚˚ 
.
˚˚ 
LogError
˚˚  
(
˚˚  !
$"
˚˚! #
$str
˚˚# D
{
˚˚D E
	exception
˚˚E N
.
˚˚N O
Message
˚˚O V
}
˚˚V W
"
˚˚W X
)
˚˚X Y
;
˚˚Y Z
_logger
¸¸ 
.
¸¸ 
LogInformation
¸¸ &
(
¸¸& '
$"
¸¸' )
$str
¸¸) J
{
¸¸J K
	exception
¸¸K T
.
¸¸T U

StackTrace
¸¸U _
}
¸¸_ `
"
¸¸` a
)
¸¸a b
;
¸¸b c
throw
˝˝ 
;
˝˝ 
}
˛˛ 
}
ˇˇ 	
public
ÅÅ 

Technology
ÅÅ 
GetTechnologyById
ÅÅ +
(
ÅÅ+ ,
int
ÅÅ, /
Technologyid
ÅÅ0 <
)
ÅÅ< =
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
Technologyid
ÉÉ 
<=
ÉÉ 
$num
ÉÉ  !
)
ÉÉ! "
throw
ÖÖ 
new
ÖÖ !
ValidationException
ÖÖ -
(
ÖÖ- .
$str
ÖÖ. T
)
ÖÖT U
;
ÖÖU V
try
áá 
{
àà 

Technology
ââ 

technology
ââ %
=
ââ& ' 
GetallTechnologies
ââ( :
(
ââ: ;
)
ââ; <
.
ââ< =
First
ââ= B
(
ââB C
x
ââC D
=>
ââE G
x
ââH I
.
ââI J
TechnologyId
ââJ V
==
ââW Y
Technologyid
ââZ f
&&
ââg i
x
ââj k
.
ââk l
IsActive
ââl t
)
âât u
;
ââu v
if
ää 
(
ää 

technology
ää 
==
ää !
null
ää" &
)
ää& '
throw
ää( -
new
ää. 1#
ArgumentNullException
ää2 G
(
ääG H
$"
ääH J
$str
ääJ W
{
ääW X

technology
ääX b
}
ääb c
"
ääc d
)
ääd e
;
ääe f
return
ãã 

technology
ãã !
;
ãã! "
}
åå 
catch
çç 
(
çç 
	Exception
çç 
	exception
çç &
)
çç& '
{
éé 
_logger
èè 
.
èè 
LogError
èè  
(
èè  !
$"
èè! #
$str
èè# C
{
èèC D
	exception
èèD M
.
èèM N
Message
èèN U
}
èèU V
"
èèV W
)
èèW X
;
èèX Y
_logger
êê 
.
êê 
LogInformation
êê &
(
êê& '
$"
êê' )
$str
êê) I
{
êêI J
	exception
êêJ S
.
êêS T

StackTrace
êêT ^
}
êê^ _
"
êê_ `
)
êê` a
;
êêa b
throw
ëë 
;
ëë 
}
íí 
}
ìì 	
public
îî 
bool
îî 
AddAchievements
îî #
(
îî# $
Achievements
îî$ 0
achievements
îî1 =
)
îî= >
{
ïï 	
if
ññ 
(
ññ 
achievements
ññ 
==
ññ 
null
ññ  $
)
ññ$ %
throw
óó 
new
óó 
ArgumentException
óó +
(
óó+ ,
$str
óó, `
)
óó` a
;
óóa b
try
òò 
{
ôô 
achievements
öö 
.
öö 
IsActive
öö %
=
öö& '
true
öö( ,
;
öö, -
_context
õõ 
.
õõ 
achievements
õõ %
!
õõ% &
.
õõ& '
Add
õõ' *
(
õõ* +
achievements
õõ+ 7
)
õõ7 8
;
õõ8 9
_context
úú 
.
úú 
SaveChanges
úú $
(
úú$ %
)
úú% &
;
úú& '
return
ùù 
true
ùù 
;
ùù 
}
ûû 
catch
†† 
(
†† 
	Exception
†† 
	exception
†† &
)
††& '
{
°° 
_logger
££ 
.
££ 
LogError
££  
(
££  !
$"
££! #
$str
££# A
{
££A B
	exception
££B K
.
££K L
Message
££L S
}
££S T
"
££T U
)
££U V
;
££V W
_logger
§§ 
.
§§ 
LogInformation
§§ &
(
§§& '
$"
§§' )
$str
§§) G
{
§§G H
	exception
§§H Q
.
§§Q R

StackTrace
§§R \
}
§§\ ]
"
§§] ^
)
§§^ _
;
§§_ `
return
¶¶ 
false
¶¶ 
;
¶¶ 
}
ßß 
}
®® 	
public
©© 
List
©© 
<
©© 
Achievements
©©  
>
©©  ! 
GetallAchievements
©©" 4
(
©©4 5
)
©©5 6
{
™™ 	
try
¨¨ 
{
≠≠ 
return
ØØ 
_context
ØØ 
.
ØØ  
achievements
ØØ  ,
!
ØØ, -
.
ØØ- .
Include
ØØ. 5
(
ØØ5 6
$str
ØØ6 G
)
ØØG H
.
ØØH I
ToList
ØØI O
(
ØØO P
)
ØØP Q
;
ØØQ R
}
±± 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
	exception
≥≥ &
)
≥≥& '
{
¥¥ 
_logger
µµ 
.
µµ 
LogError
µµ  
(
µµ  !
$"
µµ! #
$str
µµ# D
{
µµD E
	exception
µµE N
.
µµN O
Message
µµO V
}
µµV W
"
µµW X
)
µµX Y
;
µµY Z
_logger
∂∂ 
.
∂∂ 
LogInformation
∂∂ &
(
∂∂& '
$"
∂∂' )
$str
∂∂) J
{
∂∂J K
	exception
∂∂K T
.
∂∂T U

StackTrace
∂∂U _
}
∂∂_ `
"
∂∂` a
)
∂∂a b
;
∂∂b c
throw
∑∑ 
;
∑∑ 
}
∏∏ 
}
ππ 	
public
∫∫ 
bool
∫∫  
DisableAchievement
∫∫ &
(
∫∫& '
int
∫∫' *
AchievementId
∫∫+ 8
)
∫∫8 9
{
ªª 	
if
ºº 
(
ºº 
AchievementId
ºº 
<=
ºº  
$num
ºº! "
)
ºº" #
throw
ææ 
new
ææ 
ArgumentException
ææ +
(
ææ+ ,
$str
ææ, S
)
ææS T
;
ææT U
try
¿¿ 
{
¡¡ 
var
¬¬ 
achievement
¬¬ 
=
¬¬  !
_context
¬¬" *
.
¬¬* +
achievements
¬¬+ 7
!
¬¬7 8
.
¬¬8 9
Find
¬¬9 =
(
¬¬= >
AchievementId
¬¬> K
)
¬¬K L
;
¬¬L M
if
√√ 
(
√√ 
achievement
√√ 
==
√√  "
null
√√# '
)
√√' (
throw
√√) .
new
√√/ 2#
ArgumentNullException
√√3 H
(
√√H I
$"
√√I K
$str
√√K c
{
√√c d
AchievementId
√√d q
}
√√q r
"
√√r s
)
√√s t
;
√√t u
achievement
ƒƒ 
.
ƒƒ 
IsActive
ƒƒ $
=
ƒƒ% &
false
ƒƒ' ,
;
ƒƒ, -
_context
≈≈ 
.
≈≈ 
achievements
≈≈ %
.
≈≈% &
Update
≈≈& ,
(
≈≈, -
achievement
≈≈- 8
)
≈≈8 9
;
≈≈9 :
_context
∆∆ 
.
∆∆ 
SaveChanges
∆∆ $
(
∆∆$ %
)
∆∆% &
;
∆∆& '
return
«« 
true
«« 
;
«« 
}
…… 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
	exception
ÃÃ &
)
ÃÃ& '
{
ÕÕ 
_logger
ŒŒ 
.
ŒŒ 
LogError
ŒŒ  
(
ŒŒ  !
$"
ŒŒ! #
$str
ŒŒ# D
{
ŒŒD E
	exception
ŒŒE N
.
ŒŒN O
Message
ŒŒO V
}
ŒŒV W
"
ŒŒW X
)
ŒŒX Y
;
ŒŒY Z
_logger
œœ 
.
œœ 
LogInformation
œœ &
(
œœ& '
$"
œœ' )
$str
œœ) J
{
œœJ K
	exception
œœK T
.
œœT U

StackTrace
œœU _
}
œœ_ `
"
œœ` a
)
œœa b
;
œœb c
return
–– 
false
–– 
;
–– 
}
—— 
}
”” 	
public
‘‘ 
List
‘‘ 
<
‘‘ 
Profile
‘‘ 
>
‘‘ 
GetallProfiles
‘‘ +
(
‘‘+ ,
)
‘‘, -
{
’’ 	
try
◊◊ 
{
ÿÿ 
var
ŸŸ 
result
ŸŸ 
=
ŸŸ 
_context
ŸŸ %
.
ŸŸ% &
profile
ŸŸ& -
!
ŸŸ- .
.
ŸŸ. /
Include
ŸŸ/ 6
(
ŸŸ6 7
$str
ŸŸ7 H
)
ŸŸH I
.
ŸŸI J
Include
ŸŸJ Q
(
ŸŸQ R
$str
ŸŸR ]
)
ŸŸ] ^
.
ŸŸ^ _
Include
ŸŸ_ f
(
ŸŸf g
$str
ŸŸg q
)
ŸŸq r
.
ŸŸr s
Include
ŸŸs z
(
ŸŸz {
$strŸŸ{ É
)ŸŸÉ Ñ
.ŸŸÑ Ö
IncludeŸŸÖ å
(ŸŸå ç
$strŸŸç õ
)ŸŸõ ú
.ŸŸú ù
IncludeŸŸù §
(ŸŸ§ •
eŸŸ• ¶
=>ŸŸß ©
eŸŸ™ ´
.ŸŸ´ ¨
profilestatusŸŸ¨ π
)ŸŸπ ∫
.ŸŸ∫ ª
IncludeŸŸª ¬
(ŸŸ¬ √
$strŸŸ√ …
)ŸŸ…  
.ŸŸ  À
ToListŸŸÀ —
(ŸŸ— “
)ŸŸ“ ”
;ŸŸ” ‘
return
⁄⁄ 
result
⁄⁄ 
;
⁄⁄ 
}
€€ 
catch
›› 
(
›› 
	Exception
›› 
	exception
›› &
)
››& '
{
ﬁﬁ 
_logger
ﬂﬂ 
.
ﬂﬂ 
LogError
ﬂﬂ  
(
ﬂﬂ  !
$"
ﬂﬂ! #
$str
ﬂﬂ# ?
{
ﬂﬂ? @
	exception
ﬂﬂ@ I
.
ﬂﬂI J
Message
ﬂﬂJ Q
}
ﬂﬂQ R
"
ﬂﬂR S
)
ﬂﬂS T
;
ﬂﬂT U
_logger
‡‡ 
.
‡‡ 
LogInformation
‡‡ &
(
‡‡& '
$"
‡‡' )
$str
‡‡) E
{
‡‡E F
	exception
‡‡F O
.
‡‡O P

StackTrace
‡‡P Z
}
‡‡Z [
"
‡‡[ \
)
‡‡\ ]
;
‡‡] ^
throw
·· 
;
·· 
}
‚‚ 
}
„„ 	
public
‰‰ 
ProfileStatus
‰‰ )
GetProfileStatusByProfileId
‰‰ 8
(
‰‰8 9
int
‰‰9 <
	Profileid
‰‰= F
)
‰‰F G
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
	Profileid
ÊÊ 
<=
ÊÊ 
$num
ÊÊ 
)
ÊÊ 
throw
ËË 
new
ËË !
ValidationException
ËË -
(
ËË- .
$str
ËË. Q
)
ËËQ R
;
ËËR S
try
ÈÈ 
{
ÍÍ 
return
ÏÏ 
_context
ÏÏ 
.
ÏÏ  
profile
ÏÏ  '
!
ÏÏ' (
.
ÏÏ( )
Where
ÏÏ) .
(
ÏÏ. /
x
ÏÏ/ 0
=>
ÏÏ1 3
x
ÏÏ4 5
.
ÏÏ5 6
	ProfileId
ÏÏ6 ?
==
ÏÏ@ B
	Profileid
ÏÏC L
)
ÏÏL M
.
ÏÏM N
Include
ÏÏN U
(
ÏÏU V
p
ÏÏV W
=>
ÏÏX Z
p
ÏÏ[ \
.
ÏÏ\ ]
profilestatus
ÏÏ] j
)
ÏÏj k
.
ÏÏk l
Select
ÏÏl r
(
ÏÏr s
p
ÏÏs t
=>
ÏÏu w
p
ÏÏx y
.
ÏÏy z
profilestatusÏÏz á
)ÏÏá à
.ÏÏà â
FirstÏÏâ é
(ÏÏé è
)ÏÏè ê
!ÏÏê ë
;ÏÏë í
}
ÌÌ 
catch
ÓÓ 
{
ÔÔ 
System
 
.
 
Console
 
.
 
	WriteLine
 (
(
( )
$str
) 0
)
0 1
;
1 2
throw
ÒÒ 
;
ÒÒ 
}
ÚÚ 
}
ÙÙ 	
public
ıı 
Profile
ıı 
GetProfileById
ıı %
(
ıı% &
int
ıı& )
	ProfileId
ıı* 3
)
ıı3 4
{
ˆˆ 	
if
˜˜ 
(
˜˜ 
	ProfileId
˜˜ 
<=
˜˜ 
$num
˜˜ 
)
˜˜ 
throw
˘˘ 
new
˘˘ 
ArgumentException
˘˘ +
(
˘˘+ ,
$str
˘˘, O
)
˘˘O P
;
˘˘P Q
try
˚˚ 
{
¸¸ 
Profile
˛˛ 
profile
˛˛ 
=
˛˛  !
GetallProfiles
˛˛" 0
(
˛˛0 1
)
˛˛1 2
.
˛˛2 3
First
˛˛3 8
(
˛˛8 9
x
˛˛9 :
=>
˛˛; =
x
˛˛> ?
.
˛˛? @
	ProfileId
˛˛@ I
==
˛˛J L
	ProfileId
˛˛M V
&&
˛˛W Y
x
˛˛Z [
.
˛˛[ \
IsActive
˛˛\ d
)
˛˛d e
;
˛˛e f
if
ˇˇ 
(
ˇˇ 
profile
ˇˇ 
==
ˇˇ 
null
ˇˇ #
)
ˇˇ# $
throw
ˇˇ% *
new
ˇˇ+ .#
ArgumentNullException
ˇˇ/ D
(
ˇˇD E
$"
ˇˇE G
$str
ˇˇG T
{
ˇˇT U
	ProfileId
ˇˇU ^
}
ˇˇ^ _
"
ˇˇ_ `
)
ˇˇ` a
;
ˇˇa b
return
ÄÄ 
profile
ÄÄ 
;
ÄÄ 
}
ÅÅ 
catch
ÇÇ 
(
ÇÇ 
	Exception
ÇÇ 
	exception
ÇÇ &
)
ÇÇ& '
{
ÉÉ 
_logger
ÑÑ 
.
ÑÑ 
LogError
ÑÑ  
(
ÑÑ  !
$"
ÑÑ! #
$str
ÑÑ# @
{
ÑÑ@ A
	exception
ÑÑA J
.
ÑÑJ K
Message
ÑÑK R
}
ÑÑR S
"
ÑÑS T
)
ÑÑT U
;
ÑÑU V
_logger
ÖÖ 
.
ÖÖ 
LogInformation
ÖÖ &
(
ÖÖ& '
$"
ÖÖ' )
$str
ÖÖ) F
{
ÖÖF G
	exception
ÖÖG P
.
ÖÖP Q

StackTrace
ÖÖQ [
}
ÖÖ[ \
"
ÖÖ\ ]
)
ÖÖ] ^
;
ÖÖ^ _
throw
ÜÜ 
;
ÜÜ 
}
áá 
}
àà 	
public
ää 
Profile
ää "
GetProfileIdByUserId
ää +
(
ää+ ,
int
ää, /
Userid
ää0 6
)
ää6 7
{
ãã 	
if
åå 
(
åå 
Userid
åå 
<=
åå 
$num
åå 
)
åå 
throw
çç 
new
çç 
ArgumentException
çç +
(
çç+ ,
$str
çç, L
)
ççL M
;
ççM N
try
éé 
{
èè 
Profile
êê 
profile
êê 
=
êê  
_context
êê  (
.
êê( )
profile
êê) 0
!
êê0 1
.
êê1 2
Include
êê2 9
(
êê9 :
e
êê: ;
=>
êê< >
e
êê? @
.
êê@ A
profilestatus
êêA N
)
êêN O
.
êêO P
FirstOrDefault
êêP ^
(
êê^ _
x
êê_ `
=>
êêa c
x
êêd e
.
êêe f
UserId
êêf l
==
êêm o
Userid
êêp v
)
êêv w
!
êêw x
;
êêx y
return
ëë 
profile
ëë 
;
ëë 
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
)
ìì 
{
îî 
System
ïï 
.
ïï 
Console
ïï 
.
ïï 
	WriteLine
ïï (
(
ïï( )
$str
ïï) 0
)
ïï0 1
;
ïï1 2
throw
ññ 
;
ññ 
}
óó 
}
òò 	
public
ôô 
List
ôô 
<
ôô 
User
ôô 
>
ôô  
GetFilteredProfile
ôô ,
(
ôô, -
string
ôô- 3
userName
ôô4 <
,
ôô< =
int
ôô> A
designationId
ôôB O
,
ôôO P
int
ôôQ T
domainID
ôôU ]
,
ôô] ^
int
ôô_ b
technologyId
ôôc o
,
ôôo p
int
ôôq t
	collegeId
ôôu ~
,
ôô~ 
intôôÄ É
profileStatusIdôôÑ ì
,ôôì î
intôôî ó"
currentdesignationôôò ™
)ôô™ ´
{
öö 	
try
õõ 
{
úú 
return
ùù 
_context
ùù 
.
ùù  
users
ùù  %
!
ùù% &
.
ûû 
Include
ûû 
(
ûû 
e
ûû 
=>
ûû  
e
ûû! "
.
ûû" #
designation
ûû# .
)
ûû. /
.
üü 
Include
üü 
(
üü 
e
üü 
=>
üü  
e
üü! "
.
üü" #
profile
üü# *
)
üü* +
.
†† 
Include
†† 
(
†† 
e
†† 
=>
††  
e
††! "
.
††" #
profile
††# *
!
††* +
.
††+ ,
personalDetails
††, ;
)
††; <
.
°° 
Include
°° 
(
°° 
e
°° 
=>
°°  
e
°°! "
.
°°" #
profile
°°# *
!
°°* +
.
°°+ ,
profilestatus
°°, 9
)
°°9 :
.
¢¢ 
Where
¢¢ 
(
¢¢ 
user
¢¢ 
=>
¢¢ !
user
¢¢" &
.
¢¢& '
profile
¢¢' .
!=
¢¢/ 1
null
¢¢2 6
&&
¢¢7 9
user
¢¢: >
.
¢¢> ?
DesignationId
¢¢? L
>
¢¢M N 
currentdesignation
¢¢O a
&&
¢¢c e
user
¢¢f j
.
¢¢j k
personalDetails
¢¢k z
!=
¢¢{ }
null¢¢~ Ç
)¢¢Ç É
.
££ 
WhereIf
££ 
(
££ 
String
££ "
.
££" #
IsNullOrEmpty
££# 0
(
££0 1
userName
££1 9
)
££9 :
==
££; =
false
££> C
,
££C D
users
££E J
=>
££K M
users
££M R
.
££R S
DesignationId
££S `
>
££a b 
currentdesignation
££c u
&&
££v x
users
££y ~
.
££~ 
Name££ É
!££É Ñ
.££Ñ Ö
Contains££Ö ç
(££ç é
userName££é ñ
)££ñ ó
==££ò ö
true££õ ü
)££ü †
.
§§ 
WhereIf
§§ 
(
§§ 
designationId
§§ )
!=
§§* ,
$num
§§- .
,
§§. /
users
§§/ 4
=>
§§5 7
users
§§8 =
.
§§= >
DesignationId
§§> K
>
§§L M 
currentdesignation
§§N `
&&
§§a c
users
§§d i
.
§§i j
DesignationId
§§j w
==
§§x z
designationId§§{ à
)§§à â
.
•• 
WhereIf
•• 
(
•• 
domainID
•• $
!=
••% '
$num
••( )
,
••) *
users
••+ 0
=>
••1 3
users
••4 9
.
••9 :
DesignationId
••: G
>
••H I 
currentdesignation
••J \
&&
••] _
users
••` e
.
••e f
profile
••f m
!
••m n
.
••n o
skills
••o u
!
••u v
.
••v w
Any
••w z
(
••z {
s
••{ |
=>
••} 
s••Ä Å
.••Å Ç
DomainId••Ç ä
==••ã ç
domainID••é ñ
)••ñ ó
==••ò ö
true••õ ü
)••ü †
.
¶¶ 
WhereIf
¶¶ 
(
¶¶ 
technologyId
¶¶ (
!=
¶¶) +
$num
¶¶, -
,
¶¶- .
users
¶¶/ 4
=>
¶¶5 7
users
¶¶8 =
.
¶¶= >
DesignationId
¶¶> K
>
¶¶L M 
currentdesignation
¶¶N `
&&
¶¶a c
users
¶¶d i
.
¶¶i j
profile
¶¶j q
!
¶¶q r
.
¶¶r s
skills
¶¶s y
!
¶¶y z
.
¶¶z {
Any
¶¶{ ~
(
¶¶~ 
s¶¶ Ä
=>¶¶Å É
s¶¶Ñ Ö
.¶¶Ö Ü
TechnologyId¶¶Ü í
==¶¶ì ï
technologyId¶¶ñ ¢
)¶¶¢ £
==¶¶§ ¶
true¶¶ß ´
)¶¶´ ¨
.
ßß 
WhereIf
ßß 
(
ßß 
	collegeId
ßß %
!=
ßß& (
$num
ßß) *
,
ßß* +
users
ßß, 1
=>
ßß2 4
users
ßß5 :
.
ßß: ;
DesignationId
ßß; H
>
ßßI J 
currentdesignation
ßßK ]
&&
ßß^ `
users
ßßa f
.
ßßf g
profile
ßßg n
!
ßßn o
.
ßßo p
	education
ßßp y
!
ßßy z
.
ßßz {
Any
ßß{ ~
(
ßß~ 
sßß Ä
=>ßßÅ É
sßßÑ Ö
.ßßÖ Ü
	CollegeIdßßÜ è
==ßßê í
	collegeIdßßì ú
)ßßú ù
==ßßû †
trueßß° •
)ßß• ¶
.
®® 
WhereIf
®® 
(
®® 
profileStatusId
®® +
!=
®®, .
$num
®®/ 0
,
®®0 1
users
®®2 7
=>
®®8 :
users
®®; @
.
®®@ A
DesignationId
®®A N
>
®®O P 
currentdesignation
®®Q c
&&
®®d f
users
®®g l
.
®®l m
profile
®®m t
!
®®t u
.
®®u v
ProfileStatusId®®v Ö
==®®Ü à
profileStatusId®®â ò
)®®ò ô
.
©© 
ToList
©© 
(
©© 
)
©© 
;
©© 
}
´´ 
catch
≠≠ 
(
≠≠ 
	Exception
≠≠ 
	exception
≠≠ &
)
≠≠& '
{
ÆÆ 
_logger
ØØ 
.
ØØ 
LogError
ØØ  
(
ØØ  !
$"
ØØ! #
$str
ØØ# D
{
ØØD E
	exception
ØØE N
.
ØØN O
Message
ØØO V
}
ØØV W
"
ØØW X
)
ØØX Y
;
ØØY Z
throw
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
public
≥≥ 
bool
≥≥ #
AcceptOrRejectProfile
≥≥ )
(
≥≥) *
int
≥≥* -
	profileId
≥≥. 7
,
≥≥7 8
int
≥≥9 <
response
≥≥= E
)
≥≥E F
{
¥¥ 	
if
µµ 
(
µµ 
	profileId
µµ 
<=
µµ 
$num
µµ 
)
µµ 
throw
∂∂ 
new
∂∂ !
ValidationException
∂∂ -
(
∂∂- .
$str
∂∂. T
)
∂∂T U
;
∂∂U V
try
∏∏ 
{
ππ 
Profile
∫∫ 
status
∫∫ 
=
∫∫  
_context
∫∫! )
.
∫∫) *
profile
∫∫* 1
!
∫∫1 2
.
∫∫2 3
Find
∫∫3 7
(
∫∫7 8
	profileId
∫∫8 A
)
∫∫A B
!
∫∫B C
;
∫∫C D
if
ªª 
(
ªª 
response
ªª 
==
ªª 
$num
ªª  !
)
ªª! "
throw
ºº 
new
ºº !
ValidationException
ºº 1
(
ºº1 2
$str
ºº2 Y
)
ººY Z
;
ººZ [
else
ΩΩ 
if
ΩΩ 
(
ΩΩ 
status
ΩΩ 
.
ΩΩ  
ProfileStatusId
ΩΩ  /
.
ΩΩ/ 0
Equals
ΩΩ0 6
(
ΩΩ6 7
$num
ΩΩ7 8
)
ΩΩ8 9
||
ΩΩ: <
status
ΩΩ= C
.
ΩΩC D
ProfileStatusId
ΩΩD S
.
ΩΩS T
Equals
ΩΩT Z
(
ΩΩZ [
$num
ΩΩ[ \
)
ΩΩ\ ]
)
ΩΩ] ^
throw
ææ 
new
ææ !
ValidationException
ææ 1
(
ææ1 2
$str
ææ2 R
)
ææR S
;
ææS T
status
øø 
.
øø 
ProfileStatusId
øø &
=
øø' (
response
øø) 1
;
øø1 2
_context
¿¿ 
.
¿¿ 
SaveChanges
¿¿ $
(
¿¿$ %
)
¿¿% &
;
¿¿& '
return
¡¡ 
true
¡¡ 
;
¡¡ 
}
¬¬ 
catch
√√ 
(
√√ 
	Exception
√√ 
	exception
√√ &
)
√√& '
{
ƒƒ 
_logger
≈≈ 
.
≈≈ 
LogError
≈≈  
(
≈≈  !
$"
≈≈! #
$str
≈≈# G
{
≈≈G H
	exception
≈≈H Q
.
≈≈Q R
Message
≈≈R Y
}
≈≈Y Z
"
≈≈Z [
)
≈≈[ \
;
≈≈\ ]
_logger
∆∆ 
.
∆∆ 
LogInformation
∆∆ &
(
∆∆& '
$"
∆∆' )
$str
∆∆) M
{
∆∆M N
	exception
∆∆N W
.
∆∆W X

StackTrace
∆∆X b
}
∆∆b c
"
∆∆c d
)
∆∆d e
;
∆∆e f
throw
«« 
;
«« 
}
»» 
}
   	
public
ÀÀ 
Profile
ÀÀ 

GetProfile
ÀÀ !
(
ÀÀ! "
int
ÀÀ" %
	ProfileId
ÀÀ& /
)
ÀÀ/ 0
{
ÃÃ 	
if
ŒŒ 
(
ŒŒ 
	ProfileId
ŒŒ 
<=
ŒŒ 
$num
ŒŒ 
)
ŒŒ 
throw
–– 
new
–– 
ArgumentException
–– +
(
––+ ,
$str
––, O
)
––O P
;
––P Q
try
““ 
{
”” 
return
‘‘ 
_context
‘‘ 
.
‘‘  
profile
‘‘  '
!
‘‘' (
.
‘‘( )
Find
‘‘) -
(
‘‘- .
	ProfileId
‘‘. 7
)
‘‘7 8
!
‘‘8 9
;
‘‘9 :
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
	exception
÷÷ &
)
÷÷& '
{
◊◊ 
_logger
ÿÿ 
.
ÿÿ 
LogError
ÿÿ  
(
ÿÿ  !
$"
ÿÿ! #
$str
ÿÿ# <
{
ÿÿ< =
	exception
ÿÿ= F
.
ÿÿF G
Message
ÿÿG N
}
ÿÿN O
"
ÿÿO P
)
ÿÿP Q
;
ÿÿQ R
_logger
ŸŸ 
.
ŸŸ 
LogInformation
ŸŸ &
(
ŸŸ& '
$"
ŸŸ' )
$str
ŸŸ) B
{
ŸŸB C
	exception
ŸŸC L
.
ŸŸL M

StackTrace
ŸŸM W
}
ŸŸW X
"
ŸŸX Y
)
ŸŸY Z
;
ŸŸZ [
throw
⁄⁄ 
;
⁄⁄ 
}
€€ 
}
‹‹ 	
public
›› 
bool
›› !
updateProfileStatus
›› '
(
››' (
Profile
››( /
profile
››0 7
)
››7 8
{
ﬁﬁ 	
if
ﬂﬂ 
(
ﬂﬂ 
profile
ﬂﬂ 
==
ﬂﬂ 
null
ﬂﬂ 
||
ﬂﬂ  "
profile
ﬂﬂ# *
.
ﬂﬂ* +
	ProfileId
ﬂﬂ+ 4
<=
ﬂﬂ5 7
$num
ﬂﬂ8 9
||
ﬂﬂ: <
profile
ﬂﬂ= D
.
ﬂﬂD E
UserId
ﬂﬂE K
<=
ﬂﬂL N
$num
ﬂﬂO P
)
ﬂﬂP Q
throw
‡‡ 
new
‡‡ !
ValidationException
‡‡ -
(
‡‡- .
$str
‡‡. I
)
‡‡I J
;
‡‡J K
if
‚‚ 
(
‚‚ 
_context
‚‚ 
.
‚‚ 
profile
‚‚  
!
‚‚  !
.
‚‚! "
Any
‚‚" %
(
‚‚% &
e
‚‚& '
=>
‚‚( *
e
‚‚+ ,
.
‚‚, -
	ProfileId
‚‚- 6
.
‚‚6 7
Equals
‚‚7 =
(
‚‚= >
profile
‚‚> E
.
‚‚E F
	ProfileId
‚‚F O
)
‚‚O P
)
‚‚P Q
)
‚‚Q R
throw
„„ 
new
„„ !
ValidationException
„„ -
(
„„- .
$str
„„. G
)
„„G H
;
„„H I
try
‰‰ 
{
ÂÂ 
_context
ÊÊ 
.
ÊÊ 
profile
ÊÊ  
!
ÊÊ  !
.
ÊÊ! "
Update
ÊÊ" (
(
ÊÊ( )
profile
ÊÊ) 0
)
ÊÊ0 1
;
ÊÊ1 2
_context
ÁÁ 
.
ÁÁ 
SaveChanges
ÁÁ $
(
ÁÁ$ %
)
ÁÁ% &
;
ÁÁ& '
return
ËË 
true
ËË 
;
ËË 
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
	exception
ÍÍ &
)
ÍÍ& '
{
ÎÎ 
_logger
ÏÏ 
.
ÏÏ 
LogError
ÏÏ  
(
ÏÏ  !
$"
ÏÏ! #
$str
ÏÏ# E
{
ÏÏE F
	exception
ÏÏF O
.
ÏÏO P
Message
ÏÏP W
}
ÏÏW X
"
ÏÏX Y
)
ÏÏY Z
;
ÏÏZ [
_logger
ÌÌ 
.
ÌÌ 
LogInformation
ÌÌ &
(
ÌÌ& '
$"
ÌÌ' )
$str
ÌÌ) K
{
ÌÌK L
	exception
ÌÌL U
.
ÌÌU V

StackTrace
ÌÌV `
}
ÌÌ` a
"
ÌÌa b
)
ÌÌb c
;
ÌÌc d
throw
ÓÓ 
;
ÓÓ 
}
ÔÔ 
}
 	
public
ÒÒ 
object
ÒÒ 
GetProfileCount
ÒÒ %
(
ÒÒ% &
int
ÒÒ& ) 
currentdesignation
ÒÒ* <
)
ÒÒ< =
{
ÚÚ 	
try
ÛÛ 
{
ÛÛ 
var
ÙÙ 
result
ÙÙ 
=
ÙÙ 
_context
ÙÙ #
.
ÙÙ# $
profile
ÙÙ$ +
;
ÙÙ+ ,
var
ıı 
Approved
ıı 
=
ıı 
result
ıı %
!
ıı% &
.
ıı& '
Where
ıı' ,
(
ıı, -
p
ıı- .
=>
ıı/ 1
p
ıı2 3
.
ıı3 4
ProfileStatusId
ıı4 C
==
ııD F
$num
ııG H
&&
ııI K
p
ııL M
.
ııM N
user
ııN R
!
ııR S
.
ııS T
DesignationId
ııT a
>
ııa b 
currentdesignation
ııb t
)
ııt u
.
ııu v
Count
ııv {
(
ıı{ |
)
ıı| }
;
ıı} ~
var
ˆˆ 
Rejected
ˆˆ 
=
ˆˆ 
result
ˆˆ %
!
ˆˆ% &
.
ˆˆ& '
Where
ˆˆ' ,
(
ˆˆ, -
p
ˆˆ- .
=>
ˆˆ/ 1
p
ˆˆ2 3
.
ˆˆ3 4
ProfileStatusId
ˆˆ4 C
==
ˆˆD F
$num
ˆˆG H
&&
ˆˆJ L
p
ˆˆM N
.
ˆˆN O
user
ˆˆO S
!
ˆˆS T
.
ˆˆT U
DesignationId
ˆˆU b
>
ˆˆb c 
currentdesignation
ˆˆc u
)
ˆˆu v
.
ˆˆv w
Count
ˆˆw |
(
ˆˆ| }
)
ˆˆ} ~
;
ˆˆ~ 
var
˜˜ 
Waiting
˜˜ 
=
˜˜ 
result
˜˜ $
!
˜˜$ %
.
˜˜% &
Where
˜˜& +
(
˜˜+ ,
p
˜˜, -
=>
˜˜. 0
p
˜˜1 2
.
˜˜2 3
ProfileStatusId
˜˜3 B
==
˜˜C E
$num
˜˜F G
&&
˜˜I K
p
˜˜L M
.
˜˜M N
user
˜˜N R
!
˜˜R S
.
˜˜S T
DesignationId
˜˜T a
>
˜˜a b 
currentdesignation
˜˜b t
)
˜˜t u
.
˜˜u v
Count
˜˜v {
(
˜˜{ |
)
˜˜| }
;
˜˜} ~
var
¯¯ 
total
¯¯ 
=
¯¯ 
result
¯¯ "
!
¯¯" #
.
¯¯# $
Where
¯¯$ )
(
¯¯) *
p
¯¯* +
=>
¯¯, .
p
¯¯/ 0
.
¯¯0 1
user
¯¯1 5
!
¯¯5 6
.
¯¯6 7
DesignationId
¯¯7 D
>
¯¯D E 
currentdesignation
¯¯E W
)
¯¯W X
.
¯¯X Y
Count
¯¯Y ^
(
¯¯^ _
)
¯¯_ `
;
¯¯` a
var
˘˘ 
ans
˘˘ 
=
˘˘ 
new
˘˘ 

Dictionary
˘˘ (
<
˘˘( )
string
˘˘) /
,
˘˘/ 0
int
˘˘1 4
>
˘˘4 5
(
˘˘5 6
)
˘˘6 7
;
˘˘7 8
ans
˙˙ 
.
˙˙ 
Add
˙˙ 
(
˙˙ 
$str
˙˙ *
,
˙˙* +
Approved
˙˙, 4
)
˙˙4 5
;
˙˙5 6
ans
˚˚ 
.
˚˚ 
Add
˚˚ 
(
˚˚ 
$str
˚˚ *
,
˚˚* +
Rejected
˚˚, 4
)
˚˚4 5
;
˚˚5 6
ans
¸¸ 
.
¸¸ 
Add
¸¸ 
(
¸¸ 
$str
¸¸ )
,
¸¸) *
Waiting
¸¸+ 2
)
¸¸2 3
;
¸¸3 4
ans
˝˝ 
.
˝˝ 
Add
˝˝ 
(
˝˝ 
$str
˝˝ '
,
˝˝' (
total
˝˝) .
)
˝˝. /
;
˝˝/ 0
return
˛˛ 
ans
˛˛ 
;
˛˛ 
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
	exception
ÅÅ &
)
ÅÅ& '
{
ÇÇ 
_logger
ÉÉ 
.
ÉÉ 
LogError
ÉÉ  
(
ÉÉ  !
$"
ÉÉ! #
$str
ÉÉ# D
{
ÉÉD E
	exception
ÉÉE N
.
ÉÉN O
Message
ÉÉO V
}
ÉÉV W
$str
ÉÉW Y
{
ÉÉY Z
	exception
ÉÉZ c
.
ÉÉc d

StackTrace
ÉÉd n
}
ÉÉn o
"
ÉÉo p
)
ÉÉp q
;
ÉÉq r
throw
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
}
àà 
}ãã ˝
dC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\ProfileStatusAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

class (
ProfileStatusDataAccessLayer -
:- .)
IProfileStatusDataAccessLayer. K
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private 
readonly 
ILogger 
<  (
ProfileStatusDataAccessLayer  <
>< =
_logger> E
=F G
defaultH O
!O P
;P Q
public

	 
List

 
<

 
ProfileStatus

 "
>

" #
GetProfileStatuss

$ 5
(

5 6
)

6 7
{ 	
try 
{ 
return 
_db 
. 
ProfileStatuss )
!) *
.* +
ToList+ 1
(1 2
)2 3
;3 4
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
}!! 
}"" 	
}&& 
}'' Ó
eC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\TechnologyDataAccessLayer.cs
	namespace 	
PMS_API
 
{ 
public 

class %
TechnologyDataAccessLayer *
:* +&
ITechnologyDataAccessLayer+ E
{ 
private 
readonly 
Context 
_db  #
=$ % 
DbContextDataFactory& :
.: ;
GetDbContextObject; M
(M N
)N O
;O P
private 
readonly 
ILogger 
<  %
TechnologyDataAccessLayer  9
>9 :
_logger; B
=C D
defaultE L
!L M
;M N
public			 
List		 
<		 

Technology		 
>		  
GetTechnologies		! 0
(		0 1
)		1 2
{

 	
try 
{ 
return 
_db 
. 
Technologies '
!' (
.( )
ToList) /
(/ 0
)0 1
;1 2
} 
catch 
( 
DbUpdateException $
ex% '
)' (
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new 
DbUpdateException +
(+ ,
), -
;- .
} 
catch 
( &
OperationCanceledException -
ex. 0
)0 1
{ 
_logger 
. 
LogInformation (
(( )
$") +
{+ ,
ex, .
.. /
Message/ 6
}6 7
$str7 :
{: ;
ex; =
.= >

StackTrace> H
}H I
"I J
)J K
;K L
throw 
new &
OperationCanceledException 4
(4 5
)5 6
;6 7
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
}   
}!! 	
}%% 
}&& °‘
TC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\DataAccessLayer\UserData.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
	IUserData 
{		 
bool

 
AddUser

 
(

 
User

 
item

 
)

 
;

  
bool 
Disable 
( 
int 
id 
) 
; 
List 
< 
User 
> 
GetallUsers 
( 
)  
;  !
User 
GetUser 
( 
int 
id 
) 
; 
bool 
save 
( 
) 
; 
bool 

UpdateUser 
( 
User 
item !
)! "
;" #
User 
LoginCrendentials 
( 
string %
UserName& .
,. /
string0 6
Password7 ?
)? @
;@ A
bool 
EditPassword 
( 
string  
OldPassword! ,
,, -
string. 4
NewPassword5 @
,@ A
stringB H
ConfirmPasswordI X
,X Y
intZ ]
currentUser^ i
)i j
;j k
} 
public 

class 
UserData 
: 
	IUserData %
{ 
private 
readonly 
Context  
_context! )
;) *
private 
readonly 
ILogger  
<  !
UserServices! -
>- .
_logger/ 6
;6 7
public 
UserData 
( 
Context 
context  '
,' (
ILogger) 0
<0 1
UserServices1 =
>= >
logger? E
)E F
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
} 	
private 
readonly 
UserValidation '
_validation( 3
=4 5
UserDataFactory6 E
.E F
GetValidationObjectF Y
(Y Z
)Z [
;[ \
public 
List 
< 
User 
> 
GetallForCard '
(' (
int( +
profileStatusId, ;
,; <
int= @
designationIdA N
)N O
{   	
try!! 
{"" 
return## 
_context## 
.##  
users##  %
!##% &
.##& '
Include##' .
(##. /
user##/ 3
=>##4 6
user##7 ;
.##; <
designation##< G
)##G H
.##H I
Include##I P
(##P Q
user##Q U
=>##V X
user##Y ]
.##] ^
profile##^ e
)##e f
.##f g
Include##g n
(##n o
user##o s
=>##t v
user##w {
.##{ |
profile	##| É
!
##É Ñ
.
##Ñ Ö
profilestatus
##Ö í
)
##í ì
.
##ì î
Include
##î õ
(
##õ ú
user
##ú †
=>
##° £
user
##§ ®
.
##® ©
personalDetails
##© ∏
)
##∏ π
.
##π ∫
Where
##∫ ø
(
##ø ¿
user
##¿ ƒ
=>
##≈ «
user
##» Ã
.
##Ã Õ
profile
##Õ ‘
!=
##’ ◊
null
##ÿ ‹
)
##‹ ›
.
##› ﬁ
WhereIf
##ﬁ Â
(
##Â Ê
profileStatusId
##Ê ı
!=
##ˆ ¯
$num
##˘ ˙
,
##˙ ˚
user
##¸ Ä
=>
##Å É
user
##Ñ à
.
##à â
profile
##â ê
!
##ê ë
.
##ë í
ProfileStatusId
##í °
==
##¢ §
profileStatusId
##• ¥
)
##¥ µ
.
##µ ∂
WhereIf
##∂ Ω
(
##Ω æ
designationId
##æ À
!=
##Ã Œ
$num
##œ –
,
##– —
user
##“ ÷
=>
##◊ Ÿ
user
##⁄ ﬁ
.
##ﬁ ﬂ
DesignationId
##ﬂ Ï
>
##Ì Ó
designationId
##Ô ¸
)
##¸ ˝
.
##˝ ˛
ToList
##˛ Ñ
(
##Ñ Ö
)
##Ö Ü
;
##Ü á
}$$ 
catch&& 
(&& 
	Exception&& 
	exception&& &
)&&& '
{'' 
_logger(( 
.(( 
LogError((  
(((  !
$"((! #
$str((# <
{((< =
	exception((= F
.((F G
Message((G N
}((N O
"((O P
)((P Q
;((Q R
_logger)) 
.)) 
LogInformation)) &
())& '
$"))' )
$str))) B
{))B C
	exception))C L
.))L M

StackTrace))M W
}))W X
"))X Y
)))Y Z
;))Z [
throw** 
;** 
}++ 
},, 	
public-- 
List-- 
<-- 
User-- 
>-- 
GetallUsers-- %
(--% &
)--& '
{.. 	
try// 
{00 
return11 
_context11 
.11  
users11  %
!11% &
.11& '
Include11' .
(11. /
user11/ 3
=>114 6
user117 ;
.11; <
gender11< B
)11B C
.11C D
Include11D K
(11K L
user11L P
=>11Q S
user11T X
.11X Y
designation11Y d
)11d e
.11e f
Include11f m
(11m n
user11n r
=>11s u
user11v z
.11z {
organisation	11{ á
)
11á à
.
11à â
Include
11â ê
(
11ê ë
user
11ë ï
=>
11ñ ò
user
11ô ù
.
11ù û
countrycode
11û ©
)
11© ™
.
11™ ´
ToList
11´ ±
(
11± ≤
)
11≤ ≥
;
11≥ ¥
}22 
catch44 
(44 
	Exception44 
	exception44 &
)44& '
{55 
_logger66 
.66 
LogError66  
(66  !
$"66! #
$str66# :
{66: ;
	exception66; D
.66D E
Message66E L
}66L M
"66M N
)66N O
;66O P
_logger77 
.77 
LogInformation77 &
(77& '
$"77' )
$str77) @
{77@ A
	exception77A J
.77J K

StackTrace77K U
}77U V
"77V W
)77W X
;77X Y
throw88 
;88 
}99 
}:: 	
public;; 
User;; 
GetUser;; 
(;; 
int;; 
id;;  "
);;" #
{<< 	
if== 
(== 
id== 
<=== 
$num== 
)== 
throw?? 
new?? 
ValidationException?? -
(??- .
$str??. N
)??N O
;??O P
tryAA 
{BB 
UserCC 
userCC 
=CC 
GetallUsersCC '
(CC' (
)CC( )
.CC) *
FirstCC* /
(CC/ 0
xCC0 1
=>CC2 4
xCC5 6
.CC6 7
UserIdCC7 =
==CC> @
idCCA C
)CCC D
;CCD E
ifDD 
(DD 
userDD 
==DD 
nullDD  
)DD  !
throwDD" '
newDD( +!
ArgumentNullExceptionDD, A
(DDA B
$"DDB D
$strDDD Q
{DDQ R
idDDR T
}DDT U
"DDU V
)DDV W
;DDW X
returnEE 
userEE 
;EE 
}FF 
catchGG 
(GG 
	ExceptionGG 
	exceptionGG &
)GG& '
{HH 
_loggerII 
.II 
LogErrorII  
(II  !
$"II! #
$strII# 6
{II6 7
	exceptionII7 @
.II@ A
MessageIIA H
}IIH I
"III J
)IIJ K
;IIK L
_loggerJJ 
.JJ 
LogInformationJJ &
(JJ& '
$"JJ' )
$strJJ) <
{JJ< =
	exceptionJJ= F
.JJF G

StackTraceJJG Q
}JJQ R
"JJR S
)JJS T
;JJT U
throwKK 
;KK 
}LL 
}MM 	
publicNN 
boolNN 
AddUserNN 
(NN 
UserNN  
itemNN! %
)NN% &
{OO 	
ifPP 
(PP 
itemPP 
==PP 
nullPP 
)PP 
throwQQ 
newQQ 
ArgumentExceptionQQ +
(QQ+ ,
$strQQ, P
)QQP Q
;QQQ R
_validationRR 
.RR 
userValidateRR $
(RR$ %
itemRR% )
)RR) *
;RR* +
ifSS 
(SS 
stringSS 
.SS 
IsNullOrEmptySS $
(SS$ %
itemSS% )
.SS) *
UserNameSS* 2
)SS2 3
)SS3 4
throwTT 
newTT 
ValidationExceptionTT -
(TT- .
$"TT. 0
$strTT0 c
{TTc d
itemTTd h
.TTh i
UserNameTTi q
}TTq r
"TTr s
)TTs t
;TTt u
tryUU 
{VV 
itemXX 
.XX 
PasswordXX 
=XX 
HashPasswordXX  ,
.XX, -
Sha256XX- 3
(XX3 4
itemXX4 8
.XX8 9
PasswordXX9 A
!XXA B
)XXB C
;XXC D
_contextYY 
.YY 
usersYY 
!YY 
.YY  
AddYY  #
(YY# $
itemYY$ (
)YY( )
;YY) *
_contextZZ 
.ZZ 
SaveChangesZZ $
(ZZ$ %
)ZZ% &
;ZZ& '
return[[ 
true[[ 
;[[ 
}\\ 
catch^^ 
(^^ 
	Exception^^ 
	exception^^ &
)^^& '
{__ 
_logger`` 
.`` 
LogError``  
(``  !
$"``! #
$str``# 6
{``6 7
	exception``7 @
.``@ A
Message``A H
}``H I
"``I J
)``J K
;``K L
_loggeraa 
.aa 
LogInformationaa &
(aa& '
$"aa' )
$straa) <
{aa< =
	exceptionaa= F
.aaF G

StackTraceaaG Q
}aaQ R
"aaR S
)aaS T
;aaT U
returnbb 
falsebb 
;bb 
}cc 
}gg 	
publichh 
boolhh 
Disablehh 
(hh 
inthh 
idhh  "
)hh" #
{ii 	
ifjj 
(jj 
idjj 
<=jj 
$numjj 
)jj 
throwll 
newll 
ValidationExceptionll -
(ll- .
$strll. N
)llN O
;llO P
trynn 
{oo 
varpp 
userpp 
=pp 
_contextpp #
.pp# $
userspp$ )
!pp) *
.pp* +
Findpp+ /
(pp/ 0
idpp0 2
)pp2 3
;pp3 4
ifqq 
(qq 
userqq 
==qq 
nullqq  
)qq  !
throwqq" '
newqq( +!
ArgumentNullExceptionqq, A
(qqA B
$"qqB D
$strqqD U
{qqU V
idqqV X
}qqX Y
"qqY Z
)qqZ [
;qq[ \
userrr 
.rr 
IsActiverr 
=rr 
falserr  %
;rr% &
_contextss 
.ss 
usersss 
.ss 
Updatess %
(ss% &
userss& *
)ss* +
;ss+ ,
_contexttt 
.tt 
SaveChangestt $
(tt$ %
)tt% &
;tt& '
returnuu 
trueuu 
;uu 
}ww 
catchzz 
(zz 
	Exceptionzz 
	exceptionzz &
)zz& '
{{{ 
_logger}} 
.}} 
LogError}}  
(}}  !
$"}}! #
$str}}# 6
{}}6 7
	exception}}7 @
.}}@ A
Message}}A H
}}}H I
"}}I J
)}}J K
;}}K L
_logger~~ 
.~~ 
LogInformation~~ &
(~~& '
$"~~' )
$str~~) <
{~~< =
	exception~~= F
.~~F G

StackTrace~~G Q
}~~Q R
"~~R S
)~~S T
;~~T U
return 
false 
; 
}
ÄÄ 
}
ÖÖ 	
public
ÜÜ 
bool
ÜÜ 

UpdateUser
ÜÜ 
(
ÜÜ 
User
ÜÜ #
item
ÜÜ$ (
)
ÜÜ( )
{
áá 	
if
ââ 
(
ââ 
item
ââ 
==
ââ 
null
ââ 
)
ââ 
throw
ää 
new
ää !
ValidationException
ää -
(
ää- .
$str
ää. R
)
ääR S
;
ääS T
_validation
ãã 
.
ãã 
userValidate
ãã $
(
ãã$ %
item
ãã% )
)
ãã) *
;
ãã* +
try
çç 
{
éé 
var
èè 
user
èè 
=
èè 
_context
èè #
.
èè# $
users
èè$ )
!
èè) *
.
èè* +
Find
èè+ /
(
èè/ 0
item
èè0 4
.
èè4 5
UserId
èè5 ;
)
èè; <
;
èè< =
if
êê 
(
êê 
user
êê 
==
êê 
null
êê  
)
êê  !
throw
êê" '
new
êê( +#
ArgumentNullException
êê, A
(
êêA B
$"
êêB D
$str
êêD U
{
êêU V
item
êêV Z
.
êêZ [
UserId
êê[ a
}
êêa b
"
êêb c
)
êêc d
;
êêd e
user
ëë 
.
ëë 
UserId
ëë 
=
ëë 
item
ëë "
.
ëë" #
UserId
ëë# )
;
ëë) *
user
íí 
.
íí 
Name
íí 
=
íí 
item
íí  
.
íí  !
Name
íí! %
;
íí% &
user
ìì 
.
ìì 
Email
ìì 
=
ìì 
item
ìì !
.
ìì! "
Email
ìì" '
;
ìì' (
user
îî 
.
îî 
UserName
îî 
=
îî 
item
îî  $
.
îî$ %
UserName
îî% -
;
îî- .
user
ïï 
.
ïï 
Password
ïï 
=
ïï 
item
ïï  $
.
ïï$ %
Password
ïï% -
;
ïï- .
user
ññ 
.
ññ 
GenderId
ññ 
=
ññ 
item
ññ  $
.
ññ$ %
GenderId
ññ% -
;
ññ- .
user
óó 
.
óó 
CountryCodeId
óó "
=
óó# $
item
óó% )
.
óó) *
CountryCodeId
óó* 7
;
óó7 8
user
òò 
.
òò 
MobileNumber
òò !
=
òò" #
item
òò$ (
.
òò( )
MobileNumber
òò) 5
;
òò5 6
user
ôô 
.
ôô 
OrganisationId
ôô #
=
ôô$ %
item
ôô& *
.
ôô* +
OrganisationId
ôô+ 9
;
ôô9 :
user
öö 
.
öö 
DesignationId
öö "
=
öö# $
item
öö% )
.
öö) *
DesignationId
öö* 7
;
öö7 8
user
õõ 
.
õõ %
ReportingPersonUsername
õõ ,
=
õõ- .
item
õõ/ 3
.
õõ3 4%
ReportingPersonUsername
õõ4 K
;
õõK L
user
úú 
.
úú 
IsActive
úú 
=
úú 
true
úú  $
;
úú$ %
user
ùù 
.
ùù 
	CreatedBy
ùù 
=
ùù  
item
ùù! %
.
ùù% &
	CreatedBy
ùù& /
;
ùù/ 0
_context
ûû 
.
ûû 
users
ûû 
.
ûû 
Update
ûû %
(
ûû% &
user
ûû& *
)
ûû* +
;
ûû+ ,
_context
üü 
.
üü 
SaveChanges
üü $
(
üü$ %
)
üü% &
;
üü& '
return
†† 
true
†† 
;
†† 
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
	exception
¢¢ &
)
¢¢& '
{
££ 
_logger
•• 
.
•• 
LogError
••  
(
••  !
$"
••! #
$str
••# 9
{
••9 :
	exception
••: C
.
••C D
Message
••D K
}
••K L
"
••L M
)
••M N
;
••N O
_logger
¶¶ 
.
¶¶ 
LogInformation
¶¶ &
(
¶¶& '
$"
¶¶' )
$str
¶¶) ?
{
¶¶? @
	exception
¶¶@ I
.
¶¶I J

StackTrace
¶¶J T
}
¶¶T U
"
¶¶U V
)
¶¶V W
;
¶¶W X
return
ßß 
false
ßß 
;
ßß 
}
®® 
}
¨¨ 	
public
≠≠ 
bool
≠≠ 
save
≠≠ 
(
≠≠ 
)
≠≠ 
{
ÆÆ 	
return
ØØ 
_context
ØØ 
.
ØØ 
SaveChanges
ØØ '
(
ØØ' (
)
ØØ( )
>=
ØØ* ,
$num
ØØ- .
;
ØØ. /
}
∞∞ 	
public
±± 
User
±± 
LoginCrendentials
±± %
(
±±% &
string
±±& ,
UserName
±±- 5
,
±±5 6
string
±±7 =
Password
±±> F
)
±±F G
{
≤≤ 	
try
≥≥ 
{
¥¥ 
if
µµ 
(
µµ 
!
µµ 
_context
µµ 
.
µµ 
users
µµ #
!
µµ# $
.
µµ$ %
Any
µµ% (
(
µµ( )
x
µµ) *
=>
µµ+ -
x
µµ. /
.
µµ/ 0
UserName
µµ0 8
==
µµ9 ;
UserName
µµ< D
)
µµD E
)
µµE F
throw
∂∂ 
new
∂∂ !
ValidationException
∂∂ 1
(
∂∂1 2
$"
∂∂2 4
$str
∂∂4 D
{
∂∂D E
UserName
∂∂E M
}
∂∂M N
"
∂∂N O
)
∂∂O P
;
∂∂P Q
if
∏∏ 
(
∏∏ 
_context
∏∏ 
.
∏∏ 
users
∏∏ "
!
∏∏" #
.
∏∏# $
Any
∏∏$ '
(
∏∏' (
x
∏∏( )
=>
∏∏* ,
x
∏∏- .
.
∏∏. /
UserName
∏∏/ 7
==
∏∏8 :
UserName
∏∏; C
&&
∏∏D F
x
∏∏G H
.
∏∏H I
Password
∏∏I Q
==
∏∏R T
HashPassword
∏∏U a
.
∏∏a b
Sha256
∏∏b h
(
∏∏h i
Password
∏∏i q
)
∏∏q r
)
∏∏r s
)
∏∏s t
throw
ππ 
new
ππ !
ValidationException
ππ 1
(
ππ1 2
$"
ππ2 4
$str
ππ4 C
"
ππC D
)
ππD E
;
ππE F
var
ªª 
user
ªª 
=
ªª 
GetallUsers
ªª &
(
ªª& '
)
ªª' (
.
ªª( )
First
ªª) .
(
ªª. /
user
ªª/ 3
=>
ªª4 6
user
ªª7 ;
.
ªª; <
UserName
ªª< D
==
ªªE G
UserName
ªªH P
)
ªªP Q
;
ªªQ R
return
ºº 
user
ºº 
;
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
	exception
ææ &
)
ææ& '
{
øø 
_logger
¿¿ 
.
¿¿ 
LogInformation
¿¿ &
(
¿¿& '
$"
¿¿' )
$str
¿¿) w
{
¿¿w x
	exception¿¿x Å
.¿¿Å Ç
Message¿¿Ç â
}¿¿â ä
"¿¿ä ã
)¿¿ã å
;¿¿å ç
throw
¡¡ 
;
¡¡ 
}
¬¬ 
}
√√ 	
public
ƒƒ 
bool
ƒƒ 
EditPassword
ƒƒ  
(
ƒƒ  !
string
ƒƒ! '
OldPassword
ƒƒ( 3
,
ƒƒ3 4
string
ƒƒ5 ;
NewPassword
ƒƒ< G
,
ƒƒG H
string
ƒƒI O
ConfirmPassword
ƒƒP _
,
ƒƒ_ `
int
ƒƒa d
currentUser
ƒƒe p
)
ƒƒp q
{
≈≈ 	 
PasswordValidation
∆∆ 
.
∆∆ 
IsValidPassword
∆∆ .
(
∆∆. /
NewPassword
∆∆/ :
,
∆∆: ;
ConfirmPassword
∆∆< K
)
∆∆K L
;
∆∆L M
try
«« 
{
»» 
var
   
edit
   
=
   
_context
   #
.
  # $
users
  $ )
!
  ) *
.
  * +
Find
  + /
(
  / 0
currentUser
  0 ;
)
  ; <
;
  < =
var
ÀÀ 
pass
ÀÀ 
=
ÀÀ 
HashPassword
ÀÀ '
.
ÀÀ' (
Sha256
ÀÀ( .
(
ÀÀ. /
OldPassword
ÀÀ/ :
)
ÀÀ: ;
;
ÀÀ; <
if
ÃÃ 
(
ÃÃ 
edit
ÃÃ 
==
ÃÃ 
null
ÃÃ  
)
ÃÃ  !
throw
ÕÕ 
new
ÕÕ !
ValidationException
ÕÕ 1
(
ÕÕ1 2
$str
ÕÕ2 \
)
ÕÕ\ ]
;
ÕÕ] ^
else
ŒŒ 
if
ŒŒ 
(
ŒŒ 
edit
ŒŒ 
.
ŒŒ 
IsActive
ŒŒ &
==
ŒŒ' )
false
ŒŒ* /
)
ŒŒ/ 0
throw
œœ 
new
œœ !
ValidationException
œœ 1
(
œœ1 2
$str
œœ2 r
)
œœr s
;
œœs t
else
–– 
if
–– 
(
–– 
edit
–– 
.
–– 
Password
–– &
!=
––' )
pass
––* .
)
––. /
throw
—— 
new
—— !
ValidationException
—— 1
(
——1 2
$str
——2 W
)
——W X
;
——X Y
else
““ 
if
““ 
(
““ 
NewPassword
““ $
==
““% '
edit
““( ,
.
““, -
Password
““- 5
)
““5 6
throw
”” 
new
”” !
ValidationException
”” 1
(
””1 2
$str
””2 q
)
””q r
;
””r s
edit
‘‘ 
.
‘‘ 
Password
‘‘ 
=
‘‘ 
HashPassword
‘‘  ,
.
‘‘, -
Sha256
‘‘- 3
(
‘‘3 4
NewPassword
‘‘4 ?
)
‘‘? @
;
‘‘@ A
_context
’’ 
.
’’ 
users
’’ 
.
’’ 
Update
’’ %
(
’’% &
edit
’’& *
)
’’* +
;
’’+ ,
_context
÷÷ 
.
÷÷ 
SaveChanges
÷÷ $
(
÷÷$ %
)
÷÷% &
;
÷÷& '
return
◊◊ 
true
◊◊ 
;
◊◊ 
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
DbUpdateException
⁄⁄ $
	exception
⁄⁄% .
)
⁄⁄. /
{
€€ 
_logger
‹‹ 
.
‹‹ 
LogInformation
‹‹ &
(
‹‹& '
$"
‹‹' )
$str‹‹) ë
{‹‹ë í
	exception‹‹í õ
.‹‹õ ú
Message‹‹ú £
}‹‹£ §
"‹‹§ •
)‹‹• ¶
;‹‹¶ ß
return
›› 
false
›› 
;
›› 
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ (
OperationCanceledException
ﬂﬂ -
	exception
ﬂﬂ. 7
)
ﬂﬂ7 8
{
‡‡ 
_logger
·· 
.
·· 
LogInformation
·· &
(
··& '
$"
··' )
$str··) ë
{··ë í
	exception··í õ
.··õ ú
Message··ú £
}··£ §
"··§ •
)··• ¶
;··¶ ß
return
‚‚ 
false
‚‚ 
;
‚‚ 
}
„„ 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
	exception
ÈÈ &
)
ÈÈ& '
{
ÍÍ 
_logger
ÎÎ 
.
ÎÎ 
LogInformation
ÎÎ &
(
ÎÎ& '
$"
ÎÎ' )
$strÎÎ) ë
{ÎÎë í
	exceptionÎÎí õ
.ÎÎõ ú
MessageÎÎú £
}ÎÎ£ §
"ÎÎ§ •
)ÎÎ• ¶
;ÎÎ¶ ß
return
ÌÌ 
false
ÌÌ 
;
ÌÌ 
}
ÓÓ 
}
ÒÒ 	
public
ÚÚ 
List
ÚÚ 
<
ÚÚ 
User
ÚÚ 
>
ÚÚ &
GetAllUsersByDesignation
ÚÚ 2
(
ÚÚ2 3
int
ÚÚ3 6
designationId
ÚÚ7 D
)
ÚÚD E
{
ÛÛ 	
try
ÙÙ 
{
ıı 
return
ˆˆ 
_context
ˆˆ 
.
ˆˆ  
users
ˆˆ  %
!
ˆˆ% &
.
ˆˆ& '
Include
ˆˆ' .
(
ˆˆ. /
user
ˆˆ/ 3
=>
ˆˆ4 6
user
ˆˆ7 ;
.
ˆˆ; <
designation
ˆˆ< G
)
ˆˆG H
.
ˆˆH I
Include
ˆˆI P
(
ˆˆP Q
user
ˆˆQ U
=>
ˆˆV X
user
ˆˆY ]
.
ˆˆ] ^
profile
ˆˆ^ e
)
ˆˆe f
.
ˆˆf g
Include
ˆˆg n
(
ˆˆn o
user
ˆˆo s
=>
ˆˆt v
user
ˆˆw {
.
ˆˆ{ |
profileˆˆ| É
!ˆˆÉ Ñ
.ˆˆÑ Ö
profilestatusˆˆÖ í
)ˆˆí ì
.ˆˆì î
Includeˆˆî õ
(ˆˆõ ú
userˆˆú †
=>ˆˆ° £
userˆˆ§ ®
.ˆˆ® ©
personalDetailsˆˆ© ∏
)ˆˆ∏ π
.ˆˆπ ∫
Whereˆˆ∫ ø
(ˆˆø ¿
userˆˆ¿ ƒ
=>ˆˆ≈ «
userˆˆ» Ã
.ˆˆÃ Õ
profileˆˆÕ ‘
!=ˆˆ’ ◊
nullˆˆÿ ‹
)ˆˆ‹ ›
.ˆˆ› ﬁ
WhereIfˆˆﬁ Â
(ˆˆÂ Ê
designationIdˆˆÊ Û
!=ˆˆÙ ˆ
$numˆˆ˜ ¯
,ˆˆ¯ ˘
userˆˆ˙ ˛
=>ˆˆˇ Å
userˆˆÇ Ü
.ˆˆÜ á
DesignationIdˆˆá î
>ˆˆï ñ
designationIdˆˆó §
)ˆˆ§ •
.ˆˆ• ¶
ToListˆˆ¶ ¨
(ˆˆ¨ ≠
)ˆˆ≠ Æ
;ˆˆÆ Ø
}
˜˜ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
	exception
˘˘ &
)
˘˘& '
{
˙˙ 
_logger
˚˚ 
.
˚˚ 
LogError
˚˚  
(
˚˚  !
$"
˚˚! #
$str
˚˚# G
{
˚˚G H
	exception
˚˚H Q
.
˚˚Q R
Message
˚˚R Y
}
˚˚Y Z
"
˚˚Z [
)
˚˚[ \
;
˚˚\ ]
_logger
¸¸ 
.
¸¸ 
LogInformation
¸¸ &
(
¸¸& '
$"
¸¸' )
$str
¸¸) M
{
¸¸M N
	exception
¸¸N W
.
¸¸W X

StackTrace
¸¸X b
}
¸¸b c
"
¸¸c d
)
¸¸d e
;
¸¸e f
throw
˝˝ 
;
˝˝ 
}
˛˛ 
}
ˇˇ 	
}
ÄÄ 
}ÅÅ ◊
VC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\CollegeDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
CollegeDataFactory *
{ 
public 
static #
ICollegeDataAccessLayer -+
GetCollegeDataAccessLayerObject. M
(M N
)N O
{ 	
return 
new "
CollegeDataAccessLayer -
(- .
). /
;/ 0
}		 	
public	 
static 
College 
GetCollegeObject /
(/ 0
)0 1
{ 	
return 
new 
College 
( 
)  
;  !
} 	
public 
static 
ICollegeServices %#
GetCollegeServiceObject& =
(= >
)> ?
{ 	
return 
new 
CollegeServices "
(" #
)# $
;$ %
} 	
} 
} ô
XC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\DbContextDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class  
DbContextDataFactory ,
{, -
public 
static 
Context 
GetDbContextObject 0
(0 1
)1 2
{ 	
return 
new 
Context 
( 
)  
;  !
} 	
} 
} É	
ZC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\DesignationDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class "
DesignationDataFactory .
{ 
public 
static '
IDesignationDataAccessLayer 1/
#GetDesignationDataAccessLayerObject2 U
(U V
)V W
{ 	
return 
new &
DesignationDataAccessLayer 1
(1 2
)2 3
;3 4
}		 	
public	 
static 
Designation " 
GetDesignationObject# 7
(7 8
)8 9
{ 	
return 
new 
Designation "
(" #
)# $
;$ %
} 	
public 
static  
IDesignationServices )'
GetDesignationServiceObject* E
(E F
)F G
{ 	
return 
new 
DesignationServices &
(& '
)' (
;( )
} 	
} 
} Ã
UC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\DomainDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
DomainDataFactory )
{ 
public 
static "
IDomainDataAccessLayer ,*
GetDomainDataAccessLayerObject- K
(K L
)L M
{ 	
return		 
new		 !
DomainDataAccessLayer		 ,
(		, -
)		- .
;		. /
}

 	
public	 
static 
Domain 
GetDomainObject -
(- .
). /
{ 	
return 
new 
Domain 
( 
) 
;  
} 	
public 
static 
IDomainServices $"
GetDomainServiceObject% ;
(; <
)< =
{ 	
return 
new 
DomainServices !
(! "
)" #
;# $
} 	
} 
} õ
SC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\MailDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
MailDataFactory '
{ 
public 
static 
MailRequest ! 
GetMailRequestObject" 6
(6 7
)7 8
{ 	
return 
new 
MailRequest "
(" #
)# $
;$ %
}		 	
}

 
} é	
[C:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\OrganisationDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class #
OrganisationDataFactory /
{ 
public 
static (
IOrganisationDataAccessLayer 20
$GetOrganisationDataAccessLayerObject3 W
(W X
)X Y
{ 	
return 
new '
OrganisationDataAccessLayer 2
(2 3
)3 4
;4 5
} 	
public			 
static		 
Organisation		 #!
GetOrganisationObject		$ 9
(		9 :
)		: ;
{

 	
return 
new 
Organisation #
(# $
)$ %
;% &
} 	
public 
static !
IOrganisationServices *(
GetOrganisationServiceObject+ G
(G H
)H I
{ 	
return 
new  
OrganisationServices '
(' (
)( )
;) *
} 	
} 
} ˆ	
VC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\ProfileDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
ProfileDataFactory *
{ 
public 
static 
Context 
GetProfileContext /
(/ 0
)0 1
{ 	
return 
new 
Context 
( 
)  
;  !
} 	
public		 
static		 
ProfileData		 !
GetProfileData		" 0
(		0 1
ILogger		1 8
<		8 9
ProfileService		9 G
>		G H
logger		I O
)		O P
{

 	
return 
new 
ProfileData "
(" #
GetProfileContext# 4
(4 5
)5 6
,6 7
logger7 =
)= >
;> ?
} 	
public 
static 
ProfileValidation '%
GetProfileVaidationObject( A
(A B
)B C
{ 	
return 
new 
ProfileValidation (
(( )
)) *
;* +
} 	
} 
} ï	
XC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\ProfileStatusFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class $
ProfileStatusDataFactory 0
{ 
public 
static )
IProfileStatusDataAccessLayer 31
%GetProfileStatusDataAccessLayerObject4 Y
(Y Z
)Z [
{ 	
return 
new (
ProfileStatusDataAccessLayer 3
(3 4
)4 5
;5 6
}		 	
public	 
static 
ProfileStatus $"
GetProfileStatusObject% ;
(; <
)< =
{ 	
return 
new 
ProfileStatus $
($ %
)% &
;& '
} 	
public 
static "
IProfileStatusServices +)
GetProfileStatusServiceObject, I
(I J
)J K
{ 	
return 
new !
ProfileStatusServices (
(( )
)) *
;* +
} 	
} 
} ¯
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\TechnologyDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class !
TechnologyDataFactory -
{ 
public 
static &
ITechnologyDataAccessLayer 0.
"GetTechnologyDataAccessLayerObject1 S
(S T
)T U
{ 	
return 
new %
TechnologyDataAccessLayer 0
(0 1
)1 2
;2 3
} 	
public			 
static		 

Technology		 !
GetTechnologyObject		" 5
(		5 6
)		6 7
{

 	
return 
new 

Technology !
(! "
)" #
;# $
} 	
public 
static 
ITechnologyServices (&
GetTechnologyServiceObject) C
(C D
)D E
{ 	
return 
new 
TechnologyServices %
(% &
)& '
;' (
} 	
} 
} œ
SC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Factory\UserDataFactory.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
UserDataFactory '
{' (
public 
static 
Context 
Getusercontext ,
(, -
)- .
{. /
return 
new 
Context 
( 
)  
;  !
} 	
public 
static 
UserData 
GetUserObject ,
(, -
ILogger- 4
<4 5
UserServices5 A
>A B
loggerC I
)I J
{J K
return 
new 
UserData 
(  
Getusercontext  .
(. /
)/ 0
,0 1
logger1 7
)7 8
;8 9
}		 	
public

 
static

 
User

 
GetUserModelObject

 -
(

- .
)

. /
{

/ 0
return 
new 
User 
( 
) 
; 
} 	
public 
static 
UserValidation $
GetValidationObject% 8
(8 9
)9 :
{: ;
return 
new 
UserValidation %
(% &
)& '
;' (
} 	
} 
} ≥“	
gC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Migrations\20220712184044_chitrarasu_July13.cs
	namespace 	
PMS_API
 
. 

Migrations 
{ 
public 

partial 
class 
chitrarasu_July13 *
:+ ,
	Migration- 6
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str '
,' (
columns 
: 
table 
=> !
new" %
{ 
AchievementTypeId %
=& '
table( -
.- .
Column. 4
<4 5
int5 8
>8 9
(9 :
type: >
:> ?
$str@ E
,E F
nullableG O
:O P
falseQ V
)V W
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
AchievementTypeName '
=( )
table* /
./ 0
Column0 6
<6 7
string7 =
>= >
(> ?
type? C
:C D
$strE T
,T U
nullableV ^
:^ _
false` e
)e f
,f g
IsActive 
= 
table $
.$ %
Column% +
<+ ,
bool, 0
>0 1
(1 2
type2 6
:6 7
$str8 =
,= >
nullable? G
:G H
falseI N
)N O
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 9
,9 :
x; <
=>= ?
x@ A
.A B
AchievementTypeIdB S
)S T
;T U
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str '
,' (
columns 
: 
table 
=> !
new" %
{ 
ChangePasswordId $
=% &
table' ,
., -
Column- 3
<3 4
int4 7
>7 8
(8 9
type9 =
:= >
$str? D
,D E
nullableF N
:N O
falseP U
)U V
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
NewPassword   
=    !
table  " '
.  ' (
Column  ( .
<  . /
string  / 5
>  5 6
(  6 7
type  7 ;
:  ; <
$str  = L
,  L M
nullable  N V
:  V W
false  X ]
)  ] ^
,  ^ _
ConfirmPassword!! #
=!!$ %
table!!& +
.!!+ ,
Column!!, 2
<!!2 3
string!!3 9
>!!9 :
(!!: ;
type!!; ?
:!!? @
$str!!A P
,!!P Q
nullable!!R Z
:!!Z [
false!!\ a
)!!a b
,!!b c
IsActive"" 
="" 
table"" $
.""$ %
Column""% +
<""+ ,
bool"", 0
>""0 1
(""1 2
type""2 6
:""6 7
$str""8 =
,""= >
nullable""? G
:""G H
false""I N
)""N O
}## 
,## 
constraints$$ 
:$$ 
table$$ "
=>$$# %
{%% 
table&& 
.&& 

PrimaryKey&& $
(&&$ %
$str&&% 9
,&&9 :
x&&; <
=>&&= ?
x&&@ A
.&&A B
ChangePasswordId&&B R
)&&R S
;&&S T
}'' 
)'' 
;'' 
migrationBuilder)) 
.)) 
CreateTable)) (
())( )
name** 
:** 
$str**  
,**  !
columns++ 
:++ 
table++ 
=>++ !
new++" %
{,, 
	CollegeId-- 
=-- 
table--  %
.--% &
Column--& ,
<--, -
int--- 0
>--0 1
(--1 2
type--2 6
:--6 7
$str--8 =
,--= >
nullable--? G
:--G H
false--I N
)--N O
... 

Annotation.. #
(..# $
$str..$ 8
,..8 9
$str..: @
)..@ A
,..A B
CollegeName// 
=//  !
table//" '
.//' (
Column//( .
<//. /
string/// 5
>//5 6
(//6 7
type//7 ;
://; <
$str//= K
,//K L
	maxLength//M V
://V W
$num//X Z
,//Z [
nullable//\ d
://d e
false//f k
)//k l
,//l m
IsActive00 
=00 
table00 $
.00$ %
Column00% +
<00+ ,
bool00, 0
>000 1
(001 2
type002 6
:006 7
$str008 =
,00= >
nullable00? G
:00G H
false00I N
)00N O
}11 
,11 
constraints22 
:22 
table22 "
=>22# %
{33 
table44 
.44 

PrimaryKey44 $
(44$ %
$str44% 2
,442 3
x444 5
=>446 8
x449 :
.44: ;
	CollegeId44; D
)44D E
;44E F
}55 
)55 
;55 
migrationBuilder77 
.77 
CreateTable77 (
(77( )
name88 
:88 
$str88 $
,88$ %
columns99 
:99 
table99 
=>99 !
new99" %
{:: 
CountryCodeId;; !
=;;" #
table;;$ )
.;;) *
Column;;* 0
<;;0 1
int;;1 4
>;;4 5
(;;5 6
type;;6 :
:;;: ;
$str;;< A
,;;A B
nullable;;C K
:;;K L
false;;M R
);;R S
.<< 

Annotation<< #
(<<# $
$str<<$ 8
,<<8 9
$str<<: @
)<<@ A
,<<A B
CountryCodeName== #
===$ %
table==& +
.==+ ,
Column==, 2
<==2 3
string==3 9
>==9 :
(==: ;
type==; ?
:==? @
$str==A P
,==P Q
nullable==R Z
:==Z [
false==\ a
)==a b
,==b c
IsActive>> 
=>> 
table>> $
.>>$ %
Column>>% +
<>>+ ,
bool>>, 0
>>>0 1
(>>1 2
type>>2 6
:>>6 7
$str>>8 =
,>>= >
nullable>>? G
:>>G H
false>>I N
)>>N O
}?? 
,?? 
constraints@@ 
:@@ 
table@@ "
=>@@# %
{AA 
tableBB 
.BB 

PrimaryKeyBB $
(BB$ %
$strBB% 6
,BB6 7
xBB8 9
=>BB: <
xBB= >
.BB> ?
CountryCodeIdBB? L
)BBL M
;BBM N
}CC 
)CC 
;CC 
migrationBuilderEE 
.EE 
CreateTableEE (
(EE( )
nameFF 
:FF 
$strFF $
,FF$ %
columnsGG 
:GG 
tableGG 
=>GG !
newGG" %
{HH 
DesignationIdII !
=II" #
tableII$ )
.II) *
ColumnII* 0
<II0 1
intII1 4
>II4 5
(II5 6
typeII6 :
:II: ;
$strII< A
,IIA B
nullableIIC K
:IIK L
falseIIM R
)IIR S
.JJ 

AnnotationJJ #
(JJ# $
$strJJ$ 8
,JJ8 9
$strJJ: @
)JJ@ A
,JJA B
DesignationNameKK #
=KK$ %
tableKK& +
.KK+ ,
ColumnKK, 2
<KK2 3
stringKK3 9
>KK9 :
(KK: ;
typeKK; ?
:KK? @
$strKKA O
,KKO P
	maxLengthKKQ Z
:KKZ [
$numKK\ ^
,KK^ _
nullableKK` h
:KKh i
falseKKj o
)KKo p
,KKp q
IsActiveLL 
=LL 
tableLL $
.LL$ %
ColumnLL% +
<LL+ ,
boolLL, 0
>LL0 1
(LL1 2
typeLL2 6
:LL6 7
$strLL8 =
,LL= >
nullableLL? G
:LLG H
falseLLI N
)LLN O
}MM 
,MM 
constraintsNN 
:NN 
tableNN "
=>NN# %
{OO 
tablePP 
.PP 

PrimaryKeyPP $
(PP$ %
$strPP% 6
,PP6 7
xPP8 9
=>PP: <
xPP= >
.PP> ?
DesignationIdPP? L
)PPL M
;PPM N
}QQ 
)QQ 
;QQ 
migrationBuilderSS 
.SS 
CreateTableSS (
(SS( )
nameTT 
:TT 
$strTT 
,TT  
columnsUU 
:UU 
tableUU 
=>UU !
newUU" %
{VV 
DomainIdWW 
=WW 
tableWW $
.WW$ %
ColumnWW% +
<WW+ ,
intWW, /
>WW/ 0
(WW0 1
typeWW1 5
:WW5 6
$strWW7 <
,WW< =
nullableWW> F
:WWF G
falseWWH M
)WWM N
.XX 

AnnotationXX #
(XX# $
$strXX$ 8
,XX8 9
$strXX: @
)XX@ A
,XXA B

DomainNameYY 
=YY  
tableYY! &
.YY& '
ColumnYY' -
<YY- .
stringYY. 4
>YY4 5
(YY5 6
typeYY6 :
:YY: ;
$strYY< J
,YYJ K
	maxLengthYYL U
:YYU V
$numYYW Y
,YYY Z
nullableYY[ c
:YYc d
falseYYe j
)YYj k
,YYk l
IsActiveZZ 
=ZZ 
tableZZ $
.ZZ$ %
ColumnZZ% +
<ZZ+ ,
boolZZ, 0
>ZZ0 1
(ZZ1 2
typeZZ2 6
:ZZ6 7
$strZZ8 =
,ZZ= >
nullableZZ? G
:ZZG H
falseZZI N
)ZZN O
}[[ 
,[[ 
constraints\\ 
:\\ 
table\\ "
=>\\# %
{]] 
table^^ 
.^^ 

PrimaryKey^^ $
(^^$ %
$str^^% 1
,^^1 2
x^^3 4
=>^^5 7
x^^8 9
.^^9 :
DomainId^^: B
)^^B C
;^^C D
}__ 
)__ 
;__ 
migrationBuilderaa 
.aa 
CreateTableaa (
(aa( )
namebb 
:bb 
$strbb 
,bb 
columnscc 
:cc 
tablecc 
=>cc !
newcc" %
{dd 
GenderIdee 
=ee 
tableee $
.ee$ %
Columnee% +
<ee+ ,
intee, /
>ee/ 0
(ee0 1
typeee1 5
:ee5 6
$stree7 <
,ee< =
nullableee> F
:eeF G
falseeeH M
)eeM N
.ff 

Annotationff #
(ff# $
$strff$ 8
,ff8 9
$strff: @
)ff@ A
,ffA B

GenderNamegg 
=gg  
tablegg! &
.gg& '
Columngg' -
<gg- .
stringgg. 4
>gg4 5
(gg5 6
typegg6 :
:gg: ;
$strgg< K
,ggK L
nullableggM U
:ggU V
falseggW \
)gg\ ]
,gg] ^
IsActivehh 
=hh 
tablehh $
.hh$ %
Columnhh% +
<hh+ ,
boolhh, 0
>hh0 1
(hh1 2
typehh2 6
:hh6 7
$strhh8 =
,hh= >
nullablehh? G
:hhG H
falsehhI N
)hhN O
}ii 
,ii 
constraintsjj 
:jj 
tablejj "
=>jj# %
{kk 
tablell 
.ll 

PrimaryKeyll $
(ll$ %
$strll% 0
,ll0 1
xll2 3
=>ll4 6
xll7 8
.ll8 9
GenderIdll9 A
)llA B
;llB C
}mm 
)mm 
;mm 
migrationBuilderoo 
.oo 
CreateTableoo (
(oo( )
namepp 
:pp 
$strpp %
,pp% &
columnsqq 
:qq 
tableqq 
=>qq !
newqq" %
{rr 
OrganisationIdss "
=ss# $
tabless% *
.ss* +
Columnss+ 1
<ss1 2
intss2 5
>ss5 6
(ss6 7
typess7 ;
:ss; <
$strss= B
,ssB C
nullablessD L
:ssL M
falsessN S
)ssS T
.tt 

Annotationtt #
(tt# $
$strtt$ 8
,tt8 9
$strtt: @
)tt@ A
,ttA B
OrganisationNameuu $
=uu% &
tableuu' ,
.uu, -
Columnuu- 3
<uu3 4
stringuu4 :
>uu: ;
(uu; <
typeuu< @
:uu@ A
$struuB Q
,uuQ R
nullableuuS [
:uu[ \
falseuu] b
)uub c
,uuc d
IsActivevv 
=vv 
tablevv $
.vv$ %
Columnvv% +
<vv+ ,
boolvv, 0
>vv0 1
(vv1 2
typevv2 6
:vv6 7
$strvv8 =
,vv= >
nullablevv? G
:vvG H
falsevvI N
)vvN O
}ww 
,ww 
constraintsxx 
:xx 
tablexx "
=>xx# %
{yy 
tablezz 
.zz 

PrimaryKeyzz $
(zz$ %
$strzz% 7
,zz7 8
xzz9 :
=>zz; =
xzz> ?
.zz? @
OrganisationIdzz@ N
)zzN O
;zzO P
}{{ 
){{ 
;{{ 
migrationBuilder}} 
.}} 
CreateTable}} (
(}}( )
name~~ 
:~~ 
$str~~ &
,~~& '
columns 
: 
table 
=> !
new" %
{
ÄÄ 
ProfileStatusId
ÅÅ #
=
ÅÅ$ %
table
ÅÅ& +
.
ÅÅ+ ,
Column
ÅÅ, 2
<
ÅÅ2 3
int
ÅÅ3 6
>
ÅÅ6 7
(
ÅÅ7 8
type
ÅÅ8 <
:
ÅÅ< =
$str
ÅÅ> C
,
ÅÅC D
nullable
ÅÅE M
:
ÅÅM N
false
ÅÅO T
)
ÅÅT U
.
ÇÇ 

Annotation
ÇÇ #
(
ÇÇ# $
$str
ÇÇ$ 8
,
ÇÇ8 9
$str
ÇÇ: @
)
ÇÇ@ A
,
ÇÇA B
ProfileStatusName
ÉÉ %
=
ÉÉ& '
table
ÉÉ( -
.
ÉÉ- .
Column
ÉÉ. 4
<
ÉÉ4 5
string
ÉÉ5 ;
>
ÉÉ; <
(
ÉÉ< =
type
ÉÉ= A
:
ÉÉA B
$str
ÉÉC R
,
ÉÉR S
nullable
ÉÉT \
:
ÉÉ\ ]
false
ÉÉ^ c
)
ÉÉc d
,
ÉÉd e
IsActive
ÑÑ 
=
ÑÑ 
table
ÑÑ $
.
ÑÑ$ %
Column
ÑÑ% +
<
ÑÑ+ ,
bool
ÑÑ, 0
>
ÑÑ0 1
(
ÑÑ1 2
type
ÑÑ2 6
:
ÑÑ6 7
$str
ÑÑ8 =
,
ÑÑ= >
nullable
ÑÑ? G
:
ÑÑG H
false
ÑÑI N
)
ÑÑN O
}
ÖÖ 
,
ÖÖ 
constraints
ÜÜ 
:
ÜÜ 
table
ÜÜ "
=>
ÜÜ# %
{
áá 
table
àà 
.
àà 

PrimaryKey
àà $
(
àà$ %
$str
àà% 8
,
àà8 9
x
àà: ;
=>
àà< >
x
àà? @
.
àà@ A
ProfileStatusId
ààA P
)
ààP Q
;
ààQ R
}
ââ 
)
ââ 
;
ââ 
migrationBuilder
ãã 
.
ãã 
CreateTable
ãã (
(
ãã( )
name
åå 
:
åå 
$str
åå $
,
åå$ %
columns
çç 
:
çç 
table
çç 
=>
çç !
new
çç" %
{
éé 
TechnologyId
èè  
=
èè! "
table
èè# (
.
èè( )
Column
èè) /
<
èè/ 0
int
èè0 3
>
èè3 4
(
èè4 5
type
èè5 9
:
èè9 :
$str
èè; @
,
èè@ A
nullable
èèB J
:
èèJ K
false
èèL Q
)
èèQ R
.
êê 

Annotation
êê #
(
êê# $
$str
êê$ 8
,
êê8 9
$str
êê: @
)
êê@ A
,
êêA B
TechnologyName
ëë "
=
ëë# $
table
ëë% *
.
ëë* +
Column
ëë+ 1
<
ëë1 2
string
ëë2 8
>
ëë8 9
(
ëë9 :
type
ëë: >
:
ëë> ?
$str
ëë@ O
,
ëëO P
nullable
ëëQ Y
:
ëëY Z
false
ëë[ `
)
ëë` a
,
ëëa b
IsActive
íí 
=
íí 
table
íí $
.
íí$ %
Column
íí% +
<
íí+ ,
bool
íí, 0
>
íí0 1
(
íí1 2
type
íí2 6
:
íí6 7
$str
íí8 =
,
íí= >
nullable
íí? G
:
ííG H
false
ííI N
)
ííN O
}
ìì 
,
ìì 
constraints
îî 
:
îî 
table
îî "
=>
îî# %
{
ïï 
table
ññ 
.
ññ 

PrimaryKey
ññ $
(
ññ$ %
$str
ññ% 6
,
ññ6 7
x
ññ8 9
=>
ññ: <
x
ññ= >
.
ññ> ?
TechnologyId
ññ? K
)
ññK L
;
ññL M
}
óó 
)
óó 
;
óó 
migrationBuilder
ôô 
.
ôô 
CreateTable
ôô (
(
ôô( )
name
öö 
:
öö 
$str
öö 
,
öö 
columns
õõ 
:
õõ 
table
õõ 
=>
õõ !
new
õõ" %
{
úú 
UserId
ùù 
=
ùù 
table
ùù "
.
ùù" #
Column
ùù# )
<
ùù) *
int
ùù* -
>
ùù- .
(
ùù. /
type
ùù/ 3
:
ùù3 4
$str
ùù5 :
,
ùù: ;
nullable
ùù< D
:
ùùD E
false
ùùF K
)
ùùK L
.
ûû 

Annotation
ûû #
(
ûû# $
$str
ûû$ 8
,
ûû8 9
$str
ûû: @
)
ûû@ A
,
ûûA B
Name
üü 
=
üü 
table
üü  
.
üü  !
Column
üü! '
<
üü' (
string
üü( .
>
üü. /
(
üü/ 0
type
üü0 4
:
üü4 5
$str
üü6 E
,
üüE F
nullable
üüG O
:
üüO P
false
üüQ V
)
üüV W
,
üüW X
Email
†† 
=
†† 
table
†† !
.
††! "
Column
††" (
<
††( )
string
††) /
>
††/ 0
(
††0 1
type
††1 5
:
††5 6
$str
††7 F
,
††F G
nullable
††H P
:
††P Q
false
††R W
)
††W X
,
††X Y
UserName
°° 
=
°° 
table
°° $
.
°°$ %
Column
°°% +
<
°°+ ,
string
°°, 2
>
°°2 3
(
°°3 4
type
°°4 8
:
°°8 9
$str
°°: I
,
°°I J
nullable
°°K S
:
°°S T
false
°°U Z
)
°°Z [
,
°°[ \
Password
¢¢ 
=
¢¢ 
table
¢¢ $
.
¢¢$ %
Column
¢¢% +
<
¢¢+ ,
string
¢¢, 2
>
¢¢2 3
(
¢¢3 4
type
¢¢4 8
:
¢¢8 9
$str
¢¢: I
,
¢¢I J
nullable
¢¢K S
:
¢¢S T
false
¢¢U Z
)
¢¢Z [
,
¢¢[ \
CountryCodeId
££ !
=
££" #
table
££$ )
.
££) *
Column
££* 0
<
££0 1
int
££1 4
>
££4 5
(
££5 6
type
££6 :
:
££: ;
$str
££< A
,
££A B
nullable
££C K
:
££K L
true
££M Q
)
££Q R
,
££R S
MobileNumber
§§  
=
§§! "
table
§§# (
.
§§( )
Column
§§) /
<
§§/ 0
string
§§0 6
>
§§6 7
(
§§7 8
type
§§8 <
:
§§< =
$str
§§> M
,
§§M N
nullable
§§O W
:
§§W X
false
§§Y ^
)
§§^ _
,
§§_ `
DesignationId
•• !
=
••" #
table
••$ )
.
••) *
Column
••* 0
<
••0 1
int
••1 4
>
••4 5
(
••5 6
type
••6 :
:
••: ;
$str
••< A
,
••A B
nullable
••C K
:
••K L
false
••M R
)
••R S
,
••S T%
ReportingPersonUsername
¶¶ +
=
¶¶, -
table
¶¶. 3
.
¶¶3 4
Column
¶¶4 :
<
¶¶: ;
string
¶¶; A
>
¶¶A B
(
¶¶B C
type
¶¶C G
:
¶¶G H
$str
¶¶I X
,
¶¶X Y
nullable
¶¶Z b
:
¶¶b c
true
¶¶d h
)
¶¶h i
,
¶¶i j
OrganisationId
ßß "
=
ßß# $
table
ßß% *
.
ßß* +
Column
ßß+ 1
<
ßß1 2
int
ßß2 5
>
ßß5 6
(
ßß6 7
type
ßß7 ;
:
ßß; <
$str
ßß= B
,
ßßB C
nullable
ßßD L
:
ßßL M
false
ßßN S
)
ßßS T
,
ßßT U
GenderId
®® 
=
®® 
table
®® $
.
®®$ %
Column
®®% +
<
®®+ ,
int
®®, /
>
®®/ 0
(
®®0 1
type
®®1 5
:
®®5 6
$str
®®7 <
,
®®< =
nullable
®®> F
:
®®F G
false
®®H M
)
®®M N
,
®®N O
	CreatedBy
©© 
=
©© 
table
©©  %
.
©©% &
Column
©©& ,
<
©©, -
int
©©- 0
>
©©0 1
(
©©1 2
type
©©2 6
:
©©6 7
$str
©©8 =
,
©©= >
nullable
©©? G
:
©©G H
true
©©I M
)
©©M N
,
©©N O
	CreatedOn
™™ 
=
™™ 
table
™™  %
.
™™% &
Column
™™& ,
<
™™, -
DateTime
™™- 5
>
™™5 6
(
™™6 7
type
™™7 ;
:
™™; <
$str
™™= H
,
™™H I
nullable
™™J R
:
™™R S
true
™™T X
)
™™X Y
,
™™Y Z
	UpdatedBy
´´ 
=
´´ 
table
´´  %
.
´´% &
Column
´´& ,
<
´´, -
int
´´- 0
>
´´0 1
(
´´1 2
type
´´2 6
:
´´6 7
$str
´´8 =
,
´´= >
nullable
´´? G
:
´´G H
true
´´I M
)
´´M N
,
´´N O
	UpdatedOn
¨¨ 
=
¨¨ 
table
¨¨  %
.
¨¨% &
Column
¨¨& ,
<
¨¨, -
DateTime
¨¨- 5
>
¨¨5 6
(
¨¨6 7
type
¨¨7 ;
:
¨¨; <
$str
¨¨= H
,
¨¨H I
nullable
¨¨J R
:
¨¨R S
true
¨¨T X
)
¨¨X Y
,
¨¨Y Z
IsActive
≠≠ 
=
≠≠ 
table
≠≠ $
.
≠≠$ %
Column
≠≠% +
<
≠≠+ ,
bool
≠≠, 0
>
≠≠0 1
(
≠≠1 2
type
≠≠2 6
:
≠≠6 7
$str
≠≠8 =
,
≠≠= >
nullable
≠≠? G
:
≠≠G H
false
≠≠I N
)
≠≠N O
}
ÆÆ 
,
ÆÆ 
constraints
ØØ 
:
ØØ 
table
ØØ "
=>
ØØ# %
{
∞∞ 
table
±± 
.
±± 

PrimaryKey
±± $
(
±±$ %
$str
±±% /
,
±±/ 0
x
±±1 2
=>
±±3 5
x
±±6 7
.
±±7 8
UserId
±±8 >
)
±±> ?
;
±±? @
table
≤≤ 
.
≤≤ 

ForeignKey
≤≤ $
(
≤≤$ %
name
≥≥ 
:
≥≥ 
$str
≥≥ C
,
≥≥C D
column
¥¥ 
:
¥¥ 
x
¥¥  !
=>
¥¥" $
x
¥¥% &
.
¥¥& '
CountryCodeId
¥¥' 4
,
¥¥4 5
principalTable
µµ &
:
µµ& '
$str
µµ( 6
,
µµ6 7
principalColumn
∂∂ '
:
∂∂' (
$str
∂∂) 8
)
∂∂8 9
;
∂∂9 :
table
∑∑ 
.
∑∑ 

ForeignKey
∑∑ $
(
∑∑$ %
name
∏∏ 
:
∏∏ 
$str
∏∏ C
,
∏∏C D
column
ππ 
:
ππ 
x
ππ  !
=>
ππ" $
x
ππ% &
.
ππ& '
DesignationId
ππ' 4
,
ππ4 5
principalTable
∫∫ &
:
∫∫& '
$str
∫∫( 6
,
∫∫6 7
principalColumn
ªª '
:
ªª' (
$str
ªª) 8
,
ªª8 9
onDelete
ºº  
:
ºº  !
ReferentialAction
ºº" 3
.
ºº3 4
NoAction
ºº4 <
)
ºº< =
;
ºº= >
table
ΩΩ 
.
ΩΩ 

ForeignKey
ΩΩ $
(
ΩΩ$ %
name
ææ 
:
ææ 
$str
ææ 8
,
ææ8 9
column
øø 
:
øø 
x
øø  !
=>
øø" $
x
øø% &
.
øø& '
GenderId
øø' /
,
øø/ 0
principalTable
¿¿ &
:
¿¿& '
$str
¿¿( 0
,
¿¿0 1
principalColumn
¡¡ '
:
¡¡' (
$str
¡¡) 3
,
¡¡3 4
onDelete
¬¬  
:
¬¬  !
ReferentialAction
¬¬" 3
.
¬¬3 4
NoAction
¬¬4 <
)
¬¬< =
;
¬¬= >
table
√√ 
.
√√ 

ForeignKey
√√ $
(
√√$ %
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ E
,
ƒƒE F
column
≈≈ 
:
≈≈ 
x
≈≈  !
=>
≈≈" $
x
≈≈% &
.
≈≈& '
OrganisationId
≈≈' 5
,
≈≈5 6
principalTable
∆∆ &
:
∆∆& '
$str
∆∆( 7
,
∆∆7 8
principalColumn
«« '
:
««' (
$str
««) 9
,
««9 :
onDelete
»»  
:
»»  !
ReferentialAction
»»" 3
.
»»3 4
NoAction
»»4 <
)
»»< =
;
»»= >
}
…… 
)
…… 
;
…… 
migrationBuilder
ÀÀ 
.
ÀÀ 
CreateTable
ÀÀ (
(
ÀÀ( )
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ 
,
ÃÃ  
columns
ÕÕ 
:
ÕÕ 
table
ÕÕ 
=>
ÕÕ !
new
ÕÕ" %
{
ŒŒ 
	ProfileId
œœ 
=
œœ 
table
œœ  %
.
œœ% &
Column
œœ& ,
<
œœ, -
int
œœ- 0
>
œœ0 1
(
œœ1 2
type
œœ2 6
:
œœ6 7
$str
œœ8 =
,
œœ= >
nullable
œœ? G
:
œœG H
false
œœI N
)
œœN O
.
–– 

Annotation
–– #
(
––# $
$str
––$ 8
,
––8 9
$str
––: @
)
––@ A
,
––A B
ProfileStatusId
—— #
=
——$ %
table
——& +
.
——+ ,
Column
——, 2
<
——2 3
int
——3 6
>
——6 7
(
——7 8
type
——8 <
:
——< =
$str
——> C
,
——C D
nullable
——E M
:
——M N
false
——O T
)
——T U
,
——U V
	CreatedOn
““ 
=
““ 
table
““  %
.
““% &
Column
““& ,
<
““, -
DateTime
““- 5
>
““5 6
(
““6 7
type
““7 ;
:
““; <
$str
““= H
,
““H I
nullable
““J R
:
““R S
true
““T X
)
““X Y
,
““Y Z
	CreatedBy
”” 
=
”” 
table
””  %
.
””% &
Column
””& ,
<
””, -
int
””- 0
>
””0 1
(
””1 2
type
””2 6
:
””6 7
$str
””8 =
,
””= >
nullable
””? G
:
””G H
true
””I M
)
””M N
,
””N O
	UpdatedOn
‘‘ 
=
‘‘ 
table
‘‘  %
.
‘‘% &
Column
‘‘& ,
<
‘‘, -
DateTime
‘‘- 5
>
‘‘5 6
(
‘‘6 7
type
‘‘7 ;
:
‘‘; <
$str
‘‘= H
,
‘‘H I
nullable
‘‘J R
:
‘‘R S
true
‘‘T X
)
‘‘X Y
,
‘‘Y Z
UserId
’’ 
=
’’ 
table
’’ "
.
’’" #
Column
’’# )
<
’’) *
int
’’* -
>
’’- .
(
’’. /
type
’’/ 3
:
’’3 4
$str
’’5 :
,
’’: ;
nullable
’’< D
:
’’D E
false
’’F K
)
’’K L
,
’’L M
IsActive
÷÷ 
=
÷÷ 
table
÷÷ $
.
÷÷$ %
Column
÷÷% +
<
÷÷+ ,
bool
÷÷, 0
>
÷÷0 1
(
÷÷1 2
type
÷÷2 6
:
÷÷6 7
$str
÷÷8 =
,
÷÷= >
nullable
÷÷? G
:
÷÷G H
false
÷÷I N
)
÷÷N O
}
◊◊ 
,
◊◊ 
constraints
ÿÿ 
:
ÿÿ 
table
ÿÿ "
=>
ÿÿ# %
{
ŸŸ 
table
⁄⁄ 
.
⁄⁄ 

PrimaryKey
⁄⁄ $
(
⁄⁄$ %
$str
⁄⁄% 1
,
⁄⁄1 2
x
⁄⁄3 4
=>
⁄⁄5 7
x
⁄⁄8 9
.
⁄⁄9 :
	ProfileId
⁄⁄: C
)
⁄⁄C D
;
⁄⁄D E
table
€€ 
.
€€ 

ForeignKey
€€ $
(
€€$ %
name
‹‹ 
:
‹‹ 
$str
‹‹ I
,
‹‹I J
column
›› 
:
›› 
x
››  !
=>
››" $
x
››% &
.
››& '
ProfileStatusId
››' 6
,
››6 7
principalTable
ﬁﬁ &
:
ﬁﬁ& '
$str
ﬁﬁ( 8
,
ﬁﬁ8 9
principalColumn
ﬂﬂ '
:
ﬂﬂ' (
$str
ﬂﬂ) :
,
ﬂﬂ: ;
onDelete
‡‡  
:
‡‡  !
ReferentialAction
‡‡" 3
.
‡‡3 4
NoAction
‡‡4 <
)
‡‡< =
;
‡‡= >
table
·· 
.
·· 

ForeignKey
·· $
(
··$ %
name
‚‚ 
:
‚‚ 
$str
‚‚ 7
,
‚‚7 8
column
„„ 
:
„„ 
x
„„  !
=>
„„" $
x
„„% &
.
„„& '
UserId
„„' -
,
„„- .
principalTable
‰‰ &
:
‰‰& '
$str
‰‰( /
,
‰‰/ 0
principalColumn
ÂÂ '
:
ÂÂ' (
$str
ÂÂ) 1
,
ÂÂ1 2
onDelete
ÊÊ  
:
ÊÊ  !
ReferentialAction
ÊÊ" 3
.
ÊÊ3 4
NoAction
ÊÊ4 <
)
ÊÊ< =
;
ÊÊ= >
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
migrationBuilder
ÈÈ 
.
ÈÈ 
CreateTable
ÈÈ (
(
ÈÈ( )
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ $
,
ÍÍ$ %
columns
ÎÎ 
:
ÎÎ 
table
ÎÎ 
=>
ÎÎ !
new
ÎÎ" %
{
ÏÏ 
AchievementId
ÌÌ !
=
ÌÌ" #
table
ÌÌ$ )
.
ÌÌ) *
Column
ÌÌ* 0
<
ÌÌ0 1
int
ÌÌ1 4
>
ÌÌ4 5
(
ÌÌ5 6
type
ÌÌ6 :
:
ÌÌ: ;
$str
ÌÌ< A
,
ÌÌA B
nullable
ÌÌC K
:
ÌÌK L
false
ÌÌM R
)
ÌÌR S
.
ÓÓ 

Annotation
ÓÓ #
(
ÓÓ# $
$str
ÓÓ$ 8
,
ÓÓ8 9
$str
ÓÓ: @
)
ÓÓ@ A
,
ÓÓA B
	ProfileId
ÔÔ 
=
ÔÔ 
table
ÔÔ  %
.
ÔÔ% &
Column
ÔÔ& ,
<
ÔÔ, -
int
ÔÔ- 0
>
ÔÔ0 1
(
ÔÔ1 2
type
ÔÔ2 6
:
ÔÔ6 7
$str
ÔÔ8 =
,
ÔÔ= >
nullable
ÔÔ? G
:
ÔÔG H
false
ÔÔI N
)
ÔÔN O
,
ÔÔO P
AchievementTypeId
 %
=
& '
table
( -
.
- .
Column
. 4
<
4 5
int
5 8
>
8 9
(
9 :
type
: >
:
> ?
$str
@ E
,
E F
nullable
G O
:
O P
false
Q V
)
V W
,
W X
base64header
ÒÒ  
=
ÒÒ! "
table
ÒÒ# (
.
ÒÒ( )
Column
ÒÒ) /
<
ÒÒ/ 0
string
ÒÒ0 6
>
ÒÒ6 7
(
ÒÒ7 8
type
ÒÒ8 <
:
ÒÒ< =
$str
ÒÒ> M
,
ÒÒM N
nullable
ÒÒO W
:
ÒÒW X
false
ÒÒY ^
)
ÒÒ^ _
,
ÒÒ_ `
AchievementImage
ÚÚ $
=
ÚÚ% &
table
ÚÚ' ,
.
ÚÚ, -
Column
ÚÚ- 3
<
ÚÚ3 4
byte
ÚÚ4 8
[
ÚÚ8 9
]
ÚÚ9 :
>
ÚÚ: ;
(
ÚÚ; <
type
ÚÚ< @
:
ÚÚ@ A
$str
ÚÚB R
,
ÚÚR S
nullable
ÚÚT \
:
ÚÚ\ ]
true
ÚÚ^ b
)
ÚÚb c
,
ÚÚc d
	CreatedOn
ÛÛ 
=
ÛÛ 
table
ÛÛ  %
.
ÛÛ% &
Column
ÛÛ& ,
<
ÛÛ, -
DateTime
ÛÛ- 5
>
ÛÛ5 6
(
ÛÛ6 7
type
ÛÛ7 ;
:
ÛÛ; <
$str
ÛÛ= H
,
ÛÛH I
nullable
ÛÛJ R
:
ÛÛR S
true
ÛÛT X
)
ÛÛX Y
,
ÛÛY Z
	CreatedBy
ÙÙ 
=
ÙÙ 
table
ÙÙ  %
.
ÙÙ% &
Column
ÙÙ& ,
<
ÙÙ, -
int
ÙÙ- 0
>
ÙÙ0 1
(
ÙÙ1 2
type
ÙÙ2 6
:
ÙÙ6 7
$str
ÙÙ8 =
,
ÙÙ= >
nullable
ÙÙ? G
:
ÙÙG H
true
ÙÙI M
)
ÙÙM N
,
ÙÙN O
	UpdatedOn
ıı 
=
ıı 
table
ıı  %
.
ıı% &
Column
ıı& ,
<
ıı, -
DateTime
ıı- 5
>
ıı5 6
(
ıı6 7
type
ıı7 ;
:
ıı; <
$str
ıı= H
,
ııH I
nullable
ııJ R
:
ııR S
true
ııT X
)
ııX Y
,
ııY Z
	UpdatedBy
ˆˆ 
=
ˆˆ 
table
ˆˆ  %
.
ˆˆ% &
Column
ˆˆ& ,
<
ˆˆ, -
int
ˆˆ- 0
>
ˆˆ0 1
(
ˆˆ1 2
type
ˆˆ2 6
:
ˆˆ6 7
$str
ˆˆ8 =
,
ˆˆ= >
nullable
ˆˆ? G
:
ˆˆG H
true
ˆˆI M
)
ˆˆM N
,
ˆˆN O
IsActive
˜˜ 
=
˜˜ 
table
˜˜ $
.
˜˜$ %
Column
˜˜% +
<
˜˜+ ,
bool
˜˜, 0
>
˜˜0 1
(
˜˜1 2
type
˜˜2 6
:
˜˜6 7
$str
˜˜8 =
,
˜˜= >
nullable
˜˜? G
:
˜˜G H
false
˜˜I N
)
˜˜N O
}
¯¯ 
,
¯¯ 
constraints
˘˘ 
:
˘˘ 
table
˘˘ "
=>
˘˘# %
{
˙˙ 
table
˚˚ 
.
˚˚ 

PrimaryKey
˚˚ $
(
˚˚$ %
$str
˚˚% 6
,
˚˚6 7
x
˚˚8 9
=>
˚˚: <
x
˚˚= >
.
˚˚> ?
AchievementId
˚˚? L
)
˚˚L M
;
˚˚M N
table
¸¸ 
.
¸¸ 

ForeignKey
¸¸ $
(
¸¸$ %
name
˝˝ 
:
˝˝ 
$str
˝˝ Q
,
˝˝Q R
column
˛˛ 
:
˛˛ 
x
˛˛  !
=>
˛˛" $
x
˛˛% &
.
˛˛& '
AchievementTypeId
˛˛' 8
,
˛˛8 9
principalTable
ˇˇ &
:
ˇˇ& '
$str
ˇˇ( 9
,
ˇˇ9 :
principalColumn
ÄÄ '
:
ÄÄ' (
$str
ÄÄ) <
,
ÄÄ< =
onDelete
ÅÅ  
:
ÅÅ  !
ReferentialAction
ÅÅ" 3
.
ÅÅ3 4
NoAction
ÅÅ4 <
)
ÅÅ< =
;
ÅÅ= >
table
ÇÇ 
.
ÇÇ 

ForeignKey
ÇÇ $
(
ÇÇ$ %
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ A
,
ÉÉA B
column
ÑÑ 
:
ÑÑ 
x
ÑÑ  !
=>
ÑÑ" $
x
ÑÑ% &
.
ÑÑ& '
	ProfileId
ÑÑ' 0
,
ÑÑ0 1
principalTable
ÖÖ &
:
ÖÖ& '
$str
ÖÖ( 1
,
ÖÖ1 2
principalColumn
ÜÜ '
:
ÜÜ' (
$str
ÜÜ) 4
,
ÜÜ4 5
onDelete
áá  
:
áá  !
ReferentialAction
áá" 3
.
áá3 4
NoAction
áá4 <
)
áá< =
;
áá= >
}
àà 
)
àà 
;
àà 
migrationBuilder
ää 
.
ää 
CreateTable
ää (
(
ää( )
name
ãã 
:
ãã 
$str
ãã "
,
ãã" #
columns
åå 
:
åå 
table
åå 
=>
åå !
new
åå" %
{
çç 
EducationId
éé 
=
éé  !
table
éé" '
.
éé' (
Column
éé( .
<
éé. /
int
éé/ 2
>
éé2 3
(
éé3 4
type
éé4 8
:
éé8 9
$str
éé: ?
,
éé? @
nullable
ééA I
:
ééI J
false
ééK P
)
ééP Q
.
èè 

Annotation
èè #
(
èè# $
$str
èè$ 8
,
èè8 9
$str
èè: @
)
èè@ A
,
èèA B
	ProfileId
êê 
=
êê 
table
êê  %
.
êê% &
Column
êê& ,
<
êê, -
int
êê- 0
>
êê0 1
(
êê1 2
type
êê2 6
:
êê6 7
$str
êê8 =
,
êê= >
nullable
êê? G
:
êêG H
false
êêI N
)
êêN O
,
êêO P
Degree
ëë 
=
ëë 
table
ëë "
.
ëë" #
Column
ëë# )
<
ëë) *
string
ëë* 0
>
ëë0 1
(
ëë1 2
type
ëë2 6
:
ëë6 7
$str
ëë8 G
,
ëëG H
nullable
ëëI Q
:
ëëQ R
false
ëëS X
)
ëëX Y
,
ëëY Z
Course
íí 
=
íí 
table
íí "
.
íí" #
Column
íí# )
<
íí) *
string
íí* 0
>
íí0 1
(
íí1 2
type
íí2 6
:
íí6 7
$str
íí8 G
,
ííG H
nullable
ííI Q
:
ííQ R
false
ííS X
)
ííX Y
,
ííY Z
	CollegeId
ìì 
=
ìì 
table
ìì  %
.
ìì% &
Column
ìì& ,
<
ìì, -
int
ìì- 0
>
ìì0 1
(
ìì1 2
type
ìì2 6
:
ìì6 7
$str
ìì8 =
,
ìì= >
nullable
ìì? G
:
ììG H
false
ììI N
)
ììN O
,
ììO P
Starting
îî 
=
îî 
table
îî $
.
îî$ %
Column
îî% +
<
îî+ ,
int
îî, /
>
îî/ 0
(
îî0 1
type
îî1 5
:
îî5 6
$str
îî7 <
,
îî< =
nullable
îî> F
:
îîF G
true
îîH L
)
îîL M
,
îîM N
Ending
ïï 
=
ïï 
table
ïï "
.
ïï" #
Column
ïï# )
<
ïï) *
int
ïï* -
>
ïï- .
(
ïï. /
type
ïï/ 3
:
ïï3 4
$str
ïï5 :
,
ïï: ;
nullable
ïï< D
:
ïïD E
true
ïïF J
)
ïïJ K
,
ïïK L

Percentage
ññ 
=
ññ  
table
ññ! &
.
ññ& '
Column
ññ' -
<
ññ- .
float
ññ. 3
>
ññ3 4
(
ññ4 5
type
ññ5 9
:
ññ9 :
$str
ññ; A
,
ññA B
nullable
ññC K
:
ññK L
false
ññM R
)
ññR S
,
ññS T
	CreatedOn
óó 
=
óó 
table
óó  %
.
óó% &
Column
óó& ,
<
óó, -
DateTime
óó- 5
>
óó5 6
(
óó6 7
type
óó7 ;
:
óó; <
$str
óó= H
,
óóH I
nullable
óóJ R
:
óóR S
true
óóT X
)
óóX Y
,
óóY Z
	CreatedBy
òò 
=
òò 
table
òò  %
.
òò% &
Column
òò& ,
<
òò, -
int
òò- 0
>
òò0 1
(
òò1 2
type
òò2 6
:
òò6 7
$str
òò8 =
,
òò= >
nullable
òò? G
:
òòG H
true
òòI M
)
òòM N
,
òòN O
	UpdatedOn
ôô 
=
ôô 
table
ôô  %
.
ôô% &
Column
ôô& ,
<
ôô, -
DateTime
ôô- 5
>
ôô5 6
(
ôô6 7
type
ôô7 ;
:
ôô; <
$str
ôô= H
,
ôôH I
nullable
ôôJ R
:
ôôR S
true
ôôT X
)
ôôX Y
,
ôôY Z
	UpdatedBy
öö 
=
öö 
table
öö  %
.
öö% &
Column
öö& ,
<
öö, -
int
öö- 0
>
öö0 1
(
öö1 2
type
öö2 6
:
öö6 7
$str
öö8 =
,
öö= >
nullable
öö? G
:
ööG H
true
ööI M
)
ööM N
,
ööN O
IsActive
õõ 
=
õõ 
table
õõ $
.
õõ$ %
Column
õõ% +
<
õõ+ ,
bool
õõ, 0
>
õõ0 1
(
õõ1 2
type
õõ2 6
:
õõ6 7
$str
õõ8 =
,
õõ= >
nullable
õõ? G
:
õõG H
false
õõI N
)
õõN O
}
úú 
,
úú 
constraints
ùù 
:
ùù 
table
ùù "
=>
ùù# %
{
ûû 
table
üü 
.
üü 

PrimaryKey
üü $
(
üü$ %
$str
üü% 4
,
üü4 5
x
üü6 7
=>
üü8 :
x
üü; <
.
üü< =
EducationId
üü= H
)
üüH I
;
üüI J
table
†† 
.
†† 

ForeignKey
†† $
(
††$ %
name
°° 
:
°° 
$str
°° @
,
°°@ A
column
¢¢ 
:
¢¢ 
x
¢¢  !
=>
¢¢" $
x
¢¢% &
.
¢¢& '
	CollegeId
¢¢' 0
,
¢¢0 1
principalTable
££ &
:
££& '
$str
££( 2
,
££2 3
principalColumn
§§ '
:
§§' (
$str
§§) 4
,
§§4 5
onDelete
••  
:
••  !
ReferentialAction
••" 3
.
••3 4
NoAction
••4 <
)
••< =
;
••= >
table
¶¶ 
.
¶¶ 

ForeignKey
¶¶ $
(
¶¶$ %
name
ßß 
:
ßß 
$str
ßß ?
,
ßß? @
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
	ProfileId
®®' 0
,
®®0 1
principalTable
©© &
:
©©& '
$str
©©( 1
,
©©1 2
principalColumn
™™ '
:
™™' (
$str
™™) 4
,
™™4 5
onDelete
´´  
:
´´  !
ReferentialAction
´´" 3
.
´´3 4
NoAction
´´4 <
)
´´< =
;
´´= >
}
¨¨ 
)
¨¨ 
;
¨¨ 
migrationBuilder
ÆÆ 
.
ÆÆ 
CreateTable
ÆÆ (
(
ÆÆ( )
name
ØØ 
:
ØØ 
$str
ØØ '
,
ØØ' (
columns
∞∞ 
:
∞∞ 
table
∞∞ 
=>
∞∞ !
new
∞∞" %
{
±± 
PersonalDetailsId
≤≤ %
=
≤≤& '
table
≤≤( -
.
≤≤- .
Column
≤≤. 4
<
≤≤4 5
int
≤≤5 8
>
≤≤8 9
(
≤≤9 :
type
≤≤: >
:
≤≤> ?
$str
≤≤@ E
,
≤≤E F
nullable
≤≤G O
:
≤≤O P
false
≤≤Q V
)
≤≤V W
.
≥≥ 

Annotation
≥≥ #
(
≥≥# $
$str
≥≥$ 8
,
≥≥8 9
$str
≥≥: @
)
≥≥@ A
,
≥≥A B
	ProfileId
¥¥ 
=
¥¥ 
table
¥¥  %
.
¥¥% &
Column
¥¥& ,
<
¥¥, -
int
¥¥- 0
>
¥¥0 1
(
¥¥1 2
type
¥¥2 6
:
¥¥6 7
$str
¥¥8 =
,
¥¥= >
nullable
¥¥? G
:
¥¥G H
false
¥¥I N
)
¥¥N O
,
¥¥O P
	Objective
µµ 
=
µµ 
table
µµ  %
.
µµ% &
Column
µµ& ,
<
µµ, -
string
µµ- 3
>
µµ3 4
(
µµ4 5
type
µµ5 9
:
µµ9 :
$str
µµ; J
,
µµJ K
nullable
µµL T
:
µµT U
false
µµV [
)
µµ[ \
,
µµ\ ]
DateOfBirth
∂∂ 
=
∂∂  !
table
∂∂" '
.
∂∂' (
Column
∂∂( .
<
∂∂. /
DateTime
∂∂/ 7
>
∂∂7 8
(
∂∂8 9
type
∂∂9 =
:
∂∂= >
$str
∂∂? J
,
∂∂J K
nullable
∂∂L T
:
∂∂T U
false
∂∂V [
)
∂∂[ \
,
∂∂\ ]
Nationality
∑∑ 
=
∑∑  !
table
∑∑" '
.
∑∑' (
Column
∑∑( .
<
∑∑. /
string
∑∑/ 5
>
∑∑5 6
(
∑∑6 7
type
∑∑7 ;
:
∑∑; <
$str
∑∑= L
,
∑∑L M
nullable
∑∑N V
:
∑∑V W
false
∑∑X ]
)
∑∑] ^
,
∑∑^ _
DateOfJoining
∏∏ !
=
∏∏" #
table
∏∏$ )
.
∏∏) *
Column
∏∏* 0
<
∏∏0 1
DateTime
∏∏1 9
>
∏∏9 :
(
∏∏: ;
type
∏∏; ?
:
∏∏? @
$str
∏∏A L
,
∏∏L M
nullable
∏∏N V
:
∏∏V W
false
∏∏X ]
)
∏∏] ^
,
∏∏^ _
base64header
ππ  
=
ππ! "
table
ππ# (
.
ππ( )
Column
ππ) /
<
ππ/ 0
string
ππ0 6
>
ππ6 7
(
ππ7 8
type
ππ8 <
:
ππ< =
$str
ππ> M
,
ππM N
nullable
ππO W
:
ππW X
false
ππY ^
)
ππ^ _
,
ππ_ `
Image
∫∫ 
=
∫∫ 
table
∫∫ !
.
∫∫! "
Column
∫∫" (
<
∫∫( )
byte
∫∫) -
[
∫∫- .
]
∫∫. /
>
∫∫/ 0
(
∫∫0 1
type
∫∫1 5
:
∫∫5 6
$str
∫∫7 G
,
∫∫G H
nullable
∫∫I Q
:
∫∫Q R
true
∫∫S W
)
∫∫W X
,
∫∫X Y
	CreatedOn
ªª 
=
ªª 
table
ªª  %
.
ªª% &
Column
ªª& ,
<
ªª, -
DateTime
ªª- 5
>
ªª5 6
(
ªª6 7
type
ªª7 ;
:
ªª; <
$str
ªª= H
,
ªªH I
nullable
ªªJ R
:
ªªR S
true
ªªT X
)
ªªX Y
,
ªªY Z
	CreatedBy
ºº 
=
ºº 
table
ºº  %
.
ºº% &
Column
ºº& ,
<
ºº, -
int
ºº- 0
>
ºº0 1
(
ºº1 2
type
ºº2 6
:
ºº6 7
$str
ºº8 =
,
ºº= >
nullable
ºº? G
:
ººG H
true
ººI M
)
ººM N
,
ººN O
	UpdatedOn
ΩΩ 
=
ΩΩ 
table
ΩΩ  %
.
ΩΩ% &
Column
ΩΩ& ,
<
ΩΩ, -
DateTime
ΩΩ- 5
>
ΩΩ5 6
(
ΩΩ6 7
type
ΩΩ7 ;
:
ΩΩ; <
$str
ΩΩ= H
,
ΩΩH I
nullable
ΩΩJ R
:
ΩΩR S
true
ΩΩT X
)
ΩΩX Y
,
ΩΩY Z
	UpdatedBy
ææ 
=
ææ 
table
ææ  %
.
ææ% &
Column
ææ& ,
<
ææ, -
int
ææ- 0
>
ææ0 1
(
ææ1 2
type
ææ2 6
:
ææ6 7
$str
ææ8 =
,
ææ= >
nullable
ææ? G
:
ææG H
true
ææI M
)
ææM N
,
ææN O
UserId
øø 
=
øø 
table
øø "
.
øø" #
Column
øø# )
<
øø) *
int
øø* -
>
øø- .
(
øø. /
type
øø/ 3
:
øø3 4
$str
øø5 :
,
øø: ;
nullable
øø< D
:
øøD E
false
øøF K
)
øøK L
,
øøL M
IsActive
¿¿ 
=
¿¿ 
table
¿¿ $
.
¿¿$ %
Column
¿¿% +
<
¿¿+ ,
bool
¿¿, 0
>
¿¿0 1
(
¿¿1 2
type
¿¿2 6
:
¿¿6 7
$str
¿¿8 =
,
¿¿= >
nullable
¿¿? G
:
¿¿G H
false
¿¿I N
)
¿¿N O
}
¡¡ 
,
¡¡ 
constraints
¬¬ 
:
¬¬ 
table
¬¬ "
=>
¬¬# %
{
√√ 
table
ƒƒ 
.
ƒƒ 

PrimaryKey
ƒƒ $
(
ƒƒ$ %
$str
ƒƒ% 9
,
ƒƒ9 :
x
ƒƒ; <
=>
ƒƒ= ?
x
ƒƒ@ A
.
ƒƒA B
PersonalDetailsId
ƒƒB S
)
ƒƒS T
;
ƒƒT U
table
≈≈ 
.
≈≈ 

ForeignKey
≈≈ $
(
≈≈$ %
name
∆∆ 
:
∆∆ 
$str
∆∆ D
,
∆∆D E
column
«« 
:
«« 
x
««  !
=>
««" $
x
««% &
.
««& '
	ProfileId
««' 0
,
««0 1
principalTable
»» &
:
»»& '
$str
»»( 1
,
»»1 2
principalColumn
…… '
:
……' (
$str
……) 4
,
……4 5
onDelete
    
:
    !
ReferentialAction
  " 3
.
  3 4
NoAction
  4 <
)
  < =
;
  = >
table
ÀÀ 
.
ÀÀ 

ForeignKey
ÀÀ $
(
ÀÀ$ %
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ ?
,
ÃÃ? @
column
ÕÕ 
:
ÕÕ 
x
ÕÕ  !
=>
ÕÕ" $
x
ÕÕ% &
.
ÕÕ& '
UserId
ÕÕ' -
,
ÕÕ- .
principalTable
ŒŒ &
:
ŒŒ& '
$str
ŒŒ( /
,
ŒŒ/ 0
principalColumn
œœ '
:
œœ' (
$str
œœ) 1
,
œœ1 2
onDelete
––  
:
––  !
ReferentialAction
––" 3
.
––3 4
NoAction
––4 <
)
––< =
;
––= >
}
—— 
)
—— 
;
—— 
migrationBuilder
”” 
.
”” 
CreateTable
”” (
(
””( )
name
‘‘ 
:
‘‘ 
$str
‘‘ &
,
‘‘& '
columns
’’ 
:
’’ 
table
’’ 
=>
’’ !
new
’’" %
{
÷÷ 
ProfileHistoryId
◊◊ $
=
◊◊% &
table
◊◊' ,
.
◊◊, -
Column
◊◊- 3
<
◊◊3 4
int
◊◊4 7
>
◊◊7 8
(
◊◊8 9
type
◊◊9 =
:
◊◊= >
$str
◊◊? D
,
◊◊D E
nullable
◊◊F N
:
◊◊N O
false
◊◊P U
)
◊◊U V
.
ÿÿ 

Annotation
ÿÿ #
(
ÿÿ# $
$str
ÿÿ$ 8
,
ÿÿ8 9
$str
ÿÿ: @
)
ÿÿ@ A
,
ÿÿA B
	ProfileId
ŸŸ 
=
ŸŸ 
table
ŸŸ  %
.
ŸŸ% &
Column
ŸŸ& ,
<
ŸŸ, -
int
ŸŸ- 0
>
ŸŸ0 1
(
ŸŸ1 2
type
ŸŸ2 6
:
ŸŸ6 7
$str
ŸŸ8 =
,
ŸŸ= >
nullable
ŸŸ? G
:
ŸŸG H
false
ŸŸI N
)
ŸŸN O
,
ŸŸO P
ApprovedDate
⁄⁄  
=
⁄⁄! "
table
⁄⁄# (
.
⁄⁄( )
Column
⁄⁄) /
<
⁄⁄/ 0
DateTime
⁄⁄0 8
>
⁄⁄8 9
(
⁄⁄9 :
type
⁄⁄: >
:
⁄⁄> ?
$str
⁄⁄@ K
,
⁄⁄K L
nullable
⁄⁄M U
:
⁄⁄U V
false
⁄⁄W \
)
⁄⁄\ ]
,
⁄⁄] ^
IsActive
€€ 
=
€€ 
table
€€ $
.
€€$ %
Column
€€% +
<
€€+ ,
bool
€€, 0
>
€€0 1
(
€€1 2
type
€€2 6
:
€€6 7
$str
€€8 =
,
€€= >
nullable
€€? G
:
€€G H
false
€€I N
)
€€N O
}
‹‹ 
,
‹‹ 
constraints
›› 
:
›› 
table
›› "
=>
››# %
{
ﬁﬁ 
table
ﬂﬂ 
.
ﬂﬂ 

PrimaryKey
ﬂﬂ $
(
ﬂﬂ$ %
$str
ﬂﬂ% 8
,
ﬂﬂ8 9
x
ﬂﬂ: ;
=>
ﬂﬂ< >
x
ﬂﬂ? @
.
ﬂﬂ@ A
ProfileHistoryId
ﬂﬂA Q
)
ﬂﬂQ R
;
ﬂﬂR S
table
‡‡ 
.
‡‡ 

ForeignKey
‡‡ $
(
‡‡$ %
name
·· 
:
·· 
$str
·· C
,
··C D
column
‚‚ 
:
‚‚ 
x
‚‚  !
=>
‚‚" $
x
‚‚% &
.
‚‚& '
	ProfileId
‚‚' 0
,
‚‚0 1
principalTable
„„ &
:
„„& '
$str
„„( 1
,
„„1 2
principalColumn
‰‰ '
:
‰‰' (
$str
‰‰) 4
,
‰‰4 5
onDelete
ÂÂ  
:
ÂÂ  !
ReferentialAction
ÂÂ" 3
.
ÂÂ3 4
NoAction
ÂÂ4 <
)
ÂÂ< =
;
ÂÂ= >
}
ÊÊ 
)
ÊÊ 
;
ÊÊ 
migrationBuilder
ËË 
.
ËË 
CreateTable
ËË (
(
ËË( )
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ  
,
ÈÈ  !
columns
ÍÍ 
:
ÍÍ 
table
ÍÍ 
=>
ÍÍ !
new
ÍÍ" %
{
ÎÎ 
	ProjectId
ÏÏ 
=
ÏÏ 
table
ÏÏ  %
.
ÏÏ% &
Column
ÏÏ& ,
<
ÏÏ, -
int
ÏÏ- 0
>
ÏÏ0 1
(
ÏÏ1 2
type
ÏÏ2 6
:
ÏÏ6 7
$str
ÏÏ8 =
,
ÏÏ= >
nullable
ÏÏ? G
:
ÏÏG H
false
ÏÏI N
)
ÏÏN O
.
ÌÌ 

Annotation
ÌÌ #
(
ÌÌ# $
$str
ÌÌ$ 8
,
ÌÌ8 9
$str
ÌÌ: @
)
ÌÌ@ A
,
ÌÌA B
	ProfileId
ÓÓ 
=
ÓÓ 
table
ÓÓ  %
.
ÓÓ% &
Column
ÓÓ& ,
<
ÓÓ, -
int
ÓÓ- 0
>
ÓÓ0 1
(
ÓÓ1 2
type
ÓÓ2 6
:
ÓÓ6 7
$str
ÓÓ8 =
,
ÓÓ= >
nullable
ÓÓ? G
:
ÓÓG H
false
ÓÓI N
)
ÓÓN O
,
ÓÓO P
ProjectName
ÔÔ 
=
ÔÔ  !
table
ÔÔ" '
.
ÔÔ' (
Column
ÔÔ( .
<
ÔÔ. /
string
ÔÔ/ 5
>
ÔÔ5 6
(
ÔÔ6 7
type
ÔÔ7 ;
:
ÔÔ; <
$str
ÔÔ= L
,
ÔÔL M
nullable
ÔÔN V
:
ÔÔV W
false
ÔÔX ]
)
ÔÔ] ^
,
ÔÔ^ _ 
ProjectDescription
 &
=
' (
table
) .
.
. /
Column
/ 5
<
5 6
string
6 <
>
< =
(
= >
type
> B
:
B C
$str
D S
,
S T
nullable
U ]
:
] ^
false
_ d
)
d e
,
e f
StartingMonth
ÒÒ !
=
ÒÒ" #
table
ÒÒ$ )
.
ÒÒ) *
Column
ÒÒ* 0
<
ÒÒ0 1
string
ÒÒ1 7
>
ÒÒ7 8
(
ÒÒ8 9
type
ÒÒ9 =
:
ÒÒ= >
$str
ÒÒ? N
,
ÒÒN O
nullable
ÒÒP X
:
ÒÒX Y
true
ÒÒZ ^
)
ÒÒ^ _
,
ÒÒ_ `
StartingYear
ÚÚ  
=
ÚÚ! "
table
ÚÚ# (
.
ÚÚ( )
Column
ÚÚ) /
<
ÚÚ/ 0
int
ÚÚ0 3
>
ÚÚ3 4
(
ÚÚ4 5
type
ÚÚ5 9
:
ÚÚ9 :
$str
ÚÚ; @
,
ÚÚ@ A
nullable
ÚÚB J
:
ÚÚJ K
true
ÚÚL P
)
ÚÚP Q
,
ÚÚQ R
EndingMonth
ÛÛ 
=
ÛÛ  !
table
ÛÛ" '
.
ÛÛ' (
Column
ÛÛ( .
<
ÛÛ. /
string
ÛÛ/ 5
>
ÛÛ5 6
(
ÛÛ6 7
type
ÛÛ7 ;
:
ÛÛ; <
$str
ÛÛ= L
,
ÛÛL M
nullable
ÛÛN V
:
ÛÛV W
true
ÛÛX \
)
ÛÛ\ ]
,
ÛÛ] ^

EndingYear
ÙÙ 
=
ÙÙ  
table
ÙÙ! &
.
ÙÙ& '
Column
ÙÙ' -
<
ÙÙ- .
int
ÙÙ. 1
>
ÙÙ1 2
(
ÙÙ2 3
type
ÙÙ3 7
:
ÙÙ7 8
$str
ÙÙ9 >
,
ÙÙ> ?
nullable
ÙÙ@ H
:
ÙÙH I
true
ÙÙJ N
)
ÙÙN O
,
ÙÙO P
Designation
ıı 
=
ıı  !
table
ıı" '
.
ıı' (
Column
ıı( .
<
ıı. /
string
ıı/ 5
>
ıı5 6
(
ıı6 7
type
ıı7 ;
:
ıı; <
$str
ıı= L
,
ııL M
nullable
ııN V
:
ııV W
false
ııX ]
)
ıı] ^
,
ıı^ _
	ToolsUsed
ˆˆ 
=
ˆˆ 
table
ˆˆ  %
.
ˆˆ% &
Column
ˆˆ& ,
<
ˆˆ, -
string
ˆˆ- 3
>
ˆˆ3 4
(
ˆˆ4 5
type
ˆˆ5 9
:
ˆˆ9 :
$str
ˆˆ; J
,
ˆˆJ K
nullable
ˆˆL T
:
ˆˆT U
false
ˆˆV [
)
ˆˆ[ \
,
ˆˆ\ ]
	CreatedOn
˜˜ 
=
˜˜ 
table
˜˜  %
.
˜˜% &
Column
˜˜& ,
<
˜˜, -
DateTime
˜˜- 5
>
˜˜5 6
(
˜˜6 7
type
˜˜7 ;
:
˜˜; <
$str
˜˜= H
,
˜˜H I
nullable
˜˜J R
:
˜˜R S
true
˜˜T X
)
˜˜X Y
,
˜˜Y Z
	CreatedBy
¯¯ 
=
¯¯ 
table
¯¯  %
.
¯¯% &
Column
¯¯& ,
<
¯¯, -
int
¯¯- 0
>
¯¯0 1
(
¯¯1 2
type
¯¯2 6
:
¯¯6 7
$str
¯¯8 =
,
¯¯= >
nullable
¯¯? G
:
¯¯G H
true
¯¯I M
)
¯¯M N
,
¯¯N O
	UpdatedOn
˘˘ 
=
˘˘ 
table
˘˘  %
.
˘˘% &
Column
˘˘& ,
<
˘˘, -
DateTime
˘˘- 5
>
˘˘5 6
(
˘˘6 7
type
˘˘7 ;
:
˘˘; <
$str
˘˘= H
,
˘˘H I
nullable
˘˘J R
:
˘˘R S
true
˘˘T X
)
˘˘X Y
,
˘˘Y Z
	UpdatedBy
˙˙ 
=
˙˙ 
table
˙˙  %
.
˙˙% &
Column
˙˙& ,
<
˙˙, -
int
˙˙- 0
>
˙˙0 1
(
˙˙1 2
type
˙˙2 6
:
˙˙6 7
$str
˙˙8 =
,
˙˙= >
nullable
˙˙? G
:
˙˙G H
true
˙˙I M
)
˙˙M N
,
˙˙N O
IsActive
˚˚ 
=
˚˚ 
table
˚˚ $
.
˚˚$ %
Column
˚˚% +
<
˚˚+ ,
bool
˚˚, 0
>
˚˚0 1
(
˚˚1 2
type
˚˚2 6
:
˚˚6 7
$str
˚˚8 =
,
˚˚= >
nullable
˚˚? G
:
˚˚G H
false
˚˚I N
)
˚˚N O
}
¸¸ 
,
¸¸ 
constraints
˝˝ 
:
˝˝ 
table
˝˝ "
=>
˝˝# %
{
˛˛ 
table
ˇˇ 
.
ˇˇ 

PrimaryKey
ˇˇ $
(
ˇˇ$ %
$str
ˇˇ% 2
,
ˇˇ2 3
x
ˇˇ4 5
=>
ˇˇ6 8
x
ˇˇ9 :
.
ˇˇ: ;
	ProjectId
ˇˇ; D
)
ˇˇD E
;
ˇˇE F
table
ÄÄ 
.
ÄÄ 

ForeignKey
ÄÄ $
(
ÄÄ$ %
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ =
,
ÅÅ= >
column
ÇÇ 
:
ÇÇ 
x
ÇÇ  !
=>
ÇÇ" $
x
ÇÇ% &
.
ÇÇ& '
	ProfileId
ÇÇ' 0
,
ÇÇ0 1
principalTable
ÉÉ &
:
ÉÉ& '
$str
ÉÉ( 1
,
ÉÉ1 2
principalColumn
ÑÑ '
:
ÑÑ' (
$str
ÑÑ) 4
,
ÑÑ4 5
onDelete
ÖÖ  
:
ÖÖ  !
ReferentialAction
ÖÖ" 3
.
ÖÖ3 4
NoAction
ÖÖ4 <
)
ÖÖ< =
;
ÖÖ= >
}
ÜÜ 
)
ÜÜ 
;
ÜÜ 
migrationBuilder
àà 
.
àà 
CreateTable
àà (
(
àà( )
name
ââ 
:
ââ 
$str
ââ 
,
ââ 
columns
ää 
:
ää 
table
ää 
=>
ää !
new
ää" %
{
ãã 
SkillId
åå 
=
åå 
table
åå #
.
åå# $
Column
åå$ *
<
åå* +
int
åå+ .
>
åå. /
(
åå/ 0
type
åå0 4
:
åå4 5
$str
åå6 ;
,
åå; <
nullable
åå= E
:
ååE F
false
ååG L
)
ååL M
.
çç 

Annotation
çç #
(
çç# $
$str
çç$ 8
,
çç8 9
$str
çç: @
)
çç@ A
,
ççA B
	ProfileId
éé 
=
éé 
table
éé  %
.
éé% &
Column
éé& ,
<
éé, -
int
éé- 0
>
éé0 1
(
éé1 2
type
éé2 6
:
éé6 7
$str
éé8 =
,
éé= >
nullable
éé? G
:
ééG H
false
ééI N
)
ééN O
,
ééO P
TechnologyId
èè  
=
èè! "
table
èè# (
.
èè( )
Column
èè) /
<
èè/ 0
int
èè0 3
>
èè3 4
(
èè4 5
type
èè5 9
:
èè9 :
$str
èè; @
,
èè@ A
nullable
èèB J
:
èèJ K
false
èèL Q
)
èèQ R
,
èèR S
DomainId
êê 
=
êê 
table
êê $
.
êê$ %
Column
êê% +
<
êê+ ,
int
êê, /
>
êê/ 0
(
êê0 1
type
êê1 5
:
êê5 6
$str
êê7 <
,
êê< =
nullable
êê> F
:
êêF G
false
êêH M
)
êêM N
,
êêN O
	CreatedOn
ëë 
=
ëë 
table
ëë  %
.
ëë% &
Column
ëë& ,
<
ëë, -
DateTime
ëë- 5
>
ëë5 6
(
ëë6 7
type
ëë7 ;
:
ëë; <
$str
ëë= H
,
ëëH I
nullable
ëëJ R
:
ëëR S
true
ëëT X
)
ëëX Y
,
ëëY Z
	CreatedBy
íí 
=
íí 
table
íí  %
.
íí% &
Column
íí& ,
<
íí, -
int
íí- 0
>
íí0 1
(
íí1 2
type
íí2 6
:
íí6 7
$str
íí8 =
,
íí= >
nullable
íí? G
:
ííG H
true
ííI M
)
ííM N
,
ííN O
	UpdatedOn
ìì 
=
ìì 
table
ìì  %
.
ìì% &
Column
ìì& ,
<
ìì, -
DateTime
ìì- 5
>
ìì5 6
(
ìì6 7
type
ìì7 ;
:
ìì; <
$str
ìì= H
,
ììH I
nullable
ììJ R
:
ììR S
true
ììT X
)
ììX Y
,
ììY Z
	UpdatedBy
îî 
=
îî 
table
îî  %
.
îî% &
Column
îî& ,
<
îî, -
int
îî- 0
>
îî0 1
(
îî1 2
type
îî2 6
:
îî6 7
$str
îî8 =
,
îî= >
nullable
îî? G
:
îîG H
true
îîI M
)
îîM N
,
îîN O
IsActive
ïï 
=
ïï 
table
ïï $
.
ïï$ %
Column
ïï% +
<
ïï+ ,
bool
ïï, 0
>
ïï0 1
(
ïï1 2
type
ïï2 6
:
ïï6 7
$str
ïï8 =
,
ïï= >
nullable
ïï? G
:
ïïG H
false
ïïI N
)
ïïN O
}
ññ 
,
ññ 
constraints
óó 
:
óó 
table
óó "
=>
óó# %
{
òò 
table
ôô 
.
ôô 

PrimaryKey
ôô $
(
ôô$ %
$str
ôô% 0
,
ôô0 1
x
ôô2 3
=>
ôô4 6
x
ôô7 8
.
ôô8 9
SkillId
ôô9 @
)
ôô@ A
;
ôôA B
table
öö 
.
öö 

ForeignKey
öö $
(
öö$ %
name
õõ 
:
õõ 
$str
õõ :
,
õõ: ;
column
úú 
:
úú 
x
úú  !
=>
úú" $
x
úú% &
.
úú& '
DomainId
úú' /
,
úú/ 0
principalTable
ùù &
:
ùù& '
$str
ùù( 1
,
ùù1 2
principalColumn
ûû '
:
ûû' (
$str
ûû) 3
,
ûû3 4
onDelete
üü  
:
üü  !
ReferentialAction
üü" 3
.
üü3 4
NoAction
üü4 <
)
üü< =
;
üü= >
table
†† 
.
†† 

ForeignKey
†† $
(
††$ %
name
°° 
:
°° 
$str
°° ;
,
°°; <
column
¢¢ 
:
¢¢ 
x
¢¢  !
=>
¢¢" $
x
¢¢% &
.
¢¢& '
	ProfileId
¢¢' 0
,
¢¢0 1
principalTable
££ &
:
££& '
$str
££( 1
,
££1 2
principalColumn
§§ '
:
§§' (
$str
§§) 4
,
§§4 5
onDelete
••  
:
••  !
ReferentialAction
••" 3
.
••3 4
NoAction
••4 <
)
••< =
;
••= >
table
¶¶ 
.
¶¶ 

ForeignKey
¶¶ $
(
¶¶$ %
name
ßß 
:
ßß 
$str
ßß C
,
ßßC D
column
®® 
:
®® 
x
®®  !
=>
®®" $
x
®®% &
.
®®& '
TechnologyId
®®' 3
,
®®3 4
principalTable
©© &
:
©©& '
$str
©©( 6
,
©©6 7
principalColumn
™™ '
:
™™' (
$str
™™) 7
,
™™7 8
onDelete
´´  
:
´´  !
ReferentialAction
´´" 3
.
´´3 4
NoAction
´´4 <
)
´´< =
;
´´= >
}
¨¨ 
)
¨¨ 
;
¨¨ 
migrationBuilder
ÆÆ 
.
ÆÆ 
CreateTable
ÆÆ (
(
ÆÆ( )
name
ØØ 
:
ØØ 
$str
ØØ &
,
ØØ& '
columns
∞∞ 
:
∞∞ 
table
∞∞ 
=>
∞∞ !
new
∞∞" %
{
±± 
BreakDuration_Id
≤≤ $
=
≤≤% &
table
≤≤' ,
.
≤≤, -
Column
≤≤- 3
<
≤≤3 4
int
≤≤4 7
>
≤≤7 8
(
≤≤8 9
type
≤≤9 =
:
≤≤= >
$str
≤≤? D
,
≤≤D E
nullable
≤≤F N
:
≤≤N O
false
≤≤P U
)
≤≤U V
.
≥≥ 

Annotation
≥≥ #
(
≥≥# $
$str
≥≥$ 8
,
≥≥8 9
$str
≥≥: @
)
≥≥@ A
,
≥≥A B
StartingDuration
¥¥ $
=
¥¥% &
table
¥¥' ,
.
¥¥, -
Column
¥¥- 3
<
¥¥3 4
DateTime
¥¥4 <
>
¥¥< =
(
¥¥= >
type
¥¥> B
:
¥¥B C
$str
¥¥D O
,
¥¥O P
nullable
¥¥Q Y
:
¥¥Y Z
false
¥¥[ `
)
¥¥` a
,
¥¥a b
EndingDuration
µµ "
=
µµ# $
table
µµ% *
.
µµ* +
Column
µµ+ 1
<
µµ1 2
DateTime
µµ2 :
>
µµ: ;
(
µµ; <
type
µµ< @
:
µµ@ A
$str
µµB M
,
µµM N
nullable
µµO W
:
µµW X
false
µµY ^
)
µµ^ _
,
µµ_ `
PersonalDetailsId
∂∂ %
=
∂∂& '
table
∂∂( -
.
∂∂- .
Column
∂∂. 4
<
∂∂4 5
int
∂∂5 8
>
∂∂8 9
(
∂∂9 :
type
∂∂: >
:
∂∂> ?
$str
∂∂@ E
,
∂∂E F
nullable
∂∂G O
:
∂∂O P
false
∂∂Q V
)
∂∂V W
,
∂∂W X
	CreatedOn
∑∑ 
=
∑∑ 
table
∑∑  %
.
∑∑% &
Column
∑∑& ,
<
∑∑, -
DateTime
∑∑- 5
>
∑∑5 6
(
∑∑6 7
type
∑∑7 ;
:
∑∑; <
$str
∑∑= H
,
∑∑H I
nullable
∑∑J R
:
∑∑R S
true
∑∑T X
)
∑∑X Y
,
∑∑Y Z
	CreatedBy
∏∏ 
=
∏∏ 
table
∏∏  %
.
∏∏% &
Column
∏∏& ,
<
∏∏, -
int
∏∏- 0
>
∏∏0 1
(
∏∏1 2
type
∏∏2 6
:
∏∏6 7
$str
∏∏8 =
,
∏∏= >
nullable
∏∏? G
:
∏∏G H
true
∏∏I M
)
∏∏M N
,
∏∏N O
	UpdatedOn
ππ 
=
ππ 
table
ππ  %
.
ππ% &
Column
ππ& ,
<
ππ, -
DateTime
ππ- 5
>
ππ5 6
(
ππ6 7
type
ππ7 ;
:
ππ; <
$str
ππ= H
,
ππH I
nullable
ππJ R
:
ππR S
true
ππT X
)
ππX Y
,
ππY Z
	UpdatedBy
∫∫ 
=
∫∫ 
table
∫∫  %
.
∫∫% &
Column
∫∫& ,
<
∫∫, -
int
∫∫- 0
>
∫∫0 1
(
∫∫1 2
type
∫∫2 6
:
∫∫6 7
$str
∫∫8 =
,
∫∫= >
nullable
∫∫? G
:
∫∫G H
true
∫∫I M
)
∫∫M N
,
∫∫N O
IsActive
ªª 
=
ªª 
table
ªª $
.
ªª$ %
Column
ªª% +
<
ªª+ ,
bool
ªª, 0
>
ªª0 1
(
ªª1 2
type
ªª2 6
:
ªª6 7
$str
ªª8 =
,
ªª= >
nullable
ªª? G
:
ªªG H
false
ªªI N
)
ªªN O
}
ºº 
,
ºº 
constraints
ΩΩ 
:
ΩΩ 
table
ΩΩ "
=>
ΩΩ# %
{
ææ 
table
øø 
.
øø 

PrimaryKey
øø $
(
øø$ %
$str
øø% 8
,
øø8 9
x
øø: ;
=>
øø< >
x
øø? @
.
øø@ A
BreakDuration_Id
øøA Q
)
øøQ R
;
øøR S
table
¿¿ 
.
¿¿ 

ForeignKey
¿¿ $
(
¿¿$ %
name
¡¡ 
:
¡¡ 
$str
¡¡ S
,
¡¡S T
column
¬¬ 
:
¬¬ 
x
¬¬  !
=>
¬¬" $
x
¬¬% &
.
¬¬& '
PersonalDetailsId
¬¬' 8
,
¬¬8 9
principalTable
√√ &
:
√√& '
$str
√√( 9
,
√√9 :
principalColumn
ƒƒ '
:
ƒƒ' (
$str
ƒƒ) <
,
ƒƒ< =
onDelete
≈≈  
:
≈≈  !
ReferentialAction
≈≈" 3
.
≈≈3 4
NoAction
≈≈4 <
)
≈≈< =
;
≈≈= >
}
∆∆ 
)
∆∆ 
;
∆∆ 
migrationBuilder
»» 
.
»» 
CreateTable
»» (
(
»»( )
name
…… 
:
…… 
$str
…… !
,
……! "
columns
   
:
   
table
   
=>
   !
new
  " %
{
ÀÀ 

LanguageId
ÃÃ 
=
ÃÃ  
table
ÃÃ! &
.
ÃÃ& '
Column
ÃÃ' -
<
ÃÃ- .
int
ÃÃ. 1
>
ÃÃ1 2
(
ÃÃ2 3
type
ÃÃ3 7
:
ÃÃ7 8
$str
ÃÃ9 >
,
ÃÃ> ?
nullable
ÃÃ@ H
:
ÃÃH I
false
ÃÃJ O
)
ÃÃO P
.
ÕÕ 

Annotation
ÕÕ #
(
ÕÕ# $
$str
ÕÕ$ 8
,
ÕÕ8 9
$str
ÕÕ: @
)
ÕÕ@ A
,
ÕÕA B
LanguageName
ŒŒ  
=
ŒŒ! "
table
ŒŒ# (
.
ŒŒ( )
Column
ŒŒ) /
<
ŒŒ/ 0
string
ŒŒ0 6
>
ŒŒ6 7
(
ŒŒ7 8
type
ŒŒ8 <
:
ŒŒ< =
$str
ŒŒ> M
,
ŒŒM N
nullable
ŒŒO W
:
ŒŒW X
false
ŒŒY ^
)
ŒŒ^ _
,
ŒŒ_ `
Read
œœ 
=
œœ 
table
œœ  
.
œœ  !
Column
œœ! '
<
œœ' (
bool
œœ( ,
>
œœ, -
(
œœ- .
type
œœ. 2
:
œœ2 3
$str
œœ4 9
,
œœ9 :
nullable
œœ; C
:
œœC D
false
œœE J
)
œœJ K
,
œœK L
Write
–– 
=
–– 
table
–– !
.
––! "
Column
––" (
<
––( )
bool
––) -
>
––- .
(
––. /
type
––/ 3
:
––3 4
$str
––5 :
,
––: ;
nullable
––< D
:
––D E
false
––F K
)
––K L
,
––L M
Speak
—— 
=
—— 
table
—— !
.
——! "
Column
——" (
<
——( )
bool
——) -
>
——- .
(
——. /
type
——/ 3
:
——3 4
$str
——5 :
,
——: ;
nullable
——< D
:
——D E
false
——F K
)
——K L
,
——L M
PersonalDetailsId
““ %
=
““& '
table
““( -
.
““- .
Column
““. 4
<
““4 5
int
““5 8
>
““8 9
(
““9 :
type
““: >
:
““> ?
$str
““@ E
,
““E F
nullable
““G O
:
““O P
false
““Q V
)
““V W
,
““W X
	CreatedOn
”” 
=
”” 
table
””  %
.
””% &
Column
””& ,
<
””, -
DateTime
””- 5
>
””5 6
(
””6 7
type
””7 ;
:
””; <
$str
””= H
,
””H I
nullable
””J R
:
””R S
true
””T X
)
””X Y
,
””Y Z
	CreatedBy
‘‘ 
=
‘‘ 
table
‘‘  %
.
‘‘% &
Column
‘‘& ,
<
‘‘, -
int
‘‘- 0
>
‘‘0 1
(
‘‘1 2
type
‘‘2 6
:
‘‘6 7
$str
‘‘8 =
,
‘‘= >
nullable
‘‘? G
:
‘‘G H
true
‘‘I M
)
‘‘M N
,
‘‘N O
	UpdatedOn
’’ 
=
’’ 
table
’’  %
.
’’% &
Column
’’& ,
<
’’, -
DateTime
’’- 5
>
’’5 6
(
’’6 7
type
’’7 ;
:
’’; <
$str
’’= H
,
’’H I
nullable
’’J R
:
’’R S
true
’’T X
)
’’X Y
,
’’Y Z
	UpdatedBy
÷÷ 
=
÷÷ 
table
÷÷  %
.
÷÷% &
Column
÷÷& ,
<
÷÷, -
int
÷÷- 0
>
÷÷0 1
(
÷÷1 2
type
÷÷2 6
:
÷÷6 7
$str
÷÷8 =
,
÷÷= >
nullable
÷÷? G
:
÷÷G H
true
÷÷I M
)
÷÷M N
,
÷÷N O
IsActive
◊◊ 
=
◊◊ 
table
◊◊ $
.
◊◊$ %
Column
◊◊% +
<
◊◊+ ,
bool
◊◊, 0
>
◊◊0 1
(
◊◊1 2
type
◊◊2 6
:
◊◊6 7
$str
◊◊8 =
,
◊◊= >
nullable
◊◊? G
:
◊◊G H
false
◊◊I N
)
◊◊N O
}
ÿÿ 
,
ÿÿ 
constraints
ŸŸ 
:
ŸŸ 
table
ŸŸ "
=>
ŸŸ# %
{
⁄⁄ 
table
€€ 
.
€€ 

PrimaryKey
€€ $
(
€€$ %
$str
€€% 3
,
€€3 4
x
€€5 6
=>
€€7 9
x
€€: ;
.
€€; <

LanguageId
€€< F
)
€€F G
;
€€G H
table
‹‹ 
.
‹‹ 

ForeignKey
‹‹ $
(
‹‹$ %
name
›› 
:
›› 
$str
›› N
,
››N O
column
ﬁﬁ 
:
ﬁﬁ 
x
ﬁﬁ  !
=>
ﬁﬁ" $
x
ﬁﬁ% &
.
ﬁﬁ& '
PersonalDetailsId
ﬁﬁ' 8
,
ﬁﬁ8 9
principalTable
ﬂﬂ &
:
ﬂﬂ& '
$str
ﬂﬂ( 9
,
ﬂﬂ9 :
principalColumn
‡‡ '
:
‡‡' (
$str
‡‡) <
,
‡‡< =
onDelete
··  
:
··  !
ReferentialAction
··" 3
.
··3 4
NoAction
··4 <
)
··< =
;
··= >
}
‚‚ 
)
‚‚ 
;
‚‚ 
migrationBuilder
‰‰ 
.
‰‰ 
CreateTable
‰‰ (
(
‰‰( )
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ $
,
ÂÂ$ %
columns
ÊÊ 
:
ÊÊ 
table
ÊÊ 
=>
ÊÊ !
new
ÊÊ" %
{
ÁÁ 
SocialMedia_Id
ËË "
=
ËË# $
table
ËË% *
.
ËË* +
Column
ËË+ 1
<
ËË1 2
int
ËË2 5
>
ËË5 6
(
ËË6 7
type
ËË7 ;
:
ËË; <
$str
ËË= B
,
ËËB C
nullable
ËËD L
:
ËËL M
false
ËËN S
)
ËËS T
.
ÈÈ 

Annotation
ÈÈ #
(
ÈÈ# $
$str
ÈÈ$ 8
,
ÈÈ8 9
$str
ÈÈ: @
)
ÈÈ@ A
,
ÈÈA B
SocialMedia_Name
ÍÍ $
=
ÍÍ% &
table
ÍÍ' ,
.
ÍÍ, -
Column
ÍÍ- 3
<
ÍÍ3 4
string
ÍÍ4 :
>
ÍÍ: ;
(
ÍÍ; <
type
ÍÍ< @
:
ÍÍ@ A
$str
ÍÍB Q
,
ÍÍQ R
nullable
ÍÍS [
:
ÍÍ[ \
false
ÍÍ] b
)
ÍÍb c
,
ÍÍc d
SocialMedia_Link
ÎÎ $
=
ÎÎ% &
table
ÎÎ' ,
.
ÎÎ, -
Column
ÎÎ- 3
<
ÎÎ3 4
string
ÎÎ4 :
>
ÎÎ: ;
(
ÎÎ; <
type
ÎÎ< @
:
ÎÎ@ A
$str
ÎÎB Q
,
ÎÎQ R
nullable
ÎÎS [
:
ÎÎ[ \
false
ÎÎ] b
)
ÎÎb c
,
ÎÎc d
PersonalDetailsId
ÏÏ %
=
ÏÏ& '
table
ÏÏ( -
.
ÏÏ- .
Column
ÏÏ. 4
<
ÏÏ4 5
int
ÏÏ5 8
>
ÏÏ8 9
(
ÏÏ9 :
type
ÏÏ: >
:
ÏÏ> ?
$str
ÏÏ@ E
,
ÏÏE F
nullable
ÏÏG O
:
ÏÏO P
false
ÏÏQ V
)
ÏÏV W
,
ÏÏW X
	CreatedOn
ÌÌ 
=
ÌÌ 
table
ÌÌ  %
.
ÌÌ% &
Column
ÌÌ& ,
<
ÌÌ, -
DateTime
ÌÌ- 5
>
ÌÌ5 6
(
ÌÌ6 7
type
ÌÌ7 ;
:
ÌÌ; <
$str
ÌÌ= H
,
ÌÌH I
nullable
ÌÌJ R
:
ÌÌR S
true
ÌÌT X
)
ÌÌX Y
,
ÌÌY Z
	CreatedBy
ÓÓ 
=
ÓÓ 
table
ÓÓ  %
.
ÓÓ% &
Column
ÓÓ& ,
<
ÓÓ, -
int
ÓÓ- 0
>
ÓÓ0 1
(
ÓÓ1 2
type
ÓÓ2 6
:
ÓÓ6 7
$str
ÓÓ8 =
,
ÓÓ= >
nullable
ÓÓ? G
:
ÓÓG H
true
ÓÓI M
)
ÓÓM N
,
ÓÓN O
	UpdatedOn
ÔÔ 
=
ÔÔ 
table
ÔÔ  %
.
ÔÔ% &
Column
ÔÔ& ,
<
ÔÔ, -
DateTime
ÔÔ- 5
>
ÔÔ5 6
(
ÔÔ6 7
type
ÔÔ7 ;
:
ÔÔ; <
$str
ÔÔ= H
,
ÔÔH I
nullable
ÔÔJ R
:
ÔÔR S
true
ÔÔT X
)
ÔÔX Y
,
ÔÔY Z
	UpdatedBy
 
=
 
table
  %
.
% &
Column
& ,
<
, -
int
- 0
>
0 1
(
1 2
type
2 6
:
6 7
$str
8 =
,
= >
nullable
? G
:
G H
true
I M
)
M N
,
N O
IsActive
ÒÒ 
=
ÒÒ 
table
ÒÒ $
.
ÒÒ$ %
Column
ÒÒ% +
<
ÒÒ+ ,
bool
ÒÒ, 0
>
ÒÒ0 1
(
ÒÒ1 2
type
ÒÒ2 6
:
ÒÒ6 7
$str
ÒÒ8 =
,
ÒÒ= >
nullable
ÒÒ? G
:
ÒÒG H
false
ÒÒI N
)
ÒÒN O
}
ÚÚ 
,
ÚÚ 
constraints
ÛÛ 
:
ÛÛ 
table
ÛÛ "
=>
ÛÛ# %
{
ÙÙ 
table
ıı 
.
ıı 

PrimaryKey
ıı $
(
ıı$ %
$str
ıı% 6
,
ıı6 7
x
ıı8 9
=>
ıı: <
x
ıı= >
.
ıı> ?
SocialMedia_Id
ıı? M
)
ııM N
;
ııN O
table
ˆˆ 
.
ˆˆ 

ForeignKey
ˆˆ $
(
ˆˆ$ %
name
˜˜ 
:
˜˜ 
$str
˜˜ Q
,
˜˜Q R
column
¯¯ 
:
¯¯ 
x
¯¯  !
=>
¯¯" $
x
¯¯% &
.
¯¯& '
PersonalDetailsId
¯¯' 8
,
¯¯8 9
principalTable
˘˘ &
:
˘˘& '
$str
˘˘( 9
,
˘˘9 :
principalColumn
˙˙ '
:
˙˙' (
$str
˙˙) <
,
˙˙< =
onDelete
˚˚  
:
˚˚  !
ReferentialAction
˚˚" 3
.
˚˚3 4
NoAction
˚˚4 <
)
˚˚< =
;
˚˚= >
}
¸¸ 
)
¸¸ 
;
¸¸ 
migrationBuilder
˛˛ 
.
˛˛ 

InsertData
˛˛ '
(
˛˛' (
table
ˇˇ 
:
ˇˇ 
$str
ˇˇ !
,
ˇˇ! "
columns
ÄÄ 
:
ÄÄ 
new
ÄÄ 
[
ÄÄ 
]
ÄÄ 
{
ÄÄ  
$str
ÄÄ! ,
,
ÄÄ, -
$str
ÄÄ. ;
,
ÄÄ; <
$str
ÄÄ= G
}
ÄÄH I
,
ÄÄI J
values
ÅÅ 
:
ÅÅ 
new
ÅÅ 
object
ÅÅ "
[
ÅÅ" #
,
ÅÅ# $
]
ÅÅ$ %
{
ÇÇ 
{
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
$str
ÉÉ  
,
ÉÉ  !
true
ÉÉ" &
}
ÉÉ' (
,
ÉÉ( )
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$str
ÑÑ 
,
ÑÑ  
true
ÑÑ! %
}
ÑÑ& '
,
ÑÑ' (
{
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
$str
ÖÖ 
,
ÖÖ 
true
ÖÖ  $
}
ÖÖ% &
,
ÖÖ& '
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
$str
ÜÜ 
,
ÜÜ 
true
ÜÜ #
}
ÜÜ$ %
,
ÜÜ% &
{
áá 
$num
áá 
,
áá 
$str
áá 
,
áá  
true
áá! %
}
áá& '
,
áá' (
{
àà 
$num
àà 
,
àà 
$str
àà 
,
àà 
true
àà  $
}
àà% &
,
àà& '
{
ââ 
$num
ââ 
,
ââ 
$str
ââ 
,
ââ 
true
ââ  $
}
ââ% &
,
ââ& '
{
ää 
$num
ää 
,
ää 
$str
ää %
,
ää% &
true
ää' +
}
ää, -
,
ää- .
{
ãã 
$num
ãã 
,
ãã 
$str
ãã 
,
ãã 
true
ãã  $
}
ãã% &
,
ãã& '
{
åå 
$num
åå 
,
åå 
$str
åå 
,
åå  
true
åå! %
}
åå& '
}
çç 
)
çç 
;
çç 
migrationBuilder
èè 
.
èè 

InsertData
èè '
(
èè' (
table
êê 
:
êê 
$str
êê %
,
êê% &
columns
ëë 
:
ëë 
new
ëë 
[
ëë 
]
ëë 
{
ëë  
$str
ëë! 0
,
ëë0 1
$str
ëë2 C
,
ëëC D
$str
ëëE O
}
ëëP Q
,
ëëQ R
values
íí 
:
íí 
new
íí 
object
íí "
[
íí" #
,
íí# $
]
íí$ %
{
ìì 
{
îî 
$num
îî 
,
îî 
$str
îî 
,
îî 
true
îî  $
}
îî% &
,
îî& '
{
ïï 
$num
ïï 
,
ïï 
$str
ïï 
,
ïï 
true
ïï #
}
ïï$ %
,
ïï% &
{
ññ 
$num
ññ 
,
ññ 
$str
ññ 
,
ññ 
true
ññ  $
}
ññ% &
,
ññ& '
{
óó 
$num
óó 
,
óó 
$str
óó 
,
óó 
true
óó  $
}
óó% &
,
óó& '
{
òò 
$num
òò 
,
òò 
$str
òò 
,
òò 
true
òò  $
}
òò% &
,
òò& '
{
ôô 
$num
ôô 
,
ôô 
$str
ôô 
,
ôô 
true
ôô  $
}
ôô% &
,
ôô& '
{
öö 
$num
öö 
,
öö 
$str
öö 
,
öö  
true
öö! %
}
öö& '
,
öö' (
{
õõ 
$num
õõ 
,
õõ 
$str
õõ 
,
õõ  
true
õõ! %
}
õõ& '
,
õõ' (
{
úú 
$num
úú 
,
úú 
$str
úú 
,
úú 
true
úú  $
}
úú% &
,
úú& '
{
ùù 
$num
ùù 
,
ùù 
$str
ùù 
,
ùù  
true
ùù! %
}
ùù& '
}
ûû 
)
ûû 
;
ûû 
migrationBuilder
†† 
.
†† 

InsertData
†† '
(
††' (
table
°° 
:
°° 
$str
°° %
,
°°% &
columns
¢¢ 
:
¢¢ 
new
¢¢ 
[
¢¢ 
]
¢¢ 
{
¢¢  
$str
¢¢! 0
,
¢¢0 1
$str
¢¢2 C
,
¢¢C D
$str
¢¢E O
}
¢¢P Q
,
¢¢Q R
values
££ 
:
££ 
new
££ 
object
££ "
[
££" #
,
££# $
]
££$ %
{
§§ 
{
•• 
$num
•• 
,
•• 
$str
•• 
,
•• 
true
•• #
}
••$ %
,
••% &
{
¶¶ 
$num
¶¶ 
,
¶¶ 
$str
¶¶  
,
¶¶  !
true
¶¶" &
}
¶¶' (
,
¶¶( )
{
ßß 
$num
ßß 
,
ßß 
$str
ßß 
,
ßß 
true
ßß  $
}
ßß% &
,
ßß& '
{
®® 
$num
®® 
,
®® 
$str
®® 
,
®® 
true
®® #
}
®®$ %
,
®®% &
{
©© 
$num
©© 
,
©© 
$str
©© 
,
©© 
true
©©  $
}
©©% &
,
©©& '
{
™™ 
$num
™™ 
,
™™ 
$str
™™ 
,
™™ 
true
™™ #
}
™™$ %
,
™™% &
{
´´ 
$num
´´ 
,
´´ 
$str
´´ 
,
´´ 
true
´´ #
}
´´$ %
,
´´% &
{
¨¨ 
$num
¨¨ 
,
¨¨ 
$str
¨¨ 
,
¨¨ 
true
¨¨ #
}
¨¨$ %
,
¨¨% &
{
≠≠ 
$num
≠≠ 
,
≠≠ 
$str
≠≠ 
,
≠≠ 
true
≠≠ #
}
≠≠$ %
,
≠≠% &
{
ÆÆ 
$num
ÆÆ 
,
ÆÆ 
$str
ÆÆ 
,
ÆÆ 
true
ÆÆ  $
}
ÆÆ% &
,
ÆÆ& '
{
ØØ 
$num
ØØ 
,
ØØ 
$str
ØØ 
,
ØØ  
true
ØØ! %
}
ØØ& '
,
ØØ' (
{
∞∞ 
$num
∞∞ 
,
∞∞ 
$str
∞∞ 
,
∞∞ 
true
∞∞  $
}
∞∞% &
}
±± 
)
±± 
;
±± 
migrationBuilder
≥≥ 
.
≥≥ 

InsertData
≥≥ '
(
≥≥' (
table
¥¥ 
:
¥¥ 
$str
¥¥  
,
¥¥  !
columns
µµ 
:
µµ 
new
µµ 
[
µµ 
]
µµ 
{
µµ  
$str
µµ! +
,
µµ+ ,
$str
µµ- 9
,
µµ9 :
$str
µµ; E
}
µµF G
,
µµG H
values
∂∂ 
:
∂∂ 
new
∂∂ 
object
∂∂ "
[
∂∂" #
,
∂∂# $
]
∂∂$ %
{
∑∑ 
{
∏∏ 
$num
∏∏ 
,
∏∏ 
$str
∏∏ 
,
∏∏ 
true
∏∏ #
}
∏∏$ %
,
∏∏% &
{
ππ 
$num
ππ 
,
ππ 
$str
ππ $
,
ππ$ %
true
ππ& *
}
ππ+ ,
,
ππ, -
{
∫∫ 
$num
∫∫ 
,
∫∫ 
$str
∫∫ 
,
∫∫ 
true
∫∫  $
}
∫∫% &
,
∫∫& '
{
ªª 
$num
ªª 
,
ªª 
$str
ªª !
,
ªª! "
true
ªª# '
}
ªª( )
,
ªª) *
{
ºº 
$num
ºº 
,
ºº 
$str
ºº 
,
ºº 
true
ºº #
}
ºº$ %
,
ºº% &
{
ΩΩ 
$num
ΩΩ 
,
ΩΩ 
$str
ΩΩ $
,
ΩΩ$ %
true
ΩΩ& *
}
ΩΩ+ ,
,
ΩΩ, -
{
ææ 
$num
ææ 
,
ææ 
$str
ææ &
,
ææ& '
true
ææ( ,
}
ææ- .
,
ææ. /
{
øø 
$num
øø 
,
øø 
$str
øø "
,
øø" #
true
øø$ (
}
øø) *
,
øø* +
{
¿¿ 
$num
¿¿ 
,
¿¿ 
$str
¿¿ 
,
¿¿  
true
¿¿! %
}
¿¿& '
,
¿¿' (
{
¡¡ 
$num
¡¡ 
,
¡¡ 
$str
¡¡ "
,
¡¡" #
true
¡¡$ (
}
¡¡) *
}
¬¬ 
)
¬¬ 
;
¬¬ 
migrationBuilder
ƒƒ 
.
ƒƒ 

InsertData
ƒƒ '
(
ƒƒ' (
table
≈≈ 
:
≈≈ 
$str
≈≈ 
,
≈≈  
columns
∆∆ 
:
∆∆ 
new
∆∆ 
[
∆∆ 
]
∆∆ 
{
∆∆  
$str
∆∆! +
,
∆∆+ ,
$str
∆∆- 9
,
∆∆9 :
$str
∆∆; E
}
∆∆F G
,
∆∆G H
values
«« 
:
«« 
new
«« 
object
«« "
[
««" #
,
««# $
]
««$ %
{
»» 
{
…… 
$num
…… 
,
…… 
$str
…… 
,
……  
true
……! %
}
……& '
,
……' (
{
   
$num
   
,
   
$str
   !
,
  ! "
true
  # '
}
  ( )
,
  ) *
{
ÀÀ 
$num
ÀÀ 
,
ÀÀ 
$str
ÀÀ !
,
ÀÀ! "
true
ÀÀ# '
}
ÀÀ( )
}
ÃÃ 
)
ÃÃ 
;
ÃÃ 
migrationBuilder
ŒŒ 
.
ŒŒ 

InsertData
ŒŒ '
(
ŒŒ' (
table
œœ 
:
œœ 
$str
œœ &
,
œœ& '
columns
–– 
:
–– 
new
–– 
[
–– 
]
–– 
{
––  
$str
––! 1
,
––1 2
$str
––3 =
,
––= >
$str
––? Q
}
––R S
,
––S T
values
—— 
:
—— 
new
—— 
object
—— "
[
——" #
,
——# $
]
——$ %
{
““ 
{
”” 
$num
”” 
,
”” 
true
”” 
,
”” 
$str
”” ,
}
””- .
,
””. /
{
‘‘ 
$num
‘‘ 
,
‘‘ 
true
‘‘ 
,
‘‘ 
$str
‘‘ (
}
‘‘) *
,
‘‘* +
{
’’ 
$num
’’ 
,
’’ 
true
’’ 
,
’’ 
$str
’’ (
}
’’) *
,
’’* +
{
÷÷ 
$num
÷÷ 
,
÷÷ 
true
÷÷ 
,
÷÷ 
$str
÷÷ &
}
÷÷' (
,
÷÷( )
{
◊◊ 
$num
◊◊ 
,
◊◊ 
true
◊◊ 
,
◊◊ 
$str
◊◊ '
}
◊◊( )
,
◊◊) *
{
ÿÿ 
$num
ÿÿ 
,
ÿÿ 
true
ÿÿ 
,
ÿÿ 
$str
ÿÿ #
}
ÿÿ$ %
,
ÿÿ% &
{
ŸŸ 
$num
ŸŸ 
,
ŸŸ 
true
ŸŸ 
,
ŸŸ 
$str
ŸŸ &
}
ŸŸ' (
,
ŸŸ( )
{
⁄⁄ 
$num
⁄⁄ 
,
⁄⁄ 
true
⁄⁄ 
,
⁄⁄ 
$str
⁄⁄ $
}
⁄⁄% &
,
⁄⁄& '
{
€€ 
$num
€€ 
,
€€ 
true
€€ 
,
€€ 
$str
€€ #
}
€€$ %
,
€€% &
{
‹‹ 
$num
‹‹ 
,
‹‹ 
true
‹‹ 
,
‹‹ 
$str
‹‹  &
}
‹‹' (
}
›› 
)
›› 
;
›› 
migrationBuilder
ﬂﬂ 
.
ﬂﬂ 

InsertData
ﬂﬂ '
(
ﬂﬂ' (
table
‡‡ 
:
‡‡ 
$str
‡‡ '
,
‡‡' (
columns
·· 
:
·· 
new
·· 
[
·· 
]
·· 
{
··  
$str
··! 2
,
··2 3
$str
··4 >
,
··> ?
$str
··@ S
}
··T U
,
··U V
values
‚‚ 
:
‚‚ 
new
‚‚ 
object
‚‚ "
[
‚‚" #
,
‚‚# $
]
‚‚$ %
{
„„ 
{
‰‰ 
$num
‰‰ 
,
‰‰ 
true
‰‰ 
,
‰‰ 
$str
‰‰ )
}
‰‰* +
,
‰‰+ ,
{
ÂÂ 
$num
ÂÂ 
,
ÂÂ 
true
ÂÂ 
,
ÂÂ 
$str
ÂÂ (
}
ÂÂ) *
,
ÂÂ* +
{
ÊÊ 
$num
ÊÊ 
,
ÊÊ 
true
ÊÊ 
,
ÊÊ 
$str
ÊÊ )
}
ÊÊ* +
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
migrationBuilder
ÈÈ 
.
ÈÈ 

InsertData
ÈÈ '
(
ÈÈ' (
table
ÍÍ 
:
ÍÍ 
$str
ÍÍ %
,
ÍÍ% &
columns
ÎÎ 
:
ÎÎ 
new
ÎÎ 
[
ÎÎ 
]
ÎÎ 
{
ÎÎ  
$str
ÎÎ! /
,
ÎÎ/ 0
$str
ÎÎ1 ;
,
ÎÎ; <
$str
ÎÎ= M
}
ÎÎN O
,
ÎÎO P
values
ÏÏ 
:
ÏÏ 
new
ÏÏ 
object
ÏÏ "
[
ÏÏ" #
,
ÏÏ# $
]
ÏÏ$ %
{
ÌÌ 
{
ÓÓ 
$num
ÓÓ 
,
ÓÓ 
true
ÓÓ 
,
ÓÓ 
$str
ÓÓ %
}
ÓÓ& '
,
ÓÓ' (
{
ÔÔ 
$num
ÔÔ 
,
ÔÔ 
true
ÔÔ 
,
ÔÔ 
$str
ÔÔ '
}
ÔÔ( )
,
ÔÔ) *
{
 
$num
 
,
 
true
 
,
 
$str
 %
}
& '
,
' (
{
ÒÒ 
$num
ÒÒ 
,
ÒÒ 
true
ÒÒ 
,
ÒÒ 
$str
ÒÒ $
}
ÒÒ% &
,
ÒÒ& '
{
ÚÚ 
$num
ÚÚ 
,
ÚÚ 
true
ÚÚ 
,
ÚÚ 
$str
ÚÚ $
}
ÚÚ% &
,
ÚÚ& '
{
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
true
ÛÛ 
,
ÛÛ 
$str
ÛÛ '
}
ÛÛ( )
,
ÛÛ) *
{
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
true
ÙÙ 
,
ÙÙ 
$str
ÙÙ $
}
ÙÙ% &
,
ÙÙ& '
{
ıı 
$num
ıı 
,
ıı 
true
ıı 
,
ıı 
$str
ıı (
}
ıı) *
,
ıı* +
{
ˆˆ 
$num
ˆˆ 
,
ˆˆ 
true
ˆˆ 
,
ˆˆ 
$str
ˆˆ "
}
ˆˆ# $
,
ˆˆ$ %
{
˜˜ 
$num
˜˜ 
,
˜˜ 
true
˜˜ 
,
˜˜ 
$str
˜˜  '
}
˜˜( )
}
¯¯ 
)
¯¯ 
;
¯¯ 
migrationBuilder
˙˙ 
.
˙˙ 

InsertData
˙˙ '
(
˙˙' (
table
˚˚ 
:
˚˚ 
$str
˚˚ (
,
˚˚( )
columns
¸¸ 
:
¸¸ 
new
¸¸ 
[
¸¸ 
]
¸¸ 
{
¸¸  
$str
¸¸! 4
,
¸¸4 5
$str
¸¸6 K
,
¸¸K L
$str
¸¸M W
}
¸¸X Y
,
¸¸Y Z
values
˝˝ 
:
˝˝ 
new
˝˝ 
object
˝˝ "
[
˝˝" #
,
˝˝# $
]
˝˝$ %
{
˛˛ 
{
ˇˇ 
$num
ˇˇ 
,
ˇˇ 
$str
ˇˇ !
,
ˇˇ! "
true
ˇˇ# '
}
ˇˇ( )
,
ˇˇ) *
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
$str
ÄÄ '
,
ÄÄ' (
true
ÄÄ) -
}
ÄÄ. /
}
ÅÅ 
)
ÅÅ 
;
ÅÅ 
migrationBuilder
ÉÉ 
.
ÉÉ 

InsertData
ÉÉ '
(
ÉÉ' (
table
ÑÑ 
:
ÑÑ 
$str
ÑÑ 
,
ÑÑ 
columns
ÖÖ 
:
ÖÖ 
new
ÖÖ 
[
ÖÖ 
]
ÖÖ 
{
ÖÖ  
$str
ÖÖ! )
,
ÖÖ) *
$str
ÖÖ+ :
,
ÖÖ: ;
$str
ÖÖ< G
,
ÖÖG H
$str
ÖÖI T
,
ÖÖT U
$str
ÖÖV e
,
ÖÖe f
$str
ÖÖg n
,
ÖÖn o
$str
ÖÖp z
,
ÖÖz {
$strÖÖ| Ü
,ÖÖÜ á
$strÖÖà ñ
,ÖÖñ ó
$strÖÖò û
,ÖÖû ü
$strÖÖ† ∞
,ÖÖ∞ ±
$strÖÖ≤ º
,ÖÖº Ω
$strÖÖæ ◊
,ÖÖ◊ ÿ
$strÖÖŸ ‰
,ÖÖ‰ Â
$strÖÖÊ Ò
,ÖÖÒ Ú
$strÖÖÛ ˝
}ÖÖ˛ ˇ
,ÖÖˇ Ä
values
ÜÜ 
:
ÜÜ 
new
ÜÜ 
object
ÜÜ "
[
ÜÜ" #
,
ÜÜ# $
]
ÜÜ$ %
{
áá 
{
àà 
$num
àà 
,
àà 
$num
àà 
,
àà 
null
àà  
,
àà  !
null
àà" &
,
àà& '
$num
àà( )
,
àà) *
$str
àà+ @
,
àà@ A
$num
ààB C
,
ààC D
true
ààE I
,
ààI J
$str
ààK W
,
ààW X
$str
ààY e
,
ààe f
$num
ààg h
,
ààh i
$str
ààj w
,
ààw x
$stràày Å
,ààÅ Ç
nullààÉ á
,ààá à
nullààâ ç
,ààç é
$strààè ö
}ààõ ú
,ààú ù
{
ââ 
$num
ââ 
,
ââ 
$num
ââ 
,
ââ 
null
ââ  
,
ââ  !
null
ââ" &
,
ââ& '
$num
ââ( )
,
ââ) *
$str
ââ+ >
,
ââ> ?
$num
ââ@ A
,
ââA B
true
ââC G
,
ââG H
$str
ââI U
,
ââU V
$str
ââW ^
,
ââ^ _
$num
ââ` a
,
ââa b
$str
ââc q
,
ââq r
$str
ââs ~
,
ââ~ 
nullââÄ Ñ
,ââÑ Ö
nullââÜ ä
,ââä ã
$strââå ñ
}ââó ò
,ââò ô
{
ää 
$num
ää 
,
ää 
$num
ää 
,
ää 
null
ää  
,
ää  !
null
ää" &
,
ää& '
$num
ää( )
,
ää) *
$str
ää+ >
,
ää> ?
$num
ää@ A
,
ääA B
true
ääC G
,
ääG H
$str
ääI U
,
ääU V
$str
ääW _
,
ää_ `
$num
ääa b
,
ääb c
$str
ääd q
,
ääq r
$str
ääs ~
,
ää~ 
nullääÄ Ñ
,ääÑ Ö
nullääÜ ä
,äää ã
$strääå ó
}ääò ô
,ääô ö
{
ãã 
$num
ãã 
,
ãã 
$num
ãã 
,
ãã 
null
ãã  
,
ãã  !
null
ãã" &
,
ãã& '
$num
ãã( )
,
ãã) *
$str
ãã+ @
,
ãã@ A
$num
ããB C
,
ããC D
true
ããE I
,
ããI J
$str
ããK W
,
ããW X
$str
ããY b
,
ããb c
$num
ããd e
,
ããe f
$str
ããg u
,
ããu v
$str
ããw 
,ãã Ä
nullããÅ Ö
,ããÖ Ü
nullããá ã
,ããã å
$strããç ô
}ããö õ
,ããõ ú
{
åå 
$num
åå 
,
åå 
$num
åå 
,
åå 
null
åå  
,
åå  !
null
åå" &
,
åå& '
$num
åå( )
,
åå) *
$str
åå+ ?
,
åå? @
$num
ååA B
,
ååB C
true
ååD H
,
ååH I
$str
ååJ V
,
ååV W
$str
ååX a
,
ååa b
$num
ååc d
,
ååd e
$str
ååf t
,
ååt u
$strååv Å
,ååÅ Ç
nullååÉ á
,ååá à
nullååâ ç
,ååç é
$strååè õ
}ååú ù
}
çç 
)
çç 
;
çç 
migrationBuilder
èè 
.
èè 

InsertData
èè '
(
èè' (
table
êê 
:
êê 
$str
êê  
,
êê  !
columns
ëë 
:
ëë 
new
ëë 
[
ëë 
]
ëë 
{
ëë  
$str
ëë! ,
,
ëë, -
$str
ëë. 9
,
ëë9 :
$str
ëë; F
,
ëëF G
$str
ëëH R
,
ëëR S
$str
ëëT e
,
ëëe f
$str
ëëg r
,
ëër s
$str
ëët |
}
ëë} ~
,
ëë~ 
values
íí 
:
íí 
new
íí 
object
íí "
[
íí" #
,
íí# $
]
íí$ %
{
ìì 
{
îî 
$num
îî 
,
îî 
null
îî 
,
îî 
null
îî #
,
îî# $
true
îî% )
,
îî) *
$num
îî+ ,
,
îî, -
null
îî. 2
,
îî2 3
$num
îî4 5
}
îî6 7
,
îî7 8
{
ïï 
$num
ïï 
,
ïï 
null
ïï 
,
ïï 
null
ïï #
,
ïï# $
true
ïï% )
,
ïï) *
$num
ïï+ ,
,
ïï, -
null
ïï. 2
,
ïï2 3
$num
ïï4 5
}
ïï6 7
,
ïï7 8
{
ññ 
$num
ññ 
,
ññ 
null
ññ 
,
ññ 
null
ññ #
,
ññ# $
true
ññ% )
,
ññ) *
$num
ññ+ ,
,
ññ, -
null
ññ. 2
,
ññ2 3
$num
ññ4 5
}
ññ6 7
,
ññ7 8
{
óó 
$num
óó 
,
óó 
null
óó 
,
óó 
null
óó #
,
óó# $
true
óó% )
,
óó) *
$num
óó+ ,
,
óó, -
null
óó. 2
,
óó2 3
$num
óó4 5
}
óó6 7
,
óó7 8
{
òò 
$num
òò 
,
òò 
null
òò 
,
òò 
null
òò #
,
òò# $
true
òò% )
,
òò) *
$num
òò+ ,
,
òò, -
null
òò. 2
,
òò2 3
$num
òò4 5
}
òò6 7
}
ôô 
)
ôô 
;
ôô 
migrationBuilder
õõ 
.
õõ 

InsertData
õõ '
(
õõ' (
table
úú 
:
úú 
$str
úú %
,
úú% &
columns
ùù 
:
ùù 
new
ùù 
[
ùù 
]
ùù 
{
ùù  
$str
ùù! 0
,
ùù0 1
$str
ùù2 D
,
ùùD E
$str
ùùF Y
,
ùùY Z
$str
ùù[ f
,
ùùf g
$str
ùùh s
,
ùùs t
$str
ùùu 
,ùù Ä
$strùùÅ å
,ùùå ç
$strùùé ô
,ùùô ö
$strùùõ ¶
,ùù¶ ß
$strùù® ∂
}ùù∑ ∏
,ùù∏ π
values
ûû 
:
ûû 
new
ûû 
object
ûû "
[
ûû" #
,
ûû# $
]
ûû$ %
{
üü 
{
†† 
$num
†† 
,
†† 
null
†† 
,
†† 
$num
††  
,
††  !
null
††" &
,
††& '
null
††( ,
,
††, -
true
††. 2
,
††2 3
$num
††4 5
,
††5 6
null
††7 ;
,
††; <
null
††= A
,
††A B
$str
††C H
}
††I J
,
††J K
{
°° 
$num
°° 
,
°° 
null
°° 
,
°° 
$num
°°  
,
°°  !
null
°°" &
,
°°& '
null
°°( ,
,
°°, -
true
°°. 2
,
°°2 3
$num
°°4 5
,
°°5 6
null
°°7 ;
,
°°; <
null
°°= A
,
°°A B
$str
°°C H
}
°°I J
,
°°J K
{
¢¢ 
$num
¢¢ 
,
¢¢ 
null
¢¢ 
,
¢¢ 
$num
¢¢  
,
¢¢  !
null
¢¢" &
,
¢¢& '
null
¢¢( ,
,
¢¢, -
true
¢¢. 2
,
¢¢2 3
$num
¢¢4 5
,
¢¢5 6
null
¢¢7 ;
,
¢¢; <
null
¢¢= A
,
¢¢A B
$str
¢¢C H
}
¢¢I J
,
¢¢J K
{
££ 
$num
££ 
,
££ 
null
££ 
,
££ 
$num
££  
,
££  !
null
££" &
,
££& '
null
££( ,
,
££, -
true
££. 2
,
££2 3
$num
££4 5
,
££5 6
null
££7 ;
,
££; <
null
££= A
,
££A B
$str
££C H
}
££I J
,
££J K
{
§§ 
$num
§§ 
,
§§ 
null
§§ 
,
§§ 
$num
§§  
,
§§  !
null
§§" &
,
§§& '
null
§§( ,
,
§§, -
true
§§. 2
,
§§2 3
$num
§§4 5
,
§§5 6
null
§§7 ;
,
§§; <
null
§§= A
,
§§A B
$str
§§C H
}
§§I J
}
•• 
)
•• 
;
•• 
migrationBuilder
ßß 
.
ßß 

InsertData
ßß '
(
ßß' (
table
®® 
:
®® 
$str
®® #
,
®®# $
columns
©© 
:
©© 
new
©© 
[
©© 
]
©© 
{
©©  
$str
©©! .
,
©©. /
$str
©©0 ;
,
©©; <
$str
©©= E
,
©©E F
$str
©©G R
,
©©R S
$str
©©T _
,
©©_ `
$str
©©a i
,
©©i j
$str
©©k s
,
©©s t
$str
©©u 
,©© Ä
$str©©Å ç
,©©ç é
$str©©è ö
,©©ö õ
$str©©ú ¶
,©©¶ ß
$str©©® ≥
,©©≥ ¥
$str©©µ ¿
}©©¡ ¬
,©©¬ √
values
™™ 
:
™™ 
new
™™ 
object
™™ "
[
™™" #
,
™™# $
]
™™$ %
{
´´ 
{
¨¨ 
$num
¨¨ 
,
¨¨ 
$num
¨¨ 
,
¨¨ 
$str
¨¨ !
,
¨¨! "
null
¨¨# '
,
¨¨' (
null
¨¨) -
,
¨¨- .
$str
¨¨/ 3
,
¨¨3 4
$num
¨¨5 9
,
¨¨9 :
true
¨¨; ?
,
¨¨? @
$num
¨¨A F
,
¨¨F G
$num
¨¨H I
,
¨¨I J
$num
¨¨K O
,
¨¨O P
null
¨¨Q U
,
¨¨U V
null
¨¨W [
}
¨¨\ ]
,
¨¨] ^
{
≠≠ 
$num
≠≠ 
,
≠≠ 
$num
≠≠ 
,
≠≠ 
$str
≠≠  
,
≠≠  !
null
≠≠" &
,
≠≠& '
null
≠≠( ,
,
≠≠, -
$str
≠≠. 5
,
≠≠5 6
$num
≠≠7 ;
,
≠≠; <
true
≠≠= A
,
≠≠A B
$num
≠≠C H
,
≠≠H I
$num
≠≠J K
,
≠≠K L
$num
≠≠M Q
,
≠≠Q R
null
≠≠S W
,
≠≠W X
null
≠≠Y ]
}
≠≠^ _
,
≠≠_ `
{
ÆÆ 
$num
ÆÆ 
,
ÆÆ 
$num
ÆÆ 
,
ÆÆ 
$str
ÆÆ !
,
ÆÆ! "
null
ÆÆ# '
,
ÆÆ' (
null
ÆÆ) -
,
ÆÆ- .
$str
ÆÆ/ 4
,
ÆÆ4 5
$num
ÆÆ6 :
,
ÆÆ: ;
true
ÆÆ< @
,
ÆÆ@ A
$num
ÆÆB E
,
ÆÆE F
$num
ÆÆG H
,
ÆÆH I
$num
ÆÆJ N
,
ÆÆN O
null
ÆÆP T
,
ÆÆT U
null
ÆÆV Z
}
ÆÆ[ \
,
ÆÆ\ ]
{
ØØ 
$num
ØØ 
,
ØØ 
$num
ØØ 
,
ØØ 
$str
ØØ "
,
ØØ" #
null
ØØ$ (
,
ØØ( )
null
ØØ* .
,
ØØ. /
$str
ØØ0 4
,
ØØ4 5
$num
ØØ6 :
,
ØØ: ;
true
ØØ< @
,
ØØ@ A
$num
ØØB G
,
ØØG H
$num
ØØI J
,
ØØJ K
$num
ØØL P
,
ØØP Q
null
ØØR V
,
ØØV W
null
ØØX \
}
ØØ] ^
,
ØØ^ _
{
∞∞ 
$num
∞∞ 
,
∞∞ 
$num
∞∞ 
,
∞∞ 
$str
∞∞  
,
∞∞  !
null
∞∞" &
,
∞∞& '
null
∞∞( ,
,
∞∞, -
$str
∞∞. 5
,
∞∞5 6
$num
∞∞7 ;
,
∞∞; <
true
∞∞= A
,
∞∞A B
$num
∞∞C H
,
∞∞H I
$num
∞∞J K
,
∞∞K L
$num
∞∞M Q
,
∞∞Q R
null
∞∞S W
,
∞∞W X
null
∞∞Y ]
}
∞∞^ _
}
±± 
)
±± 
;
±± 
migrationBuilder
≥≥ 
.
≥≥ 

InsertData
≥≥ '
(
≥≥' (
table
¥¥ 
:
¥¥ 
$str
¥¥ (
,
¥¥( )
columns
µµ 
:
µµ 
new
µµ 
[
µµ 
]
µµ 
{
µµ  
$str
µµ! 4
,
µµ4 5
$str
µµ6 A
,
µµA B
$str
µµC N
,
µµN O
$str
µµP ]
,
µµ] ^
$str
µµ_ n
,
µµn o
$str
µµp w
,
µµw x
$strµµy É
,µµÉ Ñ
$strµµÖ í
,µµí ì
$strµµî ü
,µµü †
$strµµ° ¨
,µµ¨ ≠
$strµµÆ π
,µµπ ∫
$strµµª ∆
,µµ∆ «
$strµµ» –
,µµ– —
$strµµ“ ‡
}µµ· ‚
,µµ‚ „
values
∂∂ 
:
∂∂ 
new
∂∂ 
object
∂∂ "
[
∂∂" #
,
∂∂# $
]
∂∂$ %
{
∑∑ 
{
∏∏ 
$num
∏∏ 
,
∏∏ 
null
∏∏ 
,
∏∏ 
null
∏∏ #
,
∏∏# $
new
∏∏% (
DateTime
∏∏) 1
(
∏∏1 2
$num
∏∏2 6
,
∏∏6 7
$num
∏∏8 :
,
∏∏: ;
$num
∏∏< >
,
∏∏> ?
$num
∏∏@ A
,
∏∏A B
$num
∏∏C D
,
∏∏D E
$num
∏∏F G
,
∏∏G H
$num
∏∏I J
,
∏∏J K
DateTimeKind
∏∏L X
.
∏∏X Y
Unspecified
∏∏Y d
)
∏∏d e
,
∏∏e f
new
∏∏g j
DateTime
∏∏k s
(
∏∏s t
$num
∏∏t x
,
∏∏x y
$num
∏∏z {
,
∏∏{ |
$num
∏∏} 
,∏∏ Ä
$num∏∏Å Ç
,∏∏Ç É
$num∏∏Ñ Ö
,∏∏Ö Ü
$num∏∏á à
,∏∏à â
$num∏∏ä ã
,∏∏ã å
DateTimeKind∏∏ç ô
.∏∏ô ö
Unspecified∏∏ö •
)∏∏• ¶
,∏∏¶ ß
null∏∏® ¨
,∏∏¨ ≠
true∏∏Æ ≤
,∏∏≤ ≥
$str∏∏¥ º
,∏∏º Ω
$str∏∏æ Œ
,∏∏Œ œ
$num∏∏– —
,∏∏— “
null∏∏” ◊
,∏∏◊ ÿ
null∏∏Ÿ ›
,∏∏› ﬁ
$num∏∏ﬂ ‡
,∏∏‡ ·
$str∏∏‚ Á
}∏∏Ë È
,∏∏È Í
{
ππ 
$num
ππ 
,
ππ 
null
ππ 
,
ππ 
null
ππ #
,
ππ# $
new
ππ% (
DateTime
ππ) 1
(
ππ1 2
$num
ππ2 6
,
ππ6 7
$num
ππ8 9
,
ππ9 :
$num
ππ; =
,
ππ= >
$num
ππ? @
,
ππ@ A
$num
ππB C
,
ππC D
$num
ππE F
,
ππF G
$num
ππH I
,
ππI J
DateTimeKind
ππK W
.
ππW X
Unspecified
ππX c
)
ππc d
,
ππd e
new
ππf i
DateTime
ππj r
(
ππr s
$num
ππs w
,
ππw x
$num
ππy z
,
ππz {
$num
ππ| ~
,
ππ~ 
$numππÄ Å
,ππÅ Ç
$numππÉ Ñ
,ππÑ Ö
$numππÜ á
,ππá à
$numππâ ä
,ππä ã
DateTimeKindππå ò
.ππò ô
Unspecifiedππô §
)ππ§ •
,ππ• ¶
nullππß ´
,ππ´ ¨
trueππ≠ ±
,ππ± ≤
$strππ≥ ª
,ππª º
$strππΩ Õ
,ππÕ Œ
$numππœ –
,ππ– —
nullππ“ ÷
,ππ÷ ◊
nullππÿ ‹
,ππ‹ ›
$numππﬁ ﬂ
,ππﬂ ‡
$strππ· Ê
}ππÁ Ë
,ππË È
{
∫∫ 
$num
∫∫ 
,
∫∫ 
null
∫∫ 
,
∫∫ 
null
∫∫ #
,
∫∫# $
new
∫∫% (
DateTime
∫∫) 1
(
∫∫1 2
$num
∫∫2 6
,
∫∫6 7
$num
∫∫8 :
,
∫∫: ;
$num
∫∫< >
,
∫∫> ?
$num
∫∫@ A
,
∫∫A B
$num
∫∫C D
,
∫∫D E
$num
∫∫F G
,
∫∫G H
$num
∫∫I J
,
∫∫J K
DateTimeKind
∫∫L X
.
∫∫X Y
Unspecified
∫∫Y d
)
∫∫d e
,
∫∫e f
new
∫∫g j
DateTime
∫∫k s
(
∫∫s t
$num
∫∫t x
,
∫∫x y
$num
∫∫z {
,
∫∫{ |
$num
∫∫} 
,∫∫ Ä
$num∫∫Å Ç
,∫∫Ç É
$num∫∫Ñ Ö
,∫∫Ö Ü
$num∫∫á à
,∫∫à â
$num∫∫ä ã
,∫∫ã å
DateTimeKind∫∫ç ô
.∫∫ô ö
Unspecified∫∫ö •
)∫∫• ¶
,∫∫¶ ß
null∫∫® ¨
,∫∫¨ ≠
true∫∫Æ ≤
,∫∫≤ ≥
$str∫∫¥ º
,∫∫º Ω
$str∫∫æ Œ
,∫∫Œ œ
$num∫∫– —
,∫∫— “
null∫∫” ◊
,∫∫◊ ÿ
null∫∫Ÿ ›
,∫∫› ﬁ
$num∫∫ﬂ ‡
,∫∫‡ ·
$str∫∫‚ Á
}∫∫Ë È
,∫∫È Í
{
ªª 
$num
ªª 
,
ªª 
null
ªª 
,
ªª 
null
ªª #
,
ªª# $
new
ªª% (
DateTime
ªª) 1
(
ªª1 2
$num
ªª2 6
,
ªª6 7
$num
ªª8 :
,
ªª: ;
$num
ªª< =
,
ªª= >
$num
ªª? @
,
ªª@ A
$num
ªªB C
,
ªªC D
$num
ªªE F
,
ªªF G
$num
ªªH I
,
ªªI J
DateTimeKind
ªªK W
.
ªªW X
Unspecified
ªªX c
)
ªªc d
,
ªªd e
new
ªªf i
DateTime
ªªj r
(
ªªr s
$num
ªªs w
,
ªªw x
$num
ªªy z
,
ªªz {
$num
ªª| ~
,
ªª~ 
$numªªÄ Å
,ªªÅ Ç
$numªªÉ Ñ
,ªªÑ Ö
$numªªÜ á
,ªªá à
$numªªâ ä
,ªªä ã
DateTimeKindªªå ò
.ªªò ô
Unspecifiedªªô §
)ªª§ •
,ªª• ¶
nullªªß ´
,ªª´ ¨
trueªª≠ ±
,ªª± ≤
$strªª≥ ª
,ªªª º
$strªªΩ Õ
,ªªÕ Œ
$numªªœ –
,ªª– —
nullªª“ ÷
,ªª÷ ◊
nullªªÿ ‹
,ªª‹ ›
$numªªﬁ ﬂ
,ªªﬂ ‡
$strªª· Ê
}ªªÁ Ë
,ªªË È
{
ºº 
$num
ºº 
,
ºº 
null
ºº 
,
ºº 
null
ºº #
,
ºº# $
new
ºº% (
DateTime
ºº) 1
(
ºº1 2
$num
ºº2 6
,
ºº6 7
$num
ºº8 9
,
ºº9 :
$num
ºº; =
,
ºº= >
$num
ºº? @
,
ºº@ A
$num
ººB C
,
ººC D
$num
ººE F
,
ººF G
$num
ººH I
,
ººI J
DateTimeKind
ººK W
.
ººW X
Unspecified
ººX c
)
ººc d
,
ººd e
new
ººf i
DateTime
ººj r
(
ººr s
$num
ººs w
,
ººw x
$num
ººy z
,
ººz {
$num
ºº| ~
,
ºº~ 
$numººÄ Å
,ººÅ Ç
$numººÉ Ñ
,ººÑ Ö
$numººÜ á
,ººá à
$numººâ ä
,ººä ã
DateTimeKindººå ò
.ººò ô
Unspecifiedººô §
)ºº§ •
,ºº• ¶
nullººß ´
,ºº´ ¨
trueºº≠ ±
,ºº± ≤
$strºº≥ ª
,ººª º
$strººΩ Õ
,ººÕ Œ
$numººœ –
,ºº– —
nullºº“ ÷
,ºº÷ ◊
nullººÿ ‹
,ºº‹ ›
$numººﬁ ﬂ
,ººﬂ ‡
$strºº· Ê
}ººÁ Ë
}
ΩΩ 
)
ΩΩ 
;
ΩΩ 
migrationBuilder
øø 
.
øø 

InsertData
øø '
(
øø' (
table
¿¿ 
:
¿¿ 
$str
¿¿ '
,
¿¿' (
columns
¡¡ 
:
¡¡ 
new
¡¡ 
[
¡¡ 
]
¡¡ 
{
¡¡  
$str
¡¡! 3
,
¡¡3 4
$str
¡¡5 C
,
¡¡C D
$str
¡¡E O
,
¡¡O P
$str
¡¡Q \
}
¡¡] ^
,
¡¡^ _
values
¬¬ 
:
¬¬ 
new
¬¬ 
object
¬¬ "
[
¬¬" #
,
¬¬# $
]
¬¬$ %
{
√√ 
{
ƒƒ 
$num
ƒƒ 
,
ƒƒ 
new
ƒƒ 
DateTime
ƒƒ %
(
ƒƒ% &
$num
ƒƒ& *
,
ƒƒ* +
$num
ƒƒ, .
,
ƒƒ. /
$num
ƒƒ0 2
,
ƒƒ2 3
$num
ƒƒ4 5
,
ƒƒ5 6
$num
ƒƒ7 8
,
ƒƒ8 9
$num
ƒƒ: ;
,
ƒƒ; <
$num
ƒƒ= >
,
ƒƒ> ?
DateTimeKind
ƒƒ@ L
.
ƒƒL M
Unspecified
ƒƒM X
)
ƒƒX Y
,
ƒƒY Z
true
ƒƒ[ _
,
ƒƒ_ `
$num
ƒƒa b
}
ƒƒc d
,
ƒƒd e
{
≈≈ 
$num
≈≈ 
,
≈≈ 
new
≈≈ 
DateTime
≈≈ %
(
≈≈% &
$num
≈≈& *
,
≈≈* +
$num
≈≈, -
,
≈≈- .
$num
≈≈/ 1
,
≈≈1 2
$num
≈≈3 4
,
≈≈4 5
$num
≈≈6 7
,
≈≈7 8
$num
≈≈9 :
,
≈≈: ;
$num
≈≈< =
,
≈≈= >
DateTimeKind
≈≈? K
.
≈≈K L
Unspecified
≈≈L W
)
≈≈W X
,
≈≈X Y
true
≈≈Z ^
,
≈≈^ _
$num
≈≈` a
}
≈≈b c
,
≈≈c d
{
∆∆ 
$num
∆∆ 
,
∆∆ 
new
∆∆ 
DateTime
∆∆ %
(
∆∆% &
$num
∆∆& *
,
∆∆* +
$num
∆∆, .
,
∆∆. /
$num
∆∆0 2
,
∆∆2 3
$num
∆∆4 5
,
∆∆5 6
$num
∆∆7 8
,
∆∆8 9
$num
∆∆: ;
,
∆∆; <
$num
∆∆= >
,
∆∆> ?
DateTimeKind
∆∆@ L
.
∆∆L M
Unspecified
∆∆M X
)
∆∆X Y
,
∆∆Y Z
true
∆∆[ _
,
∆∆_ `
$num
∆∆a b
}
∆∆c d
,
∆∆d e
{
«« 
$num
«« 
,
«« 
new
«« 
DateTime
«« %
(
««% &
$num
««& *
,
««* +
$num
««, .
,
««. /
$num
««0 2
,
««2 3
$num
««4 5
,
««5 6
$num
««7 8
,
««8 9
$num
««: ;
,
««; <
$num
««= >
,
««> ?
DateTimeKind
««@ L
.
««L M
Unspecified
««M X
)
««X Y
,
««Y Z
true
««[ _
,
««_ `
$num
««a b
}
««c d
}
»» 
)
»» 
;
»» 
migrationBuilder
   
.
   

InsertData
   '
(
  ' (
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ !
,
ÀÀ! "
columns
ÃÃ 
:
ÃÃ 
new
ÃÃ 
[
ÃÃ 
]
ÃÃ 
{
ÃÃ  
$str
ÃÃ! ,
,
ÃÃ, -
$str
ÃÃ. 9
,
ÃÃ9 :
$str
ÃÃ; F
,
ÃÃF G
$str
ÃÃH U
,
ÃÃU V
$str
ÃÃW d
,
ÃÃd e
$str
ÃÃf r
,
ÃÃr s
$str
ÃÃt ~
,
ÃÃ~ 
$strÃÃÄ ã
,ÃÃã å
$strÃÃç °
,ÃÃ° ¢
$strÃÃ£ ∞
,ÃÃ∞ ±
$strÃÃ≤ ¡
,ÃÃ¡ ¬
$strÃÃ√ —
,ÃÃ— “
$strÃÃ” ﬁ
,ÃÃﬁ ﬂ
$strÃÃ‡ Î
,ÃÃÎ Ï
$strÃÃÌ ¯
}ÃÃ˘ ˙
,ÃÃ˙ ˚
values
ÕÕ 
:
ÕÕ 
new
ÕÕ 
object
ÕÕ "
[
ÕÕ" #
,
ÕÕ# $
]
ÕÕ$ %
{
ŒŒ 
{
œœ 
$num
œœ 
,
œœ 
null
œœ 
,
œœ 
null
œœ #
,
œœ# $
$str
œœ% )
,
œœ) *
$str
œœ+ 4
,
œœ4 5
$num
œœ6 :
,
œœ: ;
true
œœ< @
,
œœ@ A
$num
œœB C
,
œœC D
$str
œœE W
,
œœW X
$str
œœY ^
,
œœ^ _
$str
œœ` i
,
œœi j
$num
œœk o
,
œœo p
$str
œœq x
,
œœx y
null
œœz ~
,
œœ~ 
nullœœÄ Ñ
}œœÖ Ü
,œœÜ á
{
–– 
$num
–– 
,
–– 
null
–– 
,
–– 
null
–– #
,
––# $
$str
––% *
,
––* +
$str
––, 2
,
––2 3
$num
––4 8
,
––8 9
true
––: >
,
––> ?
$num
––@ A
,
––A B
$str
––C X
,
––X Y
$str
––Z _
,
––_ `
$str
––a h
,
––h i
$num
––j n
,
––n o
$str
––p z
,
––z {
null––| Ä
,––Ä Å
null––Ç Ü
}––á à
,––à â
{
—— 
$num
—— 
,
—— 
null
—— 
,
—— 
null
—— #
,
——# $
$str
——% )
,
——) *
$str
——+ 1
,
——1 2
$num
——3 7
,
——7 8
true
——9 =
,
——= >
$num
——? @
,
——@ A
$str
——B U
,
——U V
$str
——W \
,
——\ ]
$str
——^ g
,
——g h
$num
——i m
,
——m n
$str
——o u
,
——u v
null
——w {
,
——{ |
null——} Å
}——Ç É
,——É Ñ
{
““ 
$num
““ 
,
““ 
null
““ 
,
““ 
null
““ #
,
““# $
$str
““% )
,
““) *
$str
““+ 5
,
““5 6
$num
““7 ;
,
““; <
true
““= A
,
““A B
$num
““C D
,
““D E
$str
““F Z
,
““Z [
$str
““\ a
,
““a b
$str
““c m
,
““m n
$num
““o s
,
““s t
$str
““u |
,
““| }
null““~ Ç
,““Ç É
null““Ñ à
}““â ä
,““ä ã
{
”” 
$num
”” 
,
”” 
null
”” 
,
”” 
null
”” #
,
””# $
$str
””% )
,
””) *
$str
””+ 6
,
””6 7
$num
””8 <
,
””< =
true
””> B
,
””B C
$num
””D E
,
””E F
$str
””G Y
,
””Y Z
$str
””[ `
,
””` a
$str
””b l
,
””l m
$num
””n r
,
””r s
$str
””t z
,
””z {
null””| Ä
,””Ä Å
null””Ç Ü
}””á à
}
‘‘ 
)
‘‘ 
;
‘‘ 
migrationBuilder
÷÷ 
.
÷÷ 

InsertData
÷÷ '
(
÷÷' (
table
◊◊ 
:
◊◊ 
$str
◊◊ 
,
◊◊  
columns
ÿÿ 
:
ÿÿ 
new
ÿÿ 
[
ÿÿ 
]
ÿÿ 
{
ÿÿ  
$str
ÿÿ! *
,
ÿÿ* +
$str
ÿÿ, 7
,
ÿÿ7 8
$str
ÿÿ9 D
,
ÿÿD E
$str
ÿÿF P
,
ÿÿP Q
$str
ÿÿR \
,
ÿÿ\ ]
$str
ÿÿ^ i
,
ÿÿi j
$str
ÿÿk y
,
ÿÿy z
$strÿÿ{ Ü
,ÿÿÜ á
$strÿÿà ì
}ÿÿî ï
,ÿÿï ñ
values
ŸŸ 
:
ŸŸ 
new
ŸŸ 
object
ŸŸ "
[
ŸŸ" #
,
ŸŸ# $
]
ŸŸ$ %
{
⁄⁄ 
{
€€ 
$num
€€ 
,
€€ 
null
€€ 
,
€€ 
null
€€ #
,
€€# $
$num
€€% &
,
€€& '
true
€€( ,
,
€€, -
$num
€€. /
,
€€/ 0
$num
€€1 2
,
€€2 3
null
€€4 8
,
€€8 9
null
€€: >
}
€€? @
,
€€@ A
{
‹‹ 
$num
‹‹ 
,
‹‹ 
null
‹‹ 
,
‹‹ 
null
‹‹ #
,
‹‹# $
$num
‹‹% &
,
‹‹& '
true
‹‹( ,
,
‹‹, -
$num
‹‹. /
,
‹‹/ 0
$num
‹‹1 2
,
‹‹2 3
null
‹‹4 8
,
‹‹8 9
null
‹‹: >
}
‹‹? @
,
‹‹@ A
{
›› 
$num
›› 
,
›› 
null
›› 
,
›› 
null
›› #
,
››# $
$num
››% &
,
››& '
true
››( ,
,
››, -
$num
››. /
,
››/ 0
$num
››1 2
,
››2 3
null
››4 8
,
››8 9
null
››: >
}
››? @
,
››@ A
{
ﬁﬁ 
$num
ﬁﬁ 
,
ﬁﬁ 
null
ﬁﬁ 
,
ﬁﬁ 
null
ﬁﬁ #
,
ﬁﬁ# $
$num
ﬁﬁ% &
,
ﬁﬁ& '
true
ﬁﬁ( ,
,
ﬁﬁ, -
$num
ﬁﬁ. /
,
ﬁﬁ/ 0
$num
ﬁﬁ1 2
,
ﬁﬁ2 3
null
ﬁﬁ4 8
,
ﬁﬁ8 9
null
ﬁﬁ: >
}
ﬁﬁ? @
,
ﬁﬁ@ A
{
ﬂﬂ 
$num
ﬂﬂ 
,
ﬂﬂ 
null
ﬂﬂ 
,
ﬂﬂ 
null
ﬂﬂ #
,
ﬂﬂ# $
$num
ﬂﬂ% &
,
ﬂﬂ& '
true
ﬂﬂ( ,
,
ﬂﬂ, -
$num
ﬂﬂ. /
,
ﬂﬂ/ 0
$num
ﬂﬂ1 2
,
ﬂﬂ2 3
null
ﬂﬂ4 8
,
ﬂﬂ8 9
null
ﬂﬂ: >
}
ﬂﬂ? @
}
‡‡ 
)
‡‡ 
;
‡‡ 
migrationBuilder
‚‚ 
.
‚‚ 

InsertData
‚‚ '
(
‚‚' (
table
„„ 
:
„„ 
$str
„„ %
,
„„% &
columns
‰‰ 
:
‰‰ 
new
‰‰ 
[
‰‰ 
]
‰‰ 
{
‰‰  
$str
‰‰! 1
,
‰‰1 2
$str
‰‰3 >
,
‰‰> ?
$str
‰‰@ K
,
‰‰K L
$str
‰‰M W
,
‰‰W X
$str
‰‰Y l
,
‰‰l m
$str‰‰n Ä
,‰‰Ä Å
$str‰‰Ç î
,‰‰î ï
$str‰‰ñ °
,‰‰° ¢
$str‰‰£ Æ
}‰‰Ø ∞
,‰‰∞ ±
values
ÂÂ 
:
ÂÂ 
new
ÂÂ 
object
ÂÂ "
[
ÂÂ" #
,
ÂÂ# $
]
ÂÂ$ %
{
ÊÊ 
{
ÁÁ 
$num
ÁÁ 
,
ÁÁ 
null
ÁÁ 
,
ÁÁ 
null
ÁÁ #
,
ÁÁ# $
true
ÁÁ% )
,
ÁÁ) *
$num
ÁÁ+ ,
,
ÁÁ, -
$str
ÁÁ. @
,
ÁÁ@ A
$str
ÁÁB L
,
ÁÁL M
null
ÁÁN R
,
ÁÁR S
null
ÁÁT X
}
ÁÁY Z
,
ÁÁZ [
{
ËË 
$num
ËË 
,
ËË 
null
ËË 
,
ËË 
null
ËË #
,
ËË# $
true
ËË% )
,
ËË) *
$num
ËË+ ,
,
ËË, -
$str
ËË. @
,
ËË@ A
$str
ËËB L
,
ËËL M
null
ËËN R
,
ËËR S
null
ËËT X
}
ËËY Z
,
ËËZ [
{
ÈÈ 
$num
ÈÈ 
,
ÈÈ 
null
ÈÈ 
,
ÈÈ 
null
ÈÈ #
,
ÈÈ# $
true
ÈÈ% )
,
ÈÈ) *
$num
ÈÈ+ ,
,
ÈÈ, -
$str
ÈÈ. @
,
ÈÈ@ A
$str
ÈÈB L
,
ÈÈL M
null
ÈÈN R
,
ÈÈR S
null
ÈÈT X
}
ÈÈY Z
,
ÈÈZ [
{
ÍÍ 
$num
ÍÍ 
,
ÍÍ 
null
ÍÍ 
,
ÍÍ 
null
ÍÍ #
,
ÍÍ# $
true
ÍÍ% )
,
ÍÍ) *
$num
ÍÍ+ ,
,
ÍÍ, -
$str
ÍÍ. ?
,
ÍÍ? @
$str
ÍÍA J
,
ÍÍJ K
null
ÍÍL P
,
ÍÍP Q
null
ÍÍR V
}
ÍÍW X
,
ÍÍX Y
{
ÎÎ 
$num
ÎÎ 
,
ÎÎ 
null
ÎÎ 
,
ÎÎ 
null
ÎÎ #
,
ÎÎ# $
true
ÎÎ% )
,
ÎÎ) *
$num
ÎÎ+ ,
,
ÎÎ, -
$str
ÎÎ. A
,
ÎÎA B
$str
ÎÎC N
,
ÎÎN O
null
ÎÎP T
,
ÎÎT U
null
ÎÎV Z
}
ÎÎ[ \
}
ÏÏ 
)
ÏÏ 
;
ÏÏ 
migrationBuilder
ÓÓ 
.
ÓÓ 

InsertData
ÓÓ '
(
ÓÓ' (
table
ÔÔ 
:
ÔÔ 
$str
ÔÔ '
,
ÔÔ' (
columns
 
:
 
new
 
[
 
]
 
{
  
$str
! 3
,
3 4
$str
5 @
,
@ A
$str
B M
,
M N
$str
O _
,
_ `
$str
a k
,
k l
$strm Ä
,Ä Å
$strÇ î
,î ï
$strñ °
,° ¢
$str£ Æ
}Ø ∞
,∞ ±
values
ÒÒ 
:
ÒÒ 
new
ÒÒ 
object
ÒÒ "
[
ÒÒ" #
,
ÒÒ# $
]
ÒÒ$ %
{
ÚÚ 
{
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
null
ÛÛ 
,
ÛÛ 
null
ÛÛ #
,
ÛÛ# $
new
ÛÛ% (
DateTime
ÛÛ) 1
(
ÛÛ1 2
$num
ÛÛ2 6
,
ÛÛ6 7
$num
ÛÛ8 9
,
ÛÛ9 :
$num
ÛÛ; =
,
ÛÛ= >
$num
ÛÛ? @
,
ÛÛ@ A
$num
ÛÛB C
,
ÛÛC D
$num
ÛÛE F
,
ÛÛF G
$num
ÛÛH I
,
ÛÛI J
DateTimeKind
ÛÛK W
.
ÛÛW X
Unspecified
ÛÛX c
)
ÛÛc d
,
ÛÛd e
true
ÛÛf j
,
ÛÛj k
$num
ÛÛl m
,
ÛÛm n
new
ÛÛo r
DateTime
ÛÛs {
(
ÛÛ{ |
$numÛÛ| Ä
,ÛÛÄ Å
$numÛÛÇ É
,ÛÛÉ Ñ
$numÛÛÖ Ü
,ÛÛÜ á
$numÛÛà â
,ÛÛâ ä
$numÛÛã å
,ÛÛå ç
$numÛÛé è
,ÛÛè ê
$numÛÛë í
,ÛÛí ì
DateTimeKindÛÛî †
.ÛÛ† °
UnspecifiedÛÛ° ¨
)ÛÛ¨ ≠
,ÛÛ≠ Æ
nullÛÛØ ≥
,ÛÛ≥ ¥
nullÛÛµ π
}ÛÛ∫ ª
,ÛÛª º
{
ÙÙ 
$num
ÙÙ 
,
ÙÙ 
null
ÙÙ 
,
ÙÙ 
null
ÙÙ #
,
ÙÙ# $
new
ÙÙ% (
DateTime
ÙÙ) 1
(
ÙÙ1 2
$num
ÙÙ2 6
,
ÙÙ6 7
$num
ÙÙ8 9
,
ÙÙ9 :
$num
ÙÙ; =
,
ÙÙ= >
$num
ÙÙ? @
,
ÙÙ@ A
$num
ÙÙB C
,
ÙÙC D
$num
ÙÙE F
,
ÙÙF G
$num
ÙÙH I
,
ÙÙI J
DateTimeKind
ÙÙK W
.
ÙÙW X
Unspecified
ÙÙX c
)
ÙÙc d
,
ÙÙd e
true
ÙÙf j
,
ÙÙj k
$num
ÙÙl m
,
ÙÙm n
new
ÙÙo r
DateTime
ÙÙs {
(
ÙÙ{ |
$numÙÙ| Ä
,ÙÙÄ Å
$numÙÙÇ É
,ÙÙÉ Ñ
$numÙÙÖ á
,ÙÙá à
$numÙÙâ ä
,ÙÙä ã
$numÙÙå ç
,ÙÙç é
$numÙÙè ê
,ÙÙê ë
$numÙÙí ì
,ÙÙì î
DateTimeKindÙÙï °
.ÙÙ° ¢
UnspecifiedÙÙ¢ ≠
)ÙÙ≠ Æ
,ÙÙÆ Ø
nullÙÙ∞ ¥
,ÙÙ¥ µ
nullÙÙ∂ ∫
}ÙÙª º
,ÙÙº Ω
{
ıı 
$num
ıı 
,
ıı 
null
ıı 
,
ıı 
null
ıı #
,
ıı# $
new
ıı% (
DateTime
ıı) 1
(
ıı1 2
$num
ıı2 6
,
ıı6 7
$num
ıı8 :
,
ıı: ;
$num
ıı< >
,
ıı> ?
$num
ıı@ A
,
ııA B
$num
ııC D
,
ııD E
$num
ııF G
,
ııG H
$num
ııI J
,
ııJ K
DateTimeKind
ııL X
.
ııX Y
Unspecified
ııY d
)
ııd e
,
ııe f
true
ııg k
,
ıık l
$num
ıım n
,
ıın o
new
ııp s
DateTime
ııt |
(
ıı| }
$numıı} Å
,ııÅ Ç
$numııÉ Ñ
,ııÑ Ö
$numııÜ à
,ııà â
$numııä ã
,ııã å
$numııç é
,ııé è
$numııê ë
,ııë í
$numııì î
,ııî ï
DateTimeKindııñ ¢
.ıı¢ £
Unspecifiedıı£ Æ
)ııÆ Ø
,ııØ ∞
nullıı± µ
,ııµ ∂
nullıı∑ ª
}ııº Ω
,ııΩ æ
{
ˆˆ 
$num
ˆˆ 
,
ˆˆ 
null
ˆˆ 
,
ˆˆ 
null
ˆˆ #
,
ˆˆ# $
new
ˆˆ% (
DateTime
ˆˆ) 1
(
ˆˆ1 2
$num
ˆˆ2 6
,
ˆˆ6 7
$num
ˆˆ8 9
,
ˆˆ9 :
$num
ˆˆ; =
,
ˆˆ= >
$num
ˆˆ? @
,
ˆˆ@ A
$num
ˆˆB C
,
ˆˆC D
$num
ˆˆE F
,
ˆˆF G
$num
ˆˆH I
,
ˆˆI J
DateTimeKind
ˆˆK W
.
ˆˆW X
Unspecified
ˆˆX c
)
ˆˆc d
,
ˆˆd e
true
ˆˆf j
,
ˆˆj k
$num
ˆˆl m
,
ˆˆm n
new
ˆˆo r
DateTime
ˆˆs {
(
ˆˆ{ |
$numˆˆ| Ä
,ˆˆÄ Å
$numˆˆÇ É
,ˆˆÉ Ñ
$numˆˆÖ á
,ˆˆá à
$numˆˆâ ä
,ˆˆä ã
$numˆˆå ç
,ˆˆç é
$numˆˆè ê
,ˆˆê ë
$numˆˆí ì
,ˆˆì î
DateTimeKindˆˆï °
.ˆˆ° ¢
Unspecifiedˆˆ¢ ≠
)ˆˆ≠ Æ
,ˆˆÆ Ø
nullˆˆ∞ ¥
,ˆˆ¥ µ
nullˆˆ∂ ∫
}ˆˆª º
,ˆˆº Ω
{
˜˜ 
$num
˜˜ 
,
˜˜ 
null
˜˜ 
,
˜˜ 
null
˜˜ #
,
˜˜# $
new
˜˜% (
DateTime
˜˜) 1
(
˜˜1 2
$num
˜˜2 6
,
˜˜6 7
$num
˜˜8 9
,
˜˜9 :
$num
˜˜; =
,
˜˜= >
$num
˜˜? @
,
˜˜@ A
$num
˜˜B C
,
˜˜C D
$num
˜˜E F
,
˜˜F G
$num
˜˜H I
,
˜˜I J
DateTimeKind
˜˜K W
.
˜˜W X
Unspecified
˜˜X c
)
˜˜c d
,
˜˜d e
true
˜˜f j
,
˜˜j k
$num
˜˜l m
,
˜˜m n
new
˜˜o r
DateTime
˜˜s {
(
˜˜{ |
$num˜˜| Ä
,˜˜Ä Å
$num˜˜Ç Ñ
,˜˜Ñ Ö
$num˜˜Ü à
,˜˜à â
$num˜˜ä ã
,˜˜ã å
$num˜˜ç é
,˜˜é è
$num˜˜ê ë
,˜˜ë í
$num˜˜ì î
,˜˜î ï
DateTimeKind˜˜ñ ¢
.˜˜¢ £
Unspecified˜˜£ Æ
)˜˜Æ Ø
,˜˜Ø ∞
null˜˜± µ
,˜˜µ ∂
null˜˜∑ ª
}˜˜º Ω
,˜˜Ω æ
{
¯¯ 
$num
¯¯ 
,
¯¯ 
null
¯¯ 
,
¯¯ 
null
¯¯ #
,
¯¯# $
new
¯¯% (
DateTime
¯¯) 1
(
¯¯1 2
$num
¯¯2 6
,
¯¯6 7
$num
¯¯8 9
,
¯¯9 :
$num
¯¯; =
,
¯¯= >
$num
¯¯? @
,
¯¯@ A
$num
¯¯B C
,
¯¯C D
$num
¯¯E F
,
¯¯F G
$num
¯¯H I
,
¯¯I J
DateTimeKind
¯¯K W
.
¯¯W X
Unspecified
¯¯X c
)
¯¯c d
,
¯¯d e
true
¯¯f j
,
¯¯j k
$num
¯¯l m
,
¯¯m n
new
¯¯o r
DateTime
¯¯s {
(
¯¯{ |
$num¯¯| Ä
,¯¯Ä Å
$num¯¯Ç Ñ
,¯¯Ñ Ö
$num¯¯Ü à
,¯¯à â
$num¯¯ä ã
,¯¯ã å
$num¯¯ç é
,¯¯é è
$num¯¯ê ë
,¯¯ë í
$num¯¯ì î
,¯¯î ï
DateTimeKind¯¯ñ ¢
.¯¯¢ £
Unspecified¯¯£ Æ
)¯¯Æ Ø
,¯¯Ø ∞
null¯¯± µ
,¯¯µ ∂
null¯¯∑ ª
}¯¯º Ω
}
˘˘ 
)
˘˘ 
;
˘˘ 
migrationBuilder
˚˚ 
.
˚˚ 

InsertData
˚˚ '
(
˚˚' (
table
¸¸ 
:
¸¸ 
$str
¸¸ "
,
¸¸" #
columns
˝˝ 
:
˝˝ 
new
˝˝ 
[
˝˝ 
]
˝˝ 
{
˝˝  
$str
˝˝! -
,
˝˝- .
$str
˝˝/ :
,
˝˝: ;
$str
˝˝< G
,
˝˝G H
$str
˝˝I S
,
˝˝S T
$str
˝˝U c
,
˝˝c d
$str
˝˝e x
,
˝˝x y
$str˝˝z Ä
,˝˝Ä Å
$str˝˝Ç â
,˝˝â ä
$str˝˝ã ñ
,˝˝ñ ó
$str˝˝ò £
,˝˝£ §
$str˝˝• ¨
}˝˝≠ Æ
,˝˝Æ Ø
values
˛˛ 
:
˛˛ 
new
˛˛ 
object
˛˛ "
[
˛˛" #
,
˛˛# $
]
˛˛$ %
{
ˇˇ 
{
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
null
ÄÄ 
,
ÄÄ 
new
ÄÄ "
DateTime
ÄÄ# +
(
ÄÄ+ ,
$num
ÄÄ, 0
,
ÄÄ0 1
$num
ÄÄ2 3
,
ÄÄ3 4
$num
ÄÄ5 7
,
ÄÄ7 8
$num
ÄÄ9 :
,
ÄÄ: ;
$num
ÄÄ< >
,
ÄÄ> ?
$num
ÄÄ@ B
,
ÄÄB C
$num
ÄÄD G
,
ÄÄG H
DateTimeKind
ÄÄI U
.
ÄÄU V
Local
ÄÄV [
)
ÄÄ[ \
.
ÄÄ\ ]
AddTicks
ÄÄ] e
(
ÄÄe f
$num
ÄÄf j
)
ÄÄj k
,
ÄÄk l
true
ÄÄm q
,
ÄÄq r
$str
ÄÄs |
,
ÄÄ| }
$num
ÄÄ~ 
,ÄÄ Ä
trueÄÄÅ Ö
,ÄÄÖ Ü
trueÄÄá ã
,ÄÄã å
nullÄÄç ë
,ÄÄë í
nullÄÄì ó
,ÄÄó ò
trueÄÄô ù
}ÄÄû ü
,ÄÄü †
{
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
null
ÅÅ 
,
ÅÅ 
new
ÅÅ "
DateTime
ÅÅ# +
(
ÅÅ+ ,
$num
ÅÅ, 0
,
ÅÅ0 1
$num
ÅÅ2 3
,
ÅÅ3 4
$num
ÅÅ5 7
,
ÅÅ7 8
$num
ÅÅ9 :
,
ÅÅ: ;
$num
ÅÅ< >
,
ÅÅ> ?
$num
ÅÅ@ B
,
ÅÅB C
$num
ÅÅD G
,
ÅÅG H
DateTimeKind
ÅÅI U
.
ÅÅU V
Local
ÅÅV [
)
ÅÅ[ \
.
ÅÅ\ ]
AddTicks
ÅÅ] e
(
ÅÅe f
$num
ÅÅf j
)
ÅÅj k
,
ÅÅk l
true
ÅÅm q
,
ÅÅq r
$str
ÅÅs z
,
ÅÅz {
$num
ÅÅ| }
,
ÅÅ} ~
trueÅÅ É
,ÅÅÉ Ñ
trueÅÅÖ â
,ÅÅâ ä
nullÅÅã è
,ÅÅè ê
nullÅÅë ï
,ÅÅï ñ
trueÅÅó õ
}ÅÅú ù
,ÅÅù û
{
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
null
ÇÇ 
,
ÇÇ 
new
ÇÇ "
DateTime
ÇÇ# +
(
ÇÇ+ ,
$num
ÇÇ, 0
,
ÇÇ0 1
$num
ÇÇ2 3
,
ÇÇ3 4
$num
ÇÇ5 7
,
ÇÇ7 8
$num
ÇÇ9 :
,
ÇÇ: ;
$num
ÇÇ< >
,
ÇÇ> ?
$num
ÇÇ@ B
,
ÇÇB C
$num
ÇÇD G
,
ÇÇG H
DateTimeKind
ÇÇI U
.
ÇÇU V
Local
ÇÇV [
)
ÇÇ[ \
.
ÇÇ\ ]
AddTicks
ÇÇ] e
(
ÇÇe f
$num
ÇÇf j
)
ÇÇj k
,
ÇÇk l
true
ÇÇm q
,
ÇÇq r
$str
ÇÇs z
,
ÇÇz {
$num
ÇÇ| }
,
ÇÇ} ~
trueÇÇ É
,ÇÇÉ Ñ
trueÇÇÖ â
,ÇÇâ ä
nullÇÇã è
,ÇÇè ê
nullÇÇë ï
,ÇÇï ñ
trueÇÇó õ
}ÇÇú ù
,ÇÇù û
{
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
null
ÉÉ 
,
ÉÉ 
new
ÉÉ "
DateTime
ÉÉ# +
(
ÉÉ+ ,
$num
ÉÉ, 0
,
ÉÉ0 1
$num
ÉÉ2 3
,
ÉÉ3 4
$num
ÉÉ5 7
,
ÉÉ7 8
$num
ÉÉ9 :
,
ÉÉ: ;
$num
ÉÉ< >
,
ÉÉ> ?
$num
ÉÉ@ B
,
ÉÉB C
$num
ÉÉD G
,
ÉÉG H
DateTimeKind
ÉÉI U
.
ÉÉU V
Local
ÉÉV [
)
ÉÉ[ \
.
ÉÉ\ ]
AddTicks
ÉÉ] e
(
ÉÉe f
$num
ÉÉf j
)
ÉÉj k
,
ÉÉk l
true
ÉÉm q
,
ÉÉq r
$str
ÉÉs {
,
ÉÉ{ |
$num
ÉÉ} ~
,
ÉÉ~ 
trueÉÉÄ Ñ
,ÉÉÑ Ö
trueÉÉÜ ä
,ÉÉä ã
nullÉÉå ê
,ÉÉê ë
nullÉÉí ñ
,ÉÉñ ó
trueÉÉò ú
}ÉÉù û
,ÉÉû ü
{
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
null
ÑÑ 
,
ÑÑ 
new
ÑÑ "
DateTime
ÑÑ# +
(
ÑÑ+ ,
$num
ÑÑ, 0
,
ÑÑ0 1
$num
ÑÑ2 3
,
ÑÑ3 4
$num
ÑÑ5 7
,
ÑÑ7 8
$num
ÑÑ9 :
,
ÑÑ: ;
$num
ÑÑ< >
,
ÑÑ> ?
$num
ÑÑ@ B
,
ÑÑB C
$num
ÑÑD G
,
ÑÑG H
DateTimeKind
ÑÑI U
.
ÑÑU V
Local
ÑÑV [
)
ÑÑ[ \
.
ÑÑ\ ]
AddTicks
ÑÑ] e
(
ÑÑe f
$num
ÑÑf j
)
ÑÑj k
,
ÑÑk l
true
ÑÑm q
,
ÑÑq r
$str
ÑÑs ~
,
ÑÑ~ 
$numÑÑÄ Å
,ÑÑÅ Ç
trueÑÑÉ á
,ÑÑá à
trueÑÑâ ç
,ÑÑç é
nullÑÑè ì
,ÑÑì î
nullÑÑï ô
,ÑÑô ö
trueÑÑõ ü
}ÑÑ† °
,ÑÑ° ¢
{
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
null
ÖÖ 
,
ÖÖ 
new
ÖÖ "
DateTime
ÖÖ# +
(
ÖÖ+ ,
$num
ÖÖ, 0
,
ÖÖ0 1
$num
ÖÖ2 3
,
ÖÖ3 4
$num
ÖÖ5 7
,
ÖÖ7 8
$num
ÖÖ9 :
,
ÖÖ: ;
$num
ÖÖ< >
,
ÖÖ> ?
$num
ÖÖ@ B
,
ÖÖB C
$num
ÖÖD G
,
ÖÖG H
DateTimeKind
ÖÖI U
.
ÖÖU V
Local
ÖÖV [
)
ÖÖ[ \
.
ÖÖ\ ]
AddTicks
ÖÖ] e
(
ÖÖe f
$num
ÖÖf j
)
ÖÖj k
,
ÖÖk l
true
ÖÖm q
,
ÖÖq r
$str
ÖÖs |
,
ÖÖ| }
$num
ÖÖ~ 
,ÖÖ Ä
trueÖÖÅ Ö
,ÖÖÖ Ü
trueÖÖá ã
,ÖÖã å
nullÖÖç ë
,ÖÖë í
nullÖÖì ó
,ÖÖó ò
trueÖÖô ù
}ÖÖû ü
,ÖÖü †
{
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
null
ÜÜ 
,
ÜÜ 
new
ÜÜ "
DateTime
ÜÜ# +
(
ÜÜ+ ,
$num
ÜÜ, 0
,
ÜÜ0 1
$num
ÜÜ2 3
,
ÜÜ3 4
$num
ÜÜ5 7
,
ÜÜ7 8
$num
ÜÜ9 :
,
ÜÜ: ;
$num
ÜÜ< >
,
ÜÜ> ?
$num
ÜÜ@ B
,
ÜÜB C
$num
ÜÜD G
,
ÜÜG H
DateTimeKind
ÜÜI U
.
ÜÜU V
Local
ÜÜV [
)
ÜÜ[ \
.
ÜÜ\ ]
AddTicks
ÜÜ] e
(
ÜÜe f
$num
ÜÜf j
)
ÜÜj k
,
ÜÜk l
true
ÜÜm q
,
ÜÜq r
$str
ÜÜs |
,
ÜÜ| }
$num
ÜÜ~ 
,ÜÜ Ä
trueÜÜÅ Ö
,ÜÜÖ Ü
trueÜÜá ã
,ÜÜã å
nullÜÜç ë
,ÜÜë í
nullÜÜì ó
,ÜÜó ò
trueÜÜô ù
}ÜÜû ü
,ÜÜü †
{
áá 
$num
áá 
,
áá 
null
áá 
,
áá 
new
áá "
DateTime
áá# +
(
áá+ ,
$num
áá, 0
,
áá0 1
$num
áá2 3
,
áá3 4
$num
áá5 7
,
áá7 8
$num
áá9 :
,
áá: ;
$num
áá< >
,
áá> ?
$num
áá@ B
,
ááB C
$num
ááD G
,
ááG H
DateTimeKind
ááI U
.
ááU V
Local
ááV [
)
áá[ \
.
áá\ ]
AddTicks
áá] e
(
ááe f
$num
ááf j
)
ááj k
,
áák l
true
áám q
,
ááq r
$str
áás |
,
áá| }
$num
áá~ 
,áá Ä
trueááÅ Ö
,ááÖ Ü
trueááá ã
,ááã å
nullááç ë
,ááë í
nullááì ó
,ááó ò
trueááô ù
}ááû ü
,ááü †
{
àà 
$num
àà 
,
àà 
null
àà 
,
àà 
new
àà "
DateTime
àà# +
(
àà+ ,
$num
àà, 0
,
àà0 1
$num
àà2 3
,
àà3 4
$num
àà5 7
,
àà7 8
$num
àà9 :
,
àà: ;
$num
àà< >
,
àà> ?
$num
àà@ B
,
ààB C
$num
ààD G
,
ààG H
DateTimeKind
ààI U
.
ààU V
Local
ààV [
)
àà[ \
.
àà\ ]
AddTicks
àà] e
(
ààe f
$num
ààf j
)
ààj k
,
ààk l
true
ààm q
,
ààq r
$str
ààs y
,
àày z
$num
àà{ |
,
àà| }
trueàà~ Ç
,ààÇ É
trueààÑ à
,ààà â
nullààä é
,ààé è
nullààê î
,ààî ï
trueààñ ö
}ààõ ú
,ààú ù
{
ââ 
$num
ââ 
,
ââ 
null
ââ 
,
ââ 
new
ââ  #
DateTime
ââ$ ,
(
ââ, -
$num
ââ- 1
,
ââ1 2
$num
ââ3 4
,
ââ4 5
$num
ââ6 8
,
ââ8 9
$num
ââ: ;
,
ââ; <
$num
ââ= ?
,
ââ? @
$num
ââA C
,
ââC D
$num
ââE H
,
ââH I
DateTimeKind
ââJ V
.
ââV W
Local
ââW \
)
ââ\ ]
.
ââ] ^
AddTicks
ââ^ f
(
ââf g
$num
ââg k
)
ââk l
,
ââl m
true
âân r
,
ââr s
$str
âât |
,
ââ| }
$num
ââ~ 
,ââ Ä
trueââÅ Ö
,ââÖ Ü
trueââá ã
,ââã å
nullââç ë
,ââë í
nullââì ó
,ââó ò
trueââô ù
}ââû ü
}
ää 
)
ää 
;
ää 
migrationBuilder
åå 
.
åå 
CreateIndex
åå (
(
åå( )
name
çç 
:
çç 
$str
çç 9
,
çç9 :
table
éé 
:
éé 
$str
éé %
,
éé% &
column
èè 
:
èè 
$str
èè +
)
èè+ ,
;
èè, -
migrationBuilder
ëë 
.
ëë 
CreateIndex
ëë (
(
ëë( )
name
íí 
:
íí 
$str
íí 1
,
íí1 2
table
ìì 
:
ìì 
$str
ìì %
,
ìì% &
column
îî 
:
îî 
$str
îî #
)
îî# $
;
îî$ %
migrationBuilder
ññ 
.
ññ 
CreateIndex
ññ (
(
ññ( )
name
óó 
:
óó 
$str
óó ;
,
óó; <
table
òò 
:
òò 
$str
òò '
,
òò' (
column
ôô 
:
ôô 
$str
ôô +
)
ôô+ ,
;
ôô, -
migrationBuilder
õõ 
.
õõ 
CreateIndex
õõ (
(
õõ( )
name
úú 
:
úú 
$str
úú /
,
úú/ 0
table
ùù 
:
ùù 
$str
ùù #
,
ùù# $
column
ûû 
:
ûû 
$str
ûû #
)
ûû# $
;
ûû$ %
migrationBuilder
†† 
.
†† 
CreateIndex
†† (
(
††( )
name
°° 
:
°° 
$str
°° /
,
°°/ 0
table
¢¢ 
:
¢¢ 
$str
¢¢ #
,
¢¢# $
column
££ 
:
££ 
$str
££ #
)
££# $
;
££$ %
migrationBuilder
•• 
.
•• 
CreateIndex
•• (
(
••( )
name
¶¶ 
:
¶¶ 
$str
¶¶ 6
,
¶¶6 7
table
ßß 
:
ßß 
$str
ßß "
,
ßß" #
column
®® 
:
®® 
$str
®® +
)
®®+ ,
;
®®, -
migrationBuilder
™™ 
.
™™ 
CreateIndex
™™ (
(
™™( )
name
´´ 
:
´´ 
$str
´´ 4
,
´´4 5
table
¨¨ 
:
¨¨ 
$str
¨¨ (
,
¨¨( )
column
≠≠ 
:
≠≠ 
$str
≠≠ #
,
≠≠# $
unique
ÆÆ 
:
ÆÆ 
true
ÆÆ 
)
ÆÆ 
;
ÆÆ 
migrationBuilder
∞∞ 
.
∞∞ 
CreateIndex
∞∞ (
(
∞∞( )
name
±± 
:
±± 
$str
±± 1
,
±±1 2
table
≤≤ 
:
≤≤ 
$str
≤≤ (
,
≤≤( )
column
≥≥ 
:
≥≥ 
$str
≥≥  
,
≥≥  !
unique
¥¥ 
:
¥¥ 
true
¥¥ 
)
¥¥ 
;
¥¥ 
migrationBuilder
∂∂ 
.
∂∂ 
CreateIndex
∂∂ (
(
∂∂( )
name
∑∑ 
:
∑∑ 
$str
∑∑ 2
,
∑∑2 3
table
∏∏ 
:
∏∏ 
$str
∏∏  
,
∏∏  !
column
ππ 
:
ππ 
$str
ππ )
)
ππ) *
;
ππ* +
migrationBuilder
ªª 
.
ªª 
CreateIndex
ªª (
(
ªª( )
name
ºº 
:
ºº 
$str
ºº )
,
ºº) *
table
ΩΩ 
:
ΩΩ 
$str
ΩΩ  
,
ΩΩ  !
column
ææ 
:
ææ 
$str
ææ  
,
ææ  !
unique
øø 
:
øø 
true
øø 
)
øø 
;
øø 
migrationBuilder
¡¡ 
.
¡¡ 
CreateIndex
¡¡ (
(
¡¡( )
name
¬¬ 
:
¬¬ 
$str
¬¬ 3
,
¬¬3 4
table
√√ 
:
√√ 
$str
√√ '
,
√√' (
column
ƒƒ 
:
ƒƒ 
$str
ƒƒ #
)
ƒƒ# $
;
ƒƒ$ %
migrationBuilder
∆∆ 
.
∆∆ 
CreateIndex
∆∆ (
(
∆∆( )
name
«« 
:
«« 
$str
«« -
,
««- .
table
»» 
:
»» 
$str
»» !
,
»»! "
column
…… 
:
…… 
$str
…… #
)
……# $
;
……$ %
migrationBuilder
ÀÀ 
.
ÀÀ 
CreateIndex
ÀÀ (
(
ÀÀ( )
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ *
,
ÃÃ* +
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ 
,
ÕÕ  
column
ŒŒ 
:
ŒŒ 
$str
ŒŒ "
)
ŒŒ" #
;
ŒŒ# $
migrationBuilder
–– 
.
–– 
CreateIndex
–– (
(
––( )
name
—— 
:
—— 
$str
—— +
,
——+ ,
table
““ 
:
““ 
$str
““ 
,
““  
column
”” 
:
”” 
$str
”” #
)
””# $
;
””$ %
migrationBuilder
’’ 
.
’’ 
CreateIndex
’’ (
(
’’( )
name
÷÷ 
:
÷÷ 
$str
÷÷ .
,
÷÷. /
table
◊◊ 
:
◊◊ 
$str
◊◊ 
,
◊◊  
column
ÿÿ 
:
ÿÿ 
$str
ÿÿ &
)
ÿÿ& '
;
ÿÿ' (
migrationBuilder
⁄⁄ 
.
⁄⁄ 
CreateIndex
⁄⁄ (
(
⁄⁄( )
name
€€ 
:
€€ 
$str
€€ 9
,
€€9 :
table
‹‹ 
:
‹‹ 
$str
‹‹ %
,
‹‹% &
column
›› 
:
›› 
$str
›› +
)
››+ ,
;
››, -
migrationBuilder
ﬂﬂ 
.
ﬂﬂ 
CreateIndex
ﬂﬂ (
(
ﬂﬂ( )
name
‡‡ 
:
‡‡ 
$str
‡‡ .
,
‡‡. /
table
·· 
:
·· 
$str
·· 
,
·· 
column
‚‚ 
:
‚‚ 
$str
‚‚ '
)
‚‚' (
;
‚‚( )
migrationBuilder
‰‰ 
.
‰‰ 
CreateIndex
‰‰ (
(
‰‰( )
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ .
,
ÂÂ. /
table
ÊÊ 
:
ÊÊ 
$str
ÊÊ 
,
ÊÊ 
column
ÁÁ 
:
ÁÁ 
$str
ÁÁ '
)
ÁÁ' (
;
ÁÁ( )
migrationBuilder
ÈÈ 
.
ÈÈ 
CreateIndex
ÈÈ (
(
ÈÈ( )
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ )
,
ÍÍ) *
table
ÎÎ 
:
ÎÎ 
$str
ÎÎ 
,
ÎÎ 
column
ÏÏ 
:
ÏÏ 
$str
ÏÏ "
)
ÏÏ" #
;
ÏÏ# $
migrationBuilder
ÓÓ 
.
ÓÓ 
CreateIndex
ÓÓ (
(
ÓÓ( )
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ /
,
ÔÔ/ 0
table
 
:
 
$str
 
,
 
column
ÒÒ 
:
ÒÒ 
$str
ÒÒ (
)
ÒÒ( )
;
ÒÒ) *
}
ÚÚ 	
	protected
ÙÙ 
override
ÙÙ 
void
ÙÙ 
Down
ÙÙ  $
(
ÙÙ$ %
MigrationBuilder
ÙÙ% 5
migrationBuilder
ÙÙ6 F
)
ÙÙF G
{
ıı 	
migrationBuilder
ˆˆ 
.
ˆˆ 
	DropTable
ˆˆ &
(
ˆˆ& '
name
˜˜ 
:
˜˜ 
$str
˜˜ $
)
˜˜$ %
;
˜˜% &
migrationBuilder
˘˘ 
.
˘˘ 
	DropTable
˘˘ &
(
˘˘& '
name
˙˙ 
:
˙˙ 
$str
˙˙ &
)
˙˙& '
;
˙˙' (
migrationBuilder
¸¸ 
.
¸¸ 
	DropTable
¸¸ &
(
¸¸& '
name
˝˝ 
:
˝˝ 
$str
˝˝ '
)
˝˝' (
;
˝˝( )
migrationBuilder
ˇˇ 
.
ˇˇ 
	DropTable
ˇˇ &
(
ˇˇ& '
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ "
)
ÄÄ" #
;
ÄÄ# $
migrationBuilder
ÇÇ 
.
ÇÇ 
	DropTable
ÇÇ &
(
ÇÇ& '
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ !
)
ÉÉ! "
;
ÉÉ" #
migrationBuilder
ÖÖ 
.
ÖÖ 
	DropTable
ÖÖ &
(
ÖÖ& '
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ &
)
ÜÜ& '
;
ÜÜ' (
migrationBuilder
àà 
.
àà 
	DropTable
àà &
(
àà& '
name
ââ 
:
ââ 
$str
ââ  
)
ââ  !
;
ââ! "
migrationBuilder
ãã 
.
ãã 
	DropTable
ãã &
(
ãã& '
name
åå 
:
åå 
$str
åå 
)
åå 
;
åå  
migrationBuilder
éé 
.
éé 
	DropTable
éé &
(
éé& '
name
èè 
:
èè 
$str
èè $
)
èè$ %
;
èè% &
migrationBuilder
ëë 
.
ëë 
	DropTable
ëë &
(
ëë& '
name
íí 
:
íí 
$str
íí '
)
íí' (
;
íí( )
migrationBuilder
îî 
.
îî 
	DropTable
îî &
(
îî& '
name
ïï 
:
ïï 
$str
ïï  
)
ïï  !
;
ïï! "
migrationBuilder
óó 
.
óó 
	DropTable
óó &
(
óó& '
name
òò 
:
òò 
$str
òò 
)
òò  
;
òò  !
migrationBuilder
öö 
.
öö 
	DropTable
öö &
(
öö& '
name
õõ 
:
õõ 
$str
õõ $
)
õõ$ %
;
õõ% &
migrationBuilder
ùù 
.
ùù 
	DropTable
ùù &
(
ùù& '
name
ûû 
:
ûû 
$str
ûû '
)
ûû' (
;
ûû( )
migrationBuilder
†† 
.
†† 
	DropTable
†† &
(
††& '
name
°° 
:
°° 
$str
°° 
)
°°  
;
°°  !
migrationBuilder
££ 
.
££ 
	DropTable
££ &
(
££& '
name
§§ 
:
§§ 
$str
§§ &
)
§§& '
;
§§' (
migrationBuilder
¶¶ 
.
¶¶ 
	DropTable
¶¶ &
(
¶¶& '
name
ßß 
:
ßß 
$str
ßß 
)
ßß 
;
ßß 
migrationBuilder
©© 
.
©© 
	DropTable
©© &
(
©©& '
name
™™ 
:
™™ 
$str
™™ $
)
™™$ %
;
™™% &
migrationBuilder
¨¨ 
.
¨¨ 
	DropTable
¨¨ &
(
¨¨& '
name
≠≠ 
:
≠≠ 
$str
≠≠ $
)
≠≠$ %
;
≠≠% &
migrationBuilder
ØØ 
.
ØØ 
	DropTable
ØØ &
(
ØØ& '
name
∞∞ 
:
∞∞ 
$str
∞∞ 
)
∞∞ 
;
∞∞  
migrationBuilder
≤≤ 
.
≤≤ 
	DropTable
≤≤ &
(
≤≤& '
name
≥≥ 
:
≥≥ 
$str
≥≥ %
)
≥≥% &
;
≥≥& '
}
¥¥ 	
}
µµ 
}∂∂ €ê
ZC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Migrations\20220715045150_init.cs
	namespace 	
PMS_API
 
. 

Migrations 
{ 
public 

partial 
class 
init 
: 
	Migration  )
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder!! 
.!! 

UpdateData!! '
(!!' (
table"" 
:"" 
$str"" "
,""" #
	keyColumn## 
:## 
$str## '
,##' (
keyValue$$ 
:$$ 
$num$$ 
,$$ 
column%% 
:%% 
$str%% #
,%%# $
value&& 
:&& 
new&& 
DateTime&& #
(&&# $
$num&&$ (
,&&( )
$num&&* +
,&&+ ,
$num&&- /
,&&/ 0
$num&&1 3
,&&3 4
$num&&5 7
,&&7 8
$num&&9 ;
,&&; <
$num&&= @
,&&@ A
DateTimeKind&&B N
.&&N O
Local&&O T
)&&T U
.&&U V
AddTicks&&V ^
(&&^ _
$num&&_ c
)&&c d
)&&d e
;&&e f
migrationBuilder(( 
.(( 

UpdateData(( '
(((' (
table)) 
:)) 
$str)) "
,))" #
	keyColumn** 
:** 
$str** '
,**' (
keyValue++ 
:++ 
$num++ 
,++ 
column,, 
:,, 
$str,, #
,,,# $
value-- 
:-- 
new-- 
DateTime-- #
(--# $
$num--$ (
,--( )
$num--* +
,--+ ,
$num--- /
,--/ 0
$num--1 3
,--3 4
$num--5 7
,--7 8
$num--9 ;
,--; <
$num--= @
,--@ A
DateTimeKind--B N
.--N O
Local--O T
)--T U
.--U V
AddTicks--V ^
(--^ _
$num--_ c
)--c d
)--d e
;--e f
migrationBuilder// 
.// 

UpdateData// '
(//' (
table00 
:00 
$str00 "
,00" #
	keyColumn11 
:11 
$str11 '
,11' (
keyValue22 
:22 
$num22 
,22 
column33 
:33 
$str33 #
,33# $
value44 
:44 
new44 
DateTime44 #
(44# $
$num44$ (
,44( )
$num44* +
,44+ ,
$num44- /
,44/ 0
$num441 3
,443 4
$num445 7
,447 8
$num449 ;
,44; <
$num44= @
,44@ A
DateTimeKind44B N
.44N O
Local44O T
)44T U
.44U V
AddTicks44V ^
(44^ _
$num44_ c
)44c d
)44d e
;44e f
migrationBuilder66 
.66 

UpdateData66 '
(66' (
table77 
:77 
$str77 "
,77" #
	keyColumn88 
:88 
$str88 '
,88' (
keyValue99 
:99 
$num99 
,99 
column:: 
::: 
$str:: #
,::# $
value;; 
:;; 
new;; 
DateTime;; #
(;;# $
$num;;$ (
,;;( )
$num;;* +
,;;+ ,
$num;;- /
,;;/ 0
$num;;1 3
,;;3 4
$num;;5 7
,;;7 8
$num;;9 ;
,;;; <
$num;;= @
,;;@ A
DateTimeKind;;B N
.;;N O
Local;;O T
);;T U
.;;U V
AddTicks;;V ^
(;;^ _
$num;;_ c
);;c d
);;d e
;;;e f
migrationBuilder== 
.== 

UpdateData== '
(==' (
table>> 
:>> 
$str>> "
,>>" #
	keyColumn?? 
:?? 
$str?? '
,??' (
keyValue@@ 
:@@ 
$num@@ 
,@@ 
columnAA 
:AA 
$strAA #
,AA# $
valueBB 
:BB 
newBB 
DateTimeBB #
(BB# $
$numBB$ (
,BB( )
$numBB* +
,BB+ ,
$numBB- /
,BB/ 0
$numBB1 3
,BB3 4
$numBB5 7
,BB7 8
$numBB9 ;
,BB; <
$numBB= @
,BB@ A
DateTimeKindBBB N
.BBN O
LocalBBO T
)BBT U
.BBU V
AddTicksBBV ^
(BB^ _
$numBB_ c
)BBc d
)BBd e
;BBe f
migrationBuilderDD 
.DD 

UpdateDataDD '
(DD' (
tableEE 
:EE 
$strEE "
,EE" #
	keyColumnFF 
:FF 
$strFF '
,FF' (
keyValueGG 
:GG 
$numGG 
,GG 
columnHH 
:HH 
$strHH #
,HH# $
valueII 
:II 
newII 
DateTimeII #
(II# $
$numII$ (
,II( )
$numII* +
,II+ ,
$numII- /
,II/ 0
$numII1 3
,II3 4
$numII5 7
,II7 8
$numII9 ;
,II; <
$numII= @
,II@ A
DateTimeKindIIB N
.IIN O
LocalIIO T
)IIT U
.IIU V
AddTicksIIV ^
(II^ _
$numII_ c
)IIc d
)IId e
;IIe f
migrationBuilderKK 
.KK 

UpdateDataKK '
(KK' (
tableLL 
:LL 
$strLL "
,LL" #
	keyColumnMM 
:MM 
$strMM '
,MM' (
keyValueNN 
:NN 
$numNN 
,NN 
columnOO 
:OO 
$strOO #
,OO# $
valuePP 
:PP 
newPP 
DateTimePP #
(PP# $
$numPP$ (
,PP( )
$numPP* +
,PP+ ,
$numPP- /
,PP/ 0
$numPP1 3
,PP3 4
$numPP5 7
,PP7 8
$numPP9 ;
,PP; <
$numPP= @
,PP@ A
DateTimeKindPPB N
.PPN O
LocalPPO T
)PPT U
.PPU V
AddTicksPPV ^
(PP^ _
$numPP_ c
)PPc d
)PPd e
;PPe f
}QQ 	
	protectedSS 
overrideSS 
voidSS 
DownSS  $
(SS$ %
MigrationBuilderSS% 5
migrationBuilderSS6 F
)SSF G
{TT 	
migrationBuilderUU 
.UU 

UpdateDataUU '
(UU' (
tableVV 
:VV 
$strVV "
,VV" #
	keyColumnWW 
:WW 
$strWW '
,WW' (
keyValueXX 
:XX 
$numXX 
,XX 
columnYY 
:YY 
$strYY #
,YY# $
valueZZ 
:ZZ 
newZZ 
DateTimeZZ #
(ZZ# $
$numZZ$ (
,ZZ( )
$numZZ* +
,ZZ+ ,
$numZZ- /
,ZZ/ 0
$numZZ1 2
,ZZ2 3
$numZZ4 6
,ZZ6 7
$numZZ8 :
,ZZ: ;
$numZZ< ?
,ZZ? @
DateTimeKindZZA M
.ZZM N
LocalZZN S
)ZZS T
.ZZT U
AddTicksZZU ]
(ZZ] ^
$numZZ^ b
)ZZb c
)ZZc d
;ZZd e
migrationBuilder\\ 
.\\ 

UpdateData\\ '
(\\' (
table]] 
:]] 
$str]] "
,]]" #
	keyColumn^^ 
:^^ 
$str^^ '
,^^' (
keyValue__ 
:__ 
$num__ 
,__ 
column`` 
:`` 
$str`` #
,``# $
valueaa 
:aa 
newaa 
DateTimeaa #
(aa# $
$numaa$ (
,aa( )
$numaa* +
,aa+ ,
$numaa- /
,aa/ 0
$numaa1 2
,aa2 3
$numaa4 6
,aa6 7
$numaa8 :
,aa: ;
$numaa< ?
,aa? @
DateTimeKindaaA M
.aaM N
LocalaaN S
)aaS T
.aaT U
AddTicksaaU ]
(aa] ^
$numaa^ b
)aab c
)aac d
;aad e
migrationBuildercc 
.cc 

UpdateDatacc '
(cc' (
tabledd 
:dd 
$strdd "
,dd" #
	keyColumnee 
:ee 
$stree '
,ee' (
keyValueff 
:ff 
$numff 
,ff 
columngg 
:gg 
$strgg #
,gg# $
valuehh 
:hh 
newhh 
DateTimehh #
(hh# $
$numhh$ (
,hh( )
$numhh* +
,hh+ ,
$numhh- /
,hh/ 0
$numhh1 2
,hh2 3
$numhh4 6
,hh6 7
$numhh8 :
,hh: ;
$numhh< ?
,hh? @
DateTimeKindhhA M
.hhM N
LocalhhN S
)hhS T
.hhT U
AddTickshhU ]
(hh] ^
$numhh^ b
)hhb c
)hhc d
;hhd e
migrationBuilderjj 
.jj 

UpdateDatajj '
(jj' (
tablekk 
:kk 
$strkk "
,kk" #
	keyColumnll 
:ll 
$strll '
,ll' (
keyValuemm 
:mm 
$nummm 
,mm 
columnnn 
:nn 
$strnn #
,nn# $
valueoo 
:oo 
newoo 
DateTimeoo #
(oo# $
$numoo$ (
,oo( )
$numoo* +
,oo+ ,
$numoo- /
,oo/ 0
$numoo1 2
,oo2 3
$numoo4 6
,oo6 7
$numoo8 :
,oo: ;
$numoo< ?
,oo? @
DateTimeKindooA M
.ooM N
LocalooN S
)ooS T
.ooT U
AddTicksooU ]
(oo] ^
$numoo^ b
)oob c
)ooc d
;ood e
migrationBuilderqq 
.qq 

UpdateDataqq '
(qq' (
tablerr 
:rr 
$strrr "
,rr" #
	keyColumnss 
:ss 
$strss '
,ss' (
keyValuett 
:tt 
$numtt 
,tt 
columnuu 
:uu 
$struu #
,uu# $
valuevv 
:vv 
newvv 
DateTimevv #
(vv# $
$numvv$ (
,vv( )
$numvv* +
,vv+ ,
$numvv- /
,vv/ 0
$numvv1 2
,vv2 3
$numvv4 6
,vv6 7
$numvv8 :
,vv: ;
$numvv< ?
,vv? @
DateTimeKindvvA M
.vvM N
LocalvvN S
)vvS T
.vvT U
AddTicksvvU ]
(vv] ^
$numvv^ b
)vvb c
)vvc d
;vvd e
migrationBuilderxx 
.xx 

UpdateDataxx '
(xx' (
tableyy 
:yy 
$stryy "
,yy" #
	keyColumnzz 
:zz 
$strzz '
,zz' (
keyValue{{ 
:{{ 
$num{{ 
,{{ 
column|| 
:|| 
$str|| #
,||# $
value}} 
:}} 
new}} 
DateTime}} #
(}}# $
$num}}$ (
,}}( )
$num}}* +
,}}+ ,
$num}}- /
,}}/ 0
$num}}1 2
,}}2 3
$num}}4 6
,}}6 7
$num}}8 :
,}}: ;
$num}}< ?
,}}? @
DateTimeKind}}A M
.}}M N
Local}}N S
)}}S T
.}}T U
AddTicks}}U ]
(}}] ^
$num}}^ b
)}}b c
)}}c d
;}}d e
migrationBuilder 
. 

UpdateData '
(' (
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ "
,
ÄÄ" #
	keyColumn
ÅÅ 
:
ÅÅ 
$str
ÅÅ '
,
ÅÅ' (
keyValue
ÇÇ 
:
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ #
,
ÉÉ# $
value
ÑÑ 
:
ÑÑ 
new
ÑÑ 
DateTime
ÑÑ #
(
ÑÑ# $
$num
ÑÑ$ (
,
ÑÑ( )
$num
ÑÑ* +
,
ÑÑ+ ,
$num
ÑÑ- /
,
ÑÑ/ 0
$num
ÑÑ1 2
,
ÑÑ2 3
$num
ÑÑ4 6
,
ÑÑ6 7
$num
ÑÑ8 :
,
ÑÑ: ;
$num
ÑÑ< ?
,
ÑÑ? @
DateTimeKind
ÑÑA M
.
ÑÑM N
Local
ÑÑN S
)
ÑÑS T
.
ÑÑT U
AddTicks
ÑÑU ]
(
ÑÑ] ^
$num
ÑÑ^ b
)
ÑÑb c
)
ÑÑc d
;
ÑÑd e
migrationBuilder
ÜÜ 
.
ÜÜ 

UpdateData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá "
,
áá" #
	keyColumn
àà 
:
àà 
$str
àà '
,
àà' (
keyValue
ââ 
:
ââ 
$num
ââ 
,
ââ 
column
ää 
:
ää 
$str
ää #
,
ää# $
value
ãã 
:
ãã 
new
ãã 
DateTime
ãã #
(
ãã# $
$num
ãã$ (
,
ãã( )
$num
ãã* +
,
ãã+ ,
$num
ãã- /
,
ãã/ 0
$num
ãã1 2
,
ãã2 3
$num
ãã4 6
,
ãã6 7
$num
ãã8 :
,
ãã: ;
$num
ãã< ?
,
ãã? @
DateTimeKind
ããA M
.
ããM N
Local
ããN S
)
ããS T
.
ããT U
AddTicks
ããU ]
(
ãã] ^
$num
ãã^ b
)
ããb c
)
ããc d
;
ããd e
migrationBuilder
çç 
.
çç 

UpdateData
çç '
(
çç' (
table
éé 
:
éé 
$str
éé "
,
éé" #
	keyColumn
èè 
:
èè 
$str
èè '
,
èè' (
keyValue
êê 
:
êê 
$num
êê 
,
êê 
column
ëë 
:
ëë 
$str
ëë #
,
ëë# $
value
íí 
:
íí 
new
íí 
DateTime
íí #
(
íí# $
$num
íí$ (
,
íí( )
$num
íí* +
,
íí+ ,
$num
íí- /
,
íí/ 0
$num
íí1 2
,
íí2 3
$num
íí4 6
,
íí6 7
$num
íí8 :
,
íí: ;
$num
íí< ?
,
íí? @
DateTimeKind
ííA M
.
ííM N
Local
ííN S
)
ííS T
.
ííT U
AddTicks
ííU ]
(
íí] ^
$num
íí^ b
)
ííb c
)
ííc d
;
ííd e
migrationBuilder
îî 
.
îî 

UpdateData
îî '
(
îî' (
table
ïï 
:
ïï 
$str
ïï "
,
ïï" #
	keyColumn
ññ 
:
ññ 
$str
ññ '
,
ññ' (
keyValue
óó 
:
óó 
$num
óó 
,
óó 
column
òò 
:
òò 
$str
òò #
,
òò# $
value
ôô 
:
ôô 
new
ôô 
DateTime
ôô #
(
ôô# $
$num
ôô$ (
,
ôô( )
$num
ôô* +
,
ôô+ ,
$num
ôô- /
,
ôô/ 0
$num
ôô1 2
,
ôô2 3
$num
ôô4 6
,
ôô6 7
$num
ôô8 :
,
ôô: ;
$num
ôô< ?
,
ôô? @
DateTimeKind
ôôA M
.
ôôM N
Local
ôôN S
)
ôôS T
.
ôôT U
AddTicks
ôôU ]
(
ôô] ^
$num
ôô^ b
)
ôôb c
)
ôôc d
;
ôôd e
}
öö 	
}
õõ 
}úú ˝ê
kC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Migrations\20220715060447_seeding_status_update.cs
	namespace 	
PMS_API
 
. 

Migrations 
{ 
public 

partial 
class !
seeding_status_update .
:/ 0
	Migration1 :
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 7
,7 8
$num9 ;
,; <
$num= @
,@ A
DateTimeKindB N
.N O
LocalO T
)T U
.U V
AddTicksV ^
(^ _
$num_ c
)c d
)d e
;e f
migrationBuilder!! 
.!! 

UpdateData!! '
(!!' (
table"" 
:"" 
$str"" "
,""" #
	keyColumn## 
:## 
$str## '
,##' (
keyValue$$ 
:$$ 
$num$$ 
,$$ 
column%% 
:%% 
$str%% #
,%%# $
value&& 
:&& 
new&& 
DateTime&& #
(&&# $
$num&&$ (
,&&( )
$num&&* +
,&&+ ,
$num&&- /
,&&/ 0
$num&&1 3
,&&3 4
$num&&5 7
,&&7 8
$num&&9 ;
,&&; <
$num&&= @
,&&@ A
DateTimeKind&&B N
.&&N O
Local&&O T
)&&T U
.&&U V
AddTicks&&V ^
(&&^ _
$num&&_ c
)&&c d
)&&d e
;&&e f
migrationBuilder(( 
.(( 

UpdateData(( '
(((' (
table)) 
:)) 
$str)) "
,))" #
	keyColumn** 
:** 
$str** '
,**' (
keyValue++ 
:++ 
$num++ 
,++ 
column,, 
:,, 
$str,, #
,,,# $
value-- 
:-- 
new-- 
DateTime-- #
(--# $
$num--$ (
,--( )
$num--* +
,--+ ,
$num--- /
,--/ 0
$num--1 3
,--3 4
$num--5 7
,--7 8
$num--9 ;
,--; <
$num--= @
,--@ A
DateTimeKind--B N
.--N O
Local--O T
)--T U
.--U V
AddTicks--V ^
(--^ _
$num--_ c
)--c d
)--d e
;--e f
migrationBuilder// 
.// 

UpdateData// '
(//' (
table00 
:00 
$str00 "
,00" #
	keyColumn11 
:11 
$str11 '
,11' (
keyValue22 
:22 
$num22 
,22 
column33 
:33 
$str33 #
,33# $
value44 
:44 
new44 
DateTime44 #
(44# $
$num44$ (
,44( )
$num44* +
,44+ ,
$num44- /
,44/ 0
$num441 3
,443 4
$num445 7
,447 8
$num449 ;
,44; <
$num44= @
,44@ A
DateTimeKind44B N
.44N O
Local44O T
)44T U
.44U V
AddTicks44V ^
(44^ _
$num44_ c
)44c d
)44d e
;44e f
migrationBuilder66 
.66 

UpdateData66 '
(66' (
table77 
:77 
$str77 "
,77" #
	keyColumn88 
:88 
$str88 '
,88' (
keyValue99 
:99 
$num99 
,99 
column:: 
::: 
$str:: #
,::# $
value;; 
:;; 
new;; 
DateTime;; #
(;;# $
$num;;$ (
,;;( )
$num;;* +
,;;+ ,
$num;;- /
,;;/ 0
$num;;1 3
,;;3 4
$num;;5 7
,;;7 8
$num;;9 ;
,;;; <
$num;;= @
,;;@ A
DateTimeKind;;B N
.;;N O
Local;;O T
);;T U
.;;U V
AddTicks;;V ^
(;;^ _
$num;;_ c
);;c d
);;d e
;;;e f
migrationBuilder== 
.== 

UpdateData== '
(==' (
table>> 
:>> 
$str>> "
,>>" #
	keyColumn?? 
:?? 
$str?? '
,??' (
keyValue@@ 
:@@ 
$num@@ 
,@@ 
columnAA 
:AA 
$strAA #
,AA# $
valueBB 
:BB 
newBB 
DateTimeBB #
(BB# $
$numBB$ (
,BB( )
$numBB* +
,BB+ ,
$numBB- /
,BB/ 0
$numBB1 3
,BB3 4
$numBB5 7
,BB7 8
$numBB9 ;
,BB; <
$numBB= @
,BB@ A
DateTimeKindBBB N
.BBN O
LocalBBO T
)BBT U
.BBU V
AddTicksBBV ^
(BB^ _
$numBB_ c
)BBc d
)BBd e
;BBe f
migrationBuilderDD 
.DD 

UpdateDataDD '
(DD' (
tableEE 
:EE 
$strEE "
,EE" #
	keyColumnFF 
:FF 
$strFF '
,FF' (
keyValueGG 
:GG 
$numGG 
,GG 
columnHH 
:HH 
$strHH #
,HH# $
valueII 
:II 
newII 
DateTimeII #
(II# $
$numII$ (
,II( )
$numII* +
,II+ ,
$numII- /
,II/ 0
$numII1 3
,II3 4
$numII5 7
,II7 8
$numII9 ;
,II; <
$numII= @
,II@ A
DateTimeKindIIB N
.IIN O
LocalIIO T
)IIT U
.IIU V
AddTicksIIV ^
(II^ _
$numII_ c
)IIc d
)IId e
;IIe f
migrationBuilderKK 
.KK 

UpdateDataKK '
(KK' (
tableLL 
:LL 
$strLL "
,LL" #
	keyColumnMM 
:MM 
$strMM '
,MM' (
keyValueNN 
:NN 
$numNN 
,NN 
columnOO 
:OO 
$strOO #
,OO# $
valuePP 
:PP 
newPP 
DateTimePP #
(PP# $
$numPP$ (
,PP( )
$numPP* +
,PP+ ,
$numPP- /
,PP/ 0
$numPP1 3
,PP3 4
$numPP5 7
,PP7 8
$numPP9 ;
,PP; <
$numPP= @
,PP@ A
DateTimeKindPPB N
.PPN O
LocalPPO T
)PPT U
.PPU V
AddTicksPPV ^
(PP^ _
$numPP_ c
)PPc d
)PPd e
;PPe f
}QQ 	
	protectedSS 
overrideSS 
voidSS 
DownSS  $
(SS$ %
MigrationBuilderSS% 5
migrationBuilderSS6 F
)SSF G
{TT 	
migrationBuilderUU 
.UU 

UpdateDataUU '
(UU' (
tableVV 
:VV 
$strVV "
,VV" #
	keyColumnWW 
:WW 
$strWW '
,WW' (
keyValueXX 
:XX 
$numXX 
,XX 
columnYY 
:YY 
$strYY #
,YY# $
valueZZ 
:ZZ 
newZZ 
DateTimeZZ #
(ZZ# $
$numZZ$ (
,ZZ( )
$numZZ* +
,ZZ+ ,
$numZZ- /
,ZZ/ 0
$numZZ1 3
,ZZ3 4
$numZZ5 7
,ZZ7 8
$numZZ9 ;
,ZZ; <
$numZZ= @
,ZZ@ A
DateTimeKindZZB N
.ZZN O
LocalZZO T
)ZZT U
.ZZU V
AddTicksZZV ^
(ZZ^ _
$numZZ_ c
)ZZc d
)ZZd e
;ZZe f
migrationBuilder\\ 
.\\ 

UpdateData\\ '
(\\' (
table]] 
:]] 
$str]] "
,]]" #
	keyColumn^^ 
:^^ 
$str^^ '
,^^' (
keyValue__ 
:__ 
$num__ 
,__ 
column`` 
:`` 
$str`` #
,``# $
valueaa 
:aa 
newaa 
DateTimeaa #
(aa# $
$numaa$ (
,aa( )
$numaa* +
,aa+ ,
$numaa- /
,aa/ 0
$numaa1 3
,aa3 4
$numaa5 7
,aa7 8
$numaa9 ;
,aa; <
$numaa= @
,aa@ A
DateTimeKindaaB N
.aaN O
LocalaaO T
)aaT U
.aaU V
AddTicksaaV ^
(aa^ _
$numaa_ c
)aac d
)aad e
;aae f
migrationBuildercc 
.cc 

UpdateDatacc '
(cc' (
tabledd 
:dd 
$strdd "
,dd" #
	keyColumnee 
:ee 
$stree '
,ee' (
keyValueff 
:ff 
$numff 
,ff 
columngg 
:gg 
$strgg #
,gg# $
valuehh 
:hh 
newhh 
DateTimehh #
(hh# $
$numhh$ (
,hh( )
$numhh* +
,hh+ ,
$numhh- /
,hh/ 0
$numhh1 3
,hh3 4
$numhh5 7
,hh7 8
$numhh9 ;
,hh; <
$numhh= @
,hh@ A
DateTimeKindhhB N
.hhN O
LocalhhO T
)hhT U
.hhU V
AddTickshhV ^
(hh^ _
$numhh_ c
)hhc d
)hhd e
;hhe f
migrationBuilderjj 
.jj 

UpdateDatajj '
(jj' (
tablekk 
:kk 
$strkk "
,kk" #
	keyColumnll 
:ll 
$strll '
,ll' (
keyValuemm 
:mm 
$nummm 
,mm 
columnnn 
:nn 
$strnn #
,nn# $
valueoo 
:oo 
newoo 
DateTimeoo #
(oo# $
$numoo$ (
,oo( )
$numoo* +
,oo+ ,
$numoo- /
,oo/ 0
$numoo1 3
,oo3 4
$numoo5 7
,oo7 8
$numoo9 ;
,oo; <
$numoo= @
,oo@ A
DateTimeKindooB N
.ooN O
LocalooO T
)ooT U
.ooU V
AddTicksooV ^
(oo^ _
$numoo_ c
)ooc d
)ood e
;ooe f
migrationBuilderqq 
.qq 

UpdateDataqq '
(qq' (
tablerr 
:rr 
$strrr "
,rr" #
	keyColumnss 
:ss 
$strss '
,ss' (
keyValuett 
:tt 
$numtt 
,tt 
columnuu 
:uu 
$struu #
,uu# $
valuevv 
:vv 
newvv 
DateTimevv #
(vv# $
$numvv$ (
,vv( )
$numvv* +
,vv+ ,
$numvv- /
,vv/ 0
$numvv1 3
,vv3 4
$numvv5 7
,vv7 8
$numvv9 ;
,vv; <
$numvv= @
,vv@ A
DateTimeKindvvB N
.vvN O
LocalvvO T
)vvT U
.vvU V
AddTicksvvV ^
(vv^ _
$numvv_ c
)vvc d
)vvd e
;vve f
migrationBuilderxx 
.xx 

UpdateDataxx '
(xx' (
tableyy 
:yy 
$stryy "
,yy" #
	keyColumnzz 
:zz 
$strzz '
,zz' (
keyValue{{ 
:{{ 
$num{{ 
,{{ 
column|| 
:|| 
$str|| #
,||# $
value}} 
:}} 
new}} 
DateTime}} #
(}}# $
$num}}$ (
,}}( )
$num}}* +
,}}+ ,
$num}}- /
,}}/ 0
$num}}1 3
,}}3 4
$num}}5 7
,}}7 8
$num}}9 ;
,}}; <
$num}}= @
,}}@ A
DateTimeKind}}B N
.}}N O
Local}}O T
)}}T U
.}}U V
AddTicks}}V ^
(}}^ _
$num}}_ c
)}}c d
)}}d e
;}}e f
migrationBuilder 
. 

UpdateData '
(' (
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ "
,
ÄÄ" #
	keyColumn
ÅÅ 
:
ÅÅ 
$str
ÅÅ '
,
ÅÅ' (
keyValue
ÇÇ 
:
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ #
,
ÉÉ# $
value
ÑÑ 
:
ÑÑ 
new
ÑÑ 
DateTime
ÑÑ #
(
ÑÑ# $
$num
ÑÑ$ (
,
ÑÑ( )
$num
ÑÑ* +
,
ÑÑ+ ,
$num
ÑÑ- /
,
ÑÑ/ 0
$num
ÑÑ1 3
,
ÑÑ3 4
$num
ÑÑ5 7
,
ÑÑ7 8
$num
ÑÑ9 ;
,
ÑÑ; <
$num
ÑÑ= @
,
ÑÑ@ A
DateTimeKind
ÑÑB N
.
ÑÑN O
Local
ÑÑO T
)
ÑÑT U
.
ÑÑU V
AddTicks
ÑÑV ^
(
ÑÑ^ _
$num
ÑÑ_ c
)
ÑÑc d
)
ÑÑd e
;
ÑÑe f
migrationBuilder
ÜÜ 
.
ÜÜ 

UpdateData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá "
,
áá" #
	keyColumn
àà 
:
àà 
$str
àà '
,
àà' (
keyValue
ââ 
:
ââ 
$num
ââ 
,
ââ 
column
ää 
:
ää 
$str
ää #
,
ää# $
value
ãã 
:
ãã 
new
ãã 
DateTime
ãã #
(
ãã# $
$num
ãã$ (
,
ãã( )
$num
ãã* +
,
ãã+ ,
$num
ãã- /
,
ãã/ 0
$num
ãã1 3
,
ãã3 4
$num
ãã5 7
,
ãã7 8
$num
ãã9 ;
,
ãã; <
$num
ãã= @
,
ãã@ A
DateTimeKind
ããB N
.
ããN O
Local
ããO T
)
ããT U
.
ããU V
AddTicks
ããV ^
(
ãã^ _
$num
ãã_ c
)
ããc d
)
ããd e
;
ããe f
migrationBuilder
çç 
.
çç 

UpdateData
çç '
(
çç' (
table
éé 
:
éé 
$str
éé "
,
éé" #
	keyColumn
èè 
:
èè 
$str
èè '
,
èè' (
keyValue
êê 
:
êê 
$num
êê 
,
êê 
column
ëë 
:
ëë 
$str
ëë #
,
ëë# $
value
íí 
:
íí 
new
íí 
DateTime
íí #
(
íí# $
$num
íí$ (
,
íí( )
$num
íí* +
,
íí+ ,
$num
íí- /
,
íí/ 0
$num
íí1 3
,
íí3 4
$num
íí5 7
,
íí7 8
$num
íí9 ;
,
íí; <
$num
íí= @
,
íí@ A
DateTimeKind
ííB N
.
ííN O
Local
ííO T
)
ííT U
.
ííU V
AddTicks
ííV ^
(
íí^ _
$num
íí_ c
)
ííc d
)
ííd e
;
ííe f
migrationBuilder
îî 
.
îî 

UpdateData
îî '
(
îî' (
table
ïï 
:
ïï 
$str
ïï "
,
ïï" #
	keyColumn
ññ 
:
ññ 
$str
ññ '
,
ññ' (
keyValue
óó 
:
óó 
$num
óó 
,
óó 
column
òò 
:
òò 
$str
òò #
,
òò# $
value
ôô 
:
ôô 
new
ôô 
DateTime
ôô #
(
ôô# $
$num
ôô$ (
,
ôô( )
$num
ôô* +
,
ôô+ ,
$num
ôô- /
,
ôô/ 0
$num
ôô1 3
,
ôô3 4
$num
ôô5 7
,
ôô7 8
$num
ôô9 ;
,
ôô; <
$num
ôô= @
,
ôô@ A
DateTimeKind
ôôB N
.
ôôN O
Local
ôôO T
)
ôôT U
.
ôôU V
AddTicks
ôôV ^
(
ôô^ _
$num
ôô_ c
)
ôôc d
)
ôôd e
;
ôôe f
}
öö 	
}
õõ 
}úú „ê
^C:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Migrations\20220719103213_language.cs
	namespace 	
PMS_API
 
. 

Migrations 
{ 
public 

partial 
class 
language !
:" #
	Migration$ -
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 6
,6 7
$num8 :
,: ;
$num< >
,> ?
DateTimeKind@ L
.L M
LocalM R
)R S
.S T
AddTicksT \
(\ ]
$num] a
)a b
)b c
;c d
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 6
,6 7
$num8 :
,: ;
$num< >
,> ?
DateTimeKind@ L
.L M
LocalM R
)R S
.S T
AddTicksT \
(\ ]
$num] a
)a b
)b c
;c d
migrationBuilder 
. 

UpdateData '
(' (
table 
: 
$str "
," #
	keyColumn 
: 
$str '
,' (
keyValue 
: 
$num 
, 
column 
: 
$str #
,# $
value 
: 
new 
DateTime #
(# $
$num$ (
,( )
$num* +
,+ ,
$num- /
,/ 0
$num1 3
,3 4
$num5 6
,6 7
$num8 :
,: ;
$num< >
,> ?
DateTimeKind@ L
.L M
LocalM R
)R S
.S T
AddTicksT \
(\ ]
$num] a
)a b
)b c
;c d
migrationBuilder!! 
.!! 

UpdateData!! '
(!!' (
table"" 
:"" 
$str"" "
,""" #
	keyColumn## 
:## 
$str## '
,##' (
keyValue$$ 
:$$ 
$num$$ 
,$$ 
column%% 
:%% 
$str%% #
,%%# $
value&& 
:&& 
new&& 
DateTime&& #
(&&# $
$num&&$ (
,&&( )
$num&&* +
,&&+ ,
$num&&- /
,&&/ 0
$num&&1 3
,&&3 4
$num&&5 6
,&&6 7
$num&&8 :
,&&: ;
$num&&< >
,&&> ?
DateTimeKind&&@ L
.&&L M
Local&&M R
)&&R S
.&&S T
AddTicks&&T \
(&&\ ]
$num&&] a
)&&a b
)&&b c
;&&c d
migrationBuilder(( 
.(( 

UpdateData(( '
(((' (
table)) 
:)) 
$str)) "
,))" #
	keyColumn** 
:** 
$str** '
,**' (
keyValue++ 
:++ 
$num++ 
,++ 
column,, 
:,, 
$str,, #
,,,# $
value-- 
:-- 
new-- 
DateTime-- #
(--# $
$num--$ (
,--( )
$num--* +
,--+ ,
$num--- /
,--/ 0
$num--1 3
,--3 4
$num--5 6
,--6 7
$num--8 :
,--: ;
$num--< >
,--> ?
DateTimeKind--@ L
.--L M
Local--M R
)--R S
.--S T
AddTicks--T \
(--\ ]
$num--] a
)--a b
)--b c
;--c d
migrationBuilder// 
.// 

UpdateData// '
(//' (
table00 
:00 
$str00 "
,00" #
	keyColumn11 
:11 
$str11 '
,11' (
keyValue22 
:22 
$num22 
,22 
column33 
:33 
$str33 #
,33# $
value44 
:44 
new44 
DateTime44 #
(44# $
$num44$ (
,44( )
$num44* +
,44+ ,
$num44- /
,44/ 0
$num441 3
,443 4
$num445 6
,446 7
$num448 :
,44: ;
$num44< >
,44> ?
DateTimeKind44@ L
.44L M
Local44M R
)44R S
.44S T
AddTicks44T \
(44\ ]
$num44] a
)44a b
)44b c
;44c d
migrationBuilder66 
.66 

UpdateData66 '
(66' (
table77 
:77 
$str77 "
,77" #
	keyColumn88 
:88 
$str88 '
,88' (
keyValue99 
:99 
$num99 
,99 
column:: 
::: 
$str:: #
,::# $
value;; 
:;; 
new;; 
DateTime;; #
(;;# $
$num;;$ (
,;;( )
$num;;* +
,;;+ ,
$num;;- /
,;;/ 0
$num;;1 3
,;;3 4
$num;;5 6
,;;6 7
$num;;8 :
,;;: ;
$num;;< >
,;;> ?
DateTimeKind;;@ L
.;;L M
Local;;M R
);;R S
.;;S T
AddTicks;;T \
(;;\ ]
$num;;] a
);;a b
);;b c
;;;c d
migrationBuilder== 
.== 

UpdateData== '
(==' (
table>> 
:>> 
$str>> "
,>>" #
	keyColumn?? 
:?? 
$str?? '
,??' (
keyValue@@ 
:@@ 
$num@@ 
,@@ 
columnAA 
:AA 
$strAA #
,AA# $
valueBB 
:BB 
newBB 
DateTimeBB #
(BB# $
$numBB$ (
,BB( )
$numBB* +
,BB+ ,
$numBB- /
,BB/ 0
$numBB1 3
,BB3 4
$numBB5 6
,BB6 7
$numBB8 :
,BB: ;
$numBB< >
,BB> ?
DateTimeKindBB@ L
.BBL M
LocalBBM R
)BBR S
.BBS T
AddTicksBBT \
(BB\ ]
$numBB] a
)BBa b
)BBb c
;BBc d
migrationBuilderDD 
.DD 

UpdateDataDD '
(DD' (
tableEE 
:EE 
$strEE "
,EE" #
	keyColumnFF 
:FF 
$strFF '
,FF' (
keyValueGG 
:GG 
$numGG 
,GG 
columnHH 
:HH 
$strHH #
,HH# $
valueII 
:II 
newII 
DateTimeII #
(II# $
$numII$ (
,II( )
$numII* +
,II+ ,
$numII- /
,II/ 0
$numII1 3
,II3 4
$numII5 6
,II6 7
$numII8 :
,II: ;
$numII< >
,II> ?
DateTimeKindII@ L
.IIL M
LocalIIM R
)IIR S
.IIS T
AddTicksIIT \
(II\ ]
$numII] a
)IIa b
)IIb c
;IIc d
migrationBuilderKK 
.KK 

UpdateDataKK '
(KK' (
tableLL 
:LL 
$strLL "
,LL" #
	keyColumnMM 
:MM 
$strMM '
,MM' (
keyValueNN 
:NN 
$numNN 
,NN 
columnOO 
:OO 
$strOO #
,OO# $
valuePP 
:PP 
newPP 
DateTimePP #
(PP# $
$numPP$ (
,PP( )
$numPP* +
,PP+ ,
$numPP- /
,PP/ 0
$numPP1 3
,PP3 4
$numPP5 6
,PP6 7
$numPP8 :
,PP: ;
$numPP< >
,PP> ?
DateTimeKindPP@ L
.PPL M
LocalPPM R
)PPR S
.PPS T
AddTicksPPT \
(PP\ ]
$numPP] a
)PPa b
)PPb c
;PPc d
}QQ 	
	protectedSS 
overrideSS 
voidSS 
DownSS  $
(SS$ %
MigrationBuilderSS% 5
migrationBuilderSS6 F
)SSF G
{TT 	
migrationBuilderUU 
.UU 

UpdateDataUU '
(UU' (
tableVV 
:VV 
$strVV "
,VV" #
	keyColumnWW 
:WW 
$strWW '
,WW' (
keyValueXX 
:XX 
$numXX 
,XX 
columnYY 
:YY 
$strYY #
,YY# $
valueZZ 
:ZZ 
newZZ 
DateTimeZZ #
(ZZ# $
$numZZ$ (
,ZZ( )
$numZZ* +
,ZZ+ ,
$numZZ- /
,ZZ/ 0
$numZZ1 3
,ZZ3 4
$numZZ5 7
,ZZ7 8
$numZZ9 ;
,ZZ; <
$numZZ= @
,ZZ@ A
DateTimeKindZZB N
.ZZN O
LocalZZO T
)ZZT U
.ZZU V
AddTicksZZV ^
(ZZ^ _
$numZZ_ c
)ZZc d
)ZZd e
;ZZe f
migrationBuilder\\ 
.\\ 

UpdateData\\ '
(\\' (
table]] 
:]] 
$str]] "
,]]" #
	keyColumn^^ 
:^^ 
$str^^ '
,^^' (
keyValue__ 
:__ 
$num__ 
,__ 
column`` 
:`` 
$str`` #
,``# $
valueaa 
:aa 
newaa 
DateTimeaa #
(aa# $
$numaa$ (
,aa( )
$numaa* +
,aa+ ,
$numaa- /
,aa/ 0
$numaa1 3
,aa3 4
$numaa5 7
,aa7 8
$numaa9 ;
,aa; <
$numaa= @
,aa@ A
DateTimeKindaaB N
.aaN O
LocalaaO T
)aaT U
.aaU V
AddTicksaaV ^
(aa^ _
$numaa_ c
)aac d
)aad e
;aae f
migrationBuildercc 
.cc 

UpdateDatacc '
(cc' (
tabledd 
:dd 
$strdd "
,dd" #
	keyColumnee 
:ee 
$stree '
,ee' (
keyValueff 
:ff 
$numff 
,ff 
columngg 
:gg 
$strgg #
,gg# $
valuehh 
:hh 
newhh 
DateTimehh #
(hh# $
$numhh$ (
,hh( )
$numhh* +
,hh+ ,
$numhh- /
,hh/ 0
$numhh1 3
,hh3 4
$numhh5 7
,hh7 8
$numhh9 ;
,hh; <
$numhh= @
,hh@ A
DateTimeKindhhB N
.hhN O
LocalhhO T
)hhT U
.hhU V
AddTickshhV ^
(hh^ _
$numhh_ c
)hhc d
)hhd e
;hhe f
migrationBuilderjj 
.jj 

UpdateDatajj '
(jj' (
tablekk 
:kk 
$strkk "
,kk" #
	keyColumnll 
:ll 
$strll '
,ll' (
keyValuemm 
:mm 
$nummm 
,mm 
columnnn 
:nn 
$strnn #
,nn# $
valueoo 
:oo 
newoo 
DateTimeoo #
(oo# $
$numoo$ (
,oo( )
$numoo* +
,oo+ ,
$numoo- /
,oo/ 0
$numoo1 3
,oo3 4
$numoo5 7
,oo7 8
$numoo9 ;
,oo; <
$numoo= @
,oo@ A
DateTimeKindooB N
.ooN O
LocalooO T
)ooT U
.ooU V
AddTicksooV ^
(oo^ _
$numoo_ c
)ooc d
)ood e
;ooe f
migrationBuilderqq 
.qq 

UpdateDataqq '
(qq' (
tablerr 
:rr 
$strrr "
,rr" #
	keyColumnss 
:ss 
$strss '
,ss' (
keyValuett 
:tt 
$numtt 
,tt 
columnuu 
:uu 
$struu #
,uu# $
valuevv 
:vv 
newvv 
DateTimevv #
(vv# $
$numvv$ (
,vv( )
$numvv* +
,vv+ ,
$numvv- /
,vv/ 0
$numvv1 3
,vv3 4
$numvv5 7
,vv7 8
$numvv9 ;
,vv; <
$numvv= @
,vv@ A
DateTimeKindvvB N
.vvN O
LocalvvO T
)vvT U
.vvU V
AddTicksvvV ^
(vv^ _
$numvv_ c
)vvc d
)vvd e
;vve f
migrationBuilderxx 
.xx 

UpdateDataxx '
(xx' (
tableyy 
:yy 
$stryy "
,yy" #
	keyColumnzz 
:zz 
$strzz '
,zz' (
keyValue{{ 
:{{ 
$num{{ 
,{{ 
column|| 
:|| 
$str|| #
,||# $
value}} 
:}} 
new}} 
DateTime}} #
(}}# $
$num}}$ (
,}}( )
$num}}* +
,}}+ ,
$num}}- /
,}}/ 0
$num}}1 3
,}}3 4
$num}}5 7
,}}7 8
$num}}9 ;
,}}; <
$num}}= @
,}}@ A
DateTimeKind}}B N
.}}N O
Local}}O T
)}}T U
.}}U V
AddTicks}}V ^
(}}^ _
$num}}_ c
)}}c d
)}}d e
;}}e f
migrationBuilder 
. 

UpdateData '
(' (
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ "
,
ÄÄ" #
	keyColumn
ÅÅ 
:
ÅÅ 
$str
ÅÅ '
,
ÅÅ' (
keyValue
ÇÇ 
:
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ #
,
ÉÉ# $
value
ÑÑ 
:
ÑÑ 
new
ÑÑ 
DateTime
ÑÑ #
(
ÑÑ# $
$num
ÑÑ$ (
,
ÑÑ( )
$num
ÑÑ* +
,
ÑÑ+ ,
$num
ÑÑ- /
,
ÑÑ/ 0
$num
ÑÑ1 3
,
ÑÑ3 4
$num
ÑÑ5 7
,
ÑÑ7 8
$num
ÑÑ9 ;
,
ÑÑ; <
$num
ÑÑ= @
,
ÑÑ@ A
DateTimeKind
ÑÑB N
.
ÑÑN O
Local
ÑÑO T
)
ÑÑT U
.
ÑÑU V
AddTicks
ÑÑV ^
(
ÑÑ^ _
$num
ÑÑ_ c
)
ÑÑc d
)
ÑÑd e
;
ÑÑe f
migrationBuilder
ÜÜ 
.
ÜÜ 

UpdateData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá "
,
áá" #
	keyColumn
àà 
:
àà 
$str
àà '
,
àà' (
keyValue
ââ 
:
ââ 
$num
ââ 
,
ââ 
column
ää 
:
ää 
$str
ää #
,
ää# $
value
ãã 
:
ãã 
new
ãã 
DateTime
ãã #
(
ãã# $
$num
ãã$ (
,
ãã( )
$num
ãã* +
,
ãã+ ,
$num
ãã- /
,
ãã/ 0
$num
ãã1 3
,
ãã3 4
$num
ãã5 7
,
ãã7 8
$num
ãã9 ;
,
ãã; <
$num
ãã= @
,
ãã@ A
DateTimeKind
ããB N
.
ããN O
Local
ããO T
)
ããT U
.
ããU V
AddTicks
ããV ^
(
ãã^ _
$num
ãã_ c
)
ããc d
)
ããd e
;
ããe f
migrationBuilder
çç 
.
çç 

UpdateData
çç '
(
çç' (
table
éé 
:
éé 
$str
éé "
,
éé" #
	keyColumn
èè 
:
èè 
$str
èè '
,
èè' (
keyValue
êê 
:
êê 
$num
êê 
,
êê 
column
ëë 
:
ëë 
$str
ëë #
,
ëë# $
value
íí 
:
íí 
new
íí 
DateTime
íí #
(
íí# $
$num
íí$ (
,
íí( )
$num
íí* +
,
íí+ ,
$num
íí- /
,
íí/ 0
$num
íí1 3
,
íí3 4
$num
íí5 7
,
íí7 8
$num
íí9 ;
,
íí; <
$num
íí= @
,
íí@ A
DateTimeKind
ííB N
.
ííN O
Local
ííO T
)
ííT U
.
ííU V
AddTicks
ííV ^
(
íí^ _
$num
íí_ c
)
ííc d
)
ííd e
;
ííe f
migrationBuilder
îî 
.
îî 

UpdateData
îî '
(
îî' (
table
ïï 
:
ïï 
$str
ïï "
,
ïï" #
	keyColumn
ññ 
:
ññ 
$str
ññ '
,
ññ' (
keyValue
óó 
:
óó 
$num
óó 
,
óó 
column
òò 
:
òò 
$str
òò #
,
òò# $
value
ôô 
:
ôô 
new
ôô 
DateTime
ôô #
(
ôô# $
$num
ôô$ (
,
ôô( )
$num
ôô* +
,
ôô+ ,
$num
ôô- /
,
ôô/ 0
$num
ôô1 3
,
ôô3 4
$num
ôô5 7
,
ôô7 8
$num
ôô9 ;
,
ôô; <
$num
ôô= @
,
ôô@ A
DateTimeKind
ôôB N
.
ôôN O
Local
ôôO T
)
ôôT U
.
ôôU V
AddTicks
ôôV ^
(
ôô^ _
$num
ôô_ c
)
ôôc d
)
ôôd e
;
ôôe f
}
öö 	
}
õõ 
}úú ›
OC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Achievements.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Achievements 
{ 
[ 	
Key	 
] 
public		 
int		 
AchievementId		  
{		  !
get		! $
;		$ %
set		% (
;		( )
}		) *
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
int 
AchievementTypeId $
{$ %
get% (
;( )
set) ,
;, -
}- .
public 
string 
? 
base64header #
{$ %
get% (
;( )
set) ,
;, -
}- .
public 
byte 
[ 
] 
? 
AchievementImage '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 
Profile 
? 
profile &
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
[ 	

ForeignKey	 
( 
$str '
)' (
]( )
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 
AchievementType &
?& '
achievementtype( 7
{7 8
get8 ;
;; <
set< ?
;? @
}@ A
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
DefaultValue	 
( 
true 
) 
] 
public   
bool   
IsActive   
{   
get    
;    !
set  ! $
;  $ %
}  % &
}!! 
}"" Ô	
RC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\AchievementType.cs
	namespace 	
PMS_API
 
{ 
public 

class 
AchievementType  
{ 
[ 	
Key	 
] 
public		 
int		 
AchievementTypeId		 $
{		$ %
get		% (
;		( )
set		) ,
;		, -
}		- .
public

 
string

 
?

 
AchievementTypeName

 *
{

* +
get

+ .
;

. /
set

/ 2
;

2 3
}

3 4
[ 	
InverseProperty	 
( 
$str *
)* +
]+ ,
public 
virtual 
ICollection "
<" #
Achievements# /
>/ 0
?0 1
achievements2 >
{> ?
get? B
;B C
setC F
;F G
}G H
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} É
PC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\BreakDuration.cs
	namespace 	
PMS_API
 
{ 
public 

class 
BreakDuration 
{ 
[ 	
Key	 
] 
public		 
int		 
BreakDuration_Id		 #
{		# $
get		$ '
;		' (
set		( +
;		+ ,
}		, -
public 
DateTime 
StartingDuration (
{( )
get) ,
;, -
set- 0
;0 1
}1 2
public 
DateTime 
EndingDuration &
{& '
get' *
;* +
set+ .
;. /
}/ 0
public 
int 
PersonalDetailsId $
{$ %
get% (
;( )
set) ,
;, -
}- .
[ 	

ForeignKey	 
( 
$str '
)' (
]( )
[ 	
InverseProperty	 
( 
$str (
)( )
]) *
public 
virtual 
PersonalDetails &
?& '
personalDetails) 8
{9 :
get: =
;= >
set> A
;A B
}B C
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public   
int   
?   
	UpdatedBy   
{   
get    #
;  # $
set  % (
;  ( )
}  * +
[!! 	
DefaultValue!!	 
(!! 
true!! 
)!! 
]!! 
public"" 
bool"" 
IsActive"" 
{"" 
get"" "
;""" #
set""$ '
;""' (
}"") *
}## 
}$$ ®
PC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\CascadeFilter.cs
	namespace 	
PMS_API
 
{ 
[ 
	NotMapped 
] 
public 

class 
CascadeFilter 
{		 
public

 
string

 
?

 
UserName

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
=

- .
String

. 4
.

4 5
Empty

5 :
;

: ;
public 
int 
DesignationId  
{! "
get# &
;& '
set( +
;+ ,
}- .
=. /
$num/ 0
;0 1
public 
int 
DomainID 
{ 
get !
;! "
set# &
;& '
}( )
=) *
$num* +
;+ ,
public 
int 
TechnologyId 
{  !
get" %
;% &
set' *
;* +
}, -
=- .
$num. /
;/ 0
public 
int 
	CollegeId 
{ 
get "
;" #
set$ '
;' (
}) *
=* +
$num+ ,
;, -
public 
int 
ProfileStatusId "
{# $
get% (
;( )
set* -
;- .
}/ 0
=0 1
$num1 2
;2 3
} 
} ¨
QC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\ChangePassword.cs
	namespace 	
PMS_API
 
{ 
public 

class 
ChangePassword 
{ 
[ 	
Key	 
] 
public 
int 
ChangePasswordId #
{# $
get$ '
;' (
set) ,
;, -
}- .
public		 
string		 
?		 
NewPassword		 "
{		" #
get		# &
;		& '
set		' *
;		* +
}		+ ,
public

 
string

 
?

 
ConfirmPassword

 &
{

& '
get

' *
;

* +
set

+ .
;

. /
}

/ 0
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} Á

JC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\College.cs
	namespace 	
PMS_API
 
{ 
public 
class 
College 
{ 
[ 	
Key	 
] 
public 
int 
	CollegeId 
{ 
get  
;  !
set" %
;% &
}& '
[		 	
Required			 
]		 
[

 	
StringLength

	 
(

 
$num

 
)

 
]

 
public 
string 
? 
CollegeName "
{" #
get# &
;& '
set' *
;* +
}+ ,
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
	Education# ,
>, -
?- .
	education/ 8
{: ;
get; >
;> ?
set? B
;B C
}C D
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} “	
NC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\CountryCode.cs
	namespace 	
PMS_API
 
{ 
public 
class 
CountryCode 
{ 
[ 	
Key	 
] 
public 
int 
CountryCodeId  
{  !
get! $
;$ %
set& )
;) *
}* +
public		 
string		 
?		 
CountryCodeName		 &
{		& '
get		' *
;		* +
set		+ .
;		. /
}		/ 0
[

 	
InverseProperty

	 
(

 
$str

 &
)

& '
]

' (
public 
virtual 
ICollection "
<" #
User# '
>' (
?( )
users+ 0
{0 1
get1 4
;4 5
set5 8
;8 9
}9 :
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} Á
NC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Designation.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Designation 
{ 
public 
Designation 
( 
) 
{ 	
users		 
=		 
new		 
HashSet		 
<		  
User		  $
>		$ %
(		% &
)		& '
;		' (
}

 	
[ 	
Key	 
] 
public 
int 
DesignationId  
{  !
get! $
;$ %
set& )
;) *
}* +
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
? 
DesignationName '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
[ 	
InverseProperty	 
( 
$str &
)& '
]' (
public 
ICollection 
< 
User 
>  
?  !
users# (
{* +
get+ .
;. /
set/ 2
;2 3
}3 4
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ›

IC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Domain.cs
	namespace 	
PMS_API
 
{ 
public 
class 
Domain 
{ 
[ 	
Key	 
] 
public 
int 
DomainId 
{ 
get 
;  
set! $
;$ %
}% &
[		 	
Required			 
]		 
[

 	
StringLength

	 
(

 
$num

 
)

 
]

 
public 
string 
? 

DomainName "
{" #
get# &
;& '
set' *
;* +
}+ ,
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 
ICollection "
<" #
Skills# )
>) *
?* +
skills, 2
{3 4
get4 7
;7 8
set8 ;
;; <
}< =
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ¸
LC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Education.cs
	namespace 	
PMS_API
 
{ 
public 

class 
	Education 
{ 
[ 	
Key	 
] 
public		 
int		 
EducationId		 
{		 
get		 "
;		" #
set		# &
;		& '
}		' (
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
string 
? 
Degree 
{ 
get !
;! "
set" %
;% &
}& '
public 
string 
? 
Course 
{ 
get !
;! "
set" %
;% &
}& '
public 
int 
	CollegeId 
{ 
get !
;! "
set" %
;% &
}& '
public 
int 
? 
Starting 
{ 
get  
;  !
set! $
;$ %
}% &
public 
int 
? 
Ending 
{ 
get 
; 
set "
;" #
}# $
public 
float 

Percentage 
{  
get  #
;# $
set$ '
;' (
}( )
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str $
)$ %
]% &
public 
virtual 
Profile 
? 
profile  '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public!! 
int!! 
?!! 
	UpdatedBy!! 
{!! 
get!!  #
;!!# $
set!!% (
;!!( )
}!!* +
["" 	

ForeignKey""	 
("" 
$str"" 
)""  
]""  !
[## 	
InverseProperty##	 
(## 
$str## $
)##$ %
]##% &
public$$ 
virtual$$ 
College$$ 
?$$ 
college$$  '
{$$( )
get$$* -
;$$- .
set$$/ 2
;$$2 3
}$$4 5
[%% 	
DefaultValue%%	 
(%% 
true%% 
)%% 
]%% 
public&&	 
bool&& 
IsActive&& 
{&& 
get&&  #
;&&# $
set&&% (
;&&( )
}&&* +
}'' 
}(( Î	
IC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Gender.cs
	namespace 	
PMS_API
 
{ 
public 
class 
Gender 
{ 
[ 	
Key	 
] 
public 
int 
GenderId 
{ 
get 
;  
set! $
;$ %
}% &
public		 
string		 
?		 

GenderName		 !
{		! "
get		" %
;		% &
set		& )
;		) *
}		* +
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
ICollection 
< 
User 
>  
?  !
users" '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
=1 2
default2 9
!9 :
;: ;
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ú
KC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Language.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Language 
{ 
[ 	
Key	 
] 
public		 
int		 

LanguageId		 
{		 
get		 !
;		! "
set		" %
;		% &
}		& '
public

 
string

 
?

 
LanguageName

 #
{

# $
get

$ '
;

' (
set

( +
;

+ ,
}

, -
public 
bool 
Read 
{ 
get 
; 
set  
;  !
}! "
public 
bool 
Write 
{ 
get 
; 
set !
;! "
}" #
public 
bool 
Speak 
{ 
get 
; 
set !
;! "
}" #
public 
int 
PersonalDetailsId $
{$ %
get% (
;( )
set) ,
;, -
}- .
[ 	

ForeignKey	 
( 
$str '
)' (
]( )
[ 	
InverseProperty	 
( 
$str #
)# $
]$ %
public	 
virtual 
PersonalDetails '
?' (
personalDetails* 9
{: ;
get; >
;> ?
set? B
;B C
}C D
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} –
GC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Mail.cs
	namespace 	
PMS_API
 
{ 
[ 
	NotMapped 
] 
public 

class 
MailRequest 
{ 
public		 
string		 
?		 
ToEmail		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
IEnumerable

 
<

 
string

 !
>

! "
?

" #
ToEmailList

$ /
{

0 1
get

2 5
;

5 6
set

7 :
;

: ;
}

< =
public 
string 
? 
Subject 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Body 
{ 
get !
;! "
set# &
;& '
}( )
} 
[ 
	NotMapped 
] 
public 

class 
MailSettings 
{ 
public 
string 
? 
Mail 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
DisplayName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Password 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Host 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Port 
{ 
get 
; 
set "
;" #
}$ %
} 
} ÷	
OC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Organisation.cs
	namespace 	
PMS_API
 
{ 
public 
class 
Organisation 
{ 
[ 	
Key	 
] 
public 
int 
OrganisationId !
{! "
get" %
;% &
set' *
;* +
}+ ,
public		 
string		 
?		 
OrganisationName		 '
{		' (
get		( +
;		+ ,
set		, /
;		/ 0
}		0 1
[

 	
InverseProperty

	 
(

 
$str

 '
)

' (
]

( )
public 
virtual 
ICollection "
<" #
User# '
>' (
?( )
users* /
{/ 0
get0 3
;3 4
set4 7
;7 8
}8 9
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ñ$
RC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\PersonalDetails.cs
	namespace 	
PMS_API
 
{ 
public 

class 
PersonalDetails  
{ 
[ 	
Key	 
] 
public		 
int		 
PersonalDetailsId		 $
{		$ %
get		% (
;		( )
set		) ,
;		, -
}		- .
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
string 
? 
	Objective  
{  !
get! $
;$ %
set% (
;( )
}) *
public 
DateTime 
DateOfBirth #
{# $
get$ '
;' (
set( +
;+ ,
}, -
public 
string 
? 
Nationality "
{" #
get# &
;& '
set' *
;* +
}+ ,
public 
DateTime 
DateOfJoining %
{% &
get& )
;) *
set* -
;- .
}. /
public 
string 
? 
base64header #
{$ %
get% (
;( )
set) ,
;, -
}- .
public 
byte 
[ 
] 
? 
Image 
{ 
get  
;  !
set! $
;$ %
}% &
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
InverseProperty	 
( 
$str *
)* +
]+ ,
public 
virtual 
ICollection "
<" #
Language# +
>+ ,
?, -
language. 6
{7 8
get9 <
;< =
set> A
;A B
}C D
[!! 	
InverseProperty!!	 
(!! 
$str!! *
)!!* +
]!!+ ,
public"" 
virtual"" 
ICollection"" "
<""" #
BreakDuration""# 0
>""0 1
?""1 2
breakDuration""3 @
{""A B
get""C F
;""F G
set""H K
;""K L
}""M N
[$$ 	
InverseProperty$$	 
($$ 
$str$$ *
)$$* +
]$$+ ,
public%% 
virtual%% 
ICollection%% "
<%%" #
SocialMedia%%# .
>%%. /
?%%/ 0
socialmedia%%1 <
{%%= >
get%%? B
;%%B C
set%%D G
;%%G H
}%%I J
[&& 	

ForeignKey&&	 
(&& 
$str&& 
)&& 
]&& 
[''	 

InverseProperty''
 
('' 
$str'' +
)''+ ,
]'', -
public(( 
virtual(( 
User(( 
?(( 
users(( "
{((# $
get((% (
;((( )
set((* -
;((- .
}((/ 0
[)) 	

ForeignKey))	 
()) 
$str)) 
)))  
]))  !
[** 	
InverseProperty**	 
(** 
$str** *
)*** +
]**+ ,
public++ 
virtual++ 
Profile++ 
?++ 
profile++  '
{++' (
get++( +
;+++ ,
set++, /
;++/ 0
}++0 1
[,, 	
DefaultValue,,	 
(,, 
true,, 
),, 
],, 
public-- 
bool-- 
IsActive-- 
{-- 
get-- !
;--! "
set--# &
;--& '
}--' (
}.. 
}// Ø"
JC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Profile.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Profile 
{ 
[		 	
Key			 
]		 
public

 
int

 
	ProfileId

 
{

 
get

 !
;

! "
set

" %
;

% &
}

& '
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
PersonalDetails &
?& '
personalDetails( 7
{7 8
get8 ;
;; <
set< ?
;? @
}@ A
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
	Education# ,
>, -
?- .
	education/ 8
{9 :
get; >
;> ?
set@ C
;C D
}D E
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
Projects# +
>+ ,
?, -
projects. 6
{7 8
get9 <
;< =
set> A
;A B
}B C
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
Skills# )
>) *
?* +
skills, 2
{3 4
get5 8
;8 9
set: =
;= >
}> ?
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
ICollection "
<" #
Achievements# /
>/ 0
?0 1
achievements2 >
{? @
getA D
;D E
setF I
;I J
}J K
[ 	
DefaultValue	 
( 
$num 
) 
] 
public 
int 
ProfileStatusId "
{# $
get$ '
;' (
set) ,
;, -
}- .
[ 	

ForeignKey	 
( 
$str %
)% &
]& '
public 
virtual 
ProfileStatus $
?$ %
profilestatus& 3
{4 5
get5 8
;8 9
set9 <
;< =
}= >
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public   
DateTime   
?   
	UpdatedOn   "
{  # $
get  % (
;  ( )
set  * -
;  - .
}  / 0
["" 	

ForeignKey""	 
("" 
$str"" 
)"" 
]"" 
public## 
int## 
UserId## 
{## 
get## 
;## 
set## !
;##! "
}##" #
[$$ 	
DefaultValue$$	 
($$ 
true$$ 
)$$ 
]$$ 
public%% 
bool%% 
IsActive%% 
{%% 
get%%  
;%%  !
set%%! $
;%%$ %
}%%% &
['' 	

ForeignKey''	 
('' 
$str'' 
)'' 
]'' 
[(( 	
InverseProperty((	 
((( 
$str(( "
)((" #
]((# $
public)) 
virtual)) 
User)) 
?)) 
user)) !
{))" #
get))$ '
;))' (
set))) ,
;)), -
}))- .
[** 	
	NotMapped**	 
]** 
public++ 
virtual++ 
double++ 
year++ "
{++# $
get++% (
;++( )
set++* -
;++- .
}++/ 0
}-- 
}.. ¨

QC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\ProfileHistory.cs
	namespace 	
PMS_API
 
{ 
public 

class 
ProfileHistory 
{ 
[		 	
Key			 
]		 
public

 
int

 
ProfileHistoryId

 #
{

# $
get

% (
;

( )
set

) ,
;

, -
}

- .
public 
int 
	ProfileId 
{ 
get  
;  !
set! $
;$ %
}% &
public 
DateTime 
ApprovedDate $
{$ %
get% (
;( )
set) ,
;, -
}- .
[ 	

ForeignKey	 
( 
$str 
)  
]  !
public 
virtual 
Profile 
? 
profile  '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ˝
PC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\ProfileStatus.cs
	namespace 	
PMS_API
 
{ 
public 
class 
ProfileStatus 
{ 
[ 	
Key	 
] 
public 
int 
ProfileStatusId "
{" #
get# &
;& '
set( +
;+ ,
}, -
public		 
string		 
?		 
ProfileStatusName		 (
{		( )
get		) ,
;		, -
set		- 0
;		0 1
}		1 2
[

 	
DefaultValue

	 
(

 
true

 
)

 
]

 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ˜ 
KC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Projects.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Projects 
{ 
[ 	
Key	 
] 
public		 
int		 
	ProjectId		 
{		 
get		  
;		  !
set		! $
;		$ %
}		% &
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
string 
? 
ProjectName "
{" #
get# &
;& '
set' *
;* +
}+ ,
public 
string 
? 
ProjectDescription )
{) *
get* -
;- .
set. 1
;1 2
}2 3
[ 	
	NotMapped	 
] 
public	 
DateTime  
ProjectStartingMonth -
{- .
get. 1
;1 2
set2 5
;5 6
}6 7
[ 	
	NotMapped	 
] 
public 
DateTime 
ProjectStartingYear +
{+ ,
get, /
;/ 0
set0 3
;3 4
}4 5
[ 	
	NotMapped	 
] 
public 
DateTime 
ProjectEndingMonth *
{* +
get+ .
;. /
set/ 2
;2 3
}3 4
[ 	
	NotMapped	 
] 
public 
DateTime 
ProjectEndingYear )
{) *
get* -
;- .
set. 1
;1 2
}2 3
public 
string 
? 
StartingMonth $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
int 
? 
StartingYear  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
EndingMonth "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 

EndingYear 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Designation "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
	ToolsUsed  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public   
int   
?   
	CreatedBy   
{   
get    #
;  # $
set  % (
;  ( )
}  * +
public"" 
DateTime"" 
?"" 
	UpdatedOn"" "
{""# $
get""% (
;""( )
set""* -
;""- .
}""/ 0
public$$ 
int$$ 
?$$ 
	UpdatedBy$$ 
{$$ 
get$$  #
;$$# $
set$$% (
;$$( )
}$$* +
[%% 	

ForeignKey%%	 
(%% 
$str%% 
)%%  
]%%  !
[&& 	
InverseProperty&&	 
(&& 
$str&& #
)&&# $
]&&$ %
public'' 
virtual'' 
Profile'' 
?'' 
profile''  '
{''' (
get''( +
;''+ ,
set'', /
;''/ 0
}''0 1
[(( 	
DefaultValue((	 
((( 
true(( 
)(( 
](( 
public)) 
bool)) 
IsActive)) 
{)) 
get)) "
;))" #
set))$ '
;))' (
}))) *
}** 
}++ Ê
IC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Skills.cs
	namespace 	
PMS_API
 
{ 
public 

class 
Skills 
{ 
[ 	
Key	 
] 
public		 
int		 
SkillId		 
{		 
get		 
;		 
set		 "
;		" #
}		# $
public

 
int

 
	ProfileId

 
{

 
get

  
;

  !
set

! $
;

$ %
}

% &
public 
int 
TechnologyId 
{  
get  #
;# $
set$ '
;' (
}( )
[ 	

ForeignKey	 
( 
$str "
)" #
]# $
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 

Technology !
?! "

technology# -
{- .
get. 1
;1 2
set2 5
;5 6
}6 7
public 
int 
DomainId 
{ 
get 
;  
set  #
;# $
}$ %
[ 	

ForeignKey	 
( 
$str 
) 
]  
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 
Domain 
? 
domain %
{% &
get& )
;) *
set* -
;- .
}. /
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 
Profile 
? 
profile  '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public   
int   
?   
	UpdatedBy   
{   
get    #
;  # $
set  % (
;  ( )
}  * +
[!! 	
DefaultValue!!	 
(!! 
true!! 
)!! 
]!! 
public"" 
bool"" 
IsActive"" 
{"" 
get"" "
;""" #
set""$ '
;""' (
}"") *
}## 
}$$ ô
NC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\SocialMedia.cs
	namespace 	
PMS_API
 
{ 
public 

class 
SocialMedia 
{ 
[ 	
Key	 
] 
public		 
int		 
SocialMedia_Id		 !
{		! "
get		" %
;		% &
set		& )
;		) *
}		* +
public

 
string

 
?

 
SocialMedia_Name

 '
{

' (
get

( +
;

+ ,
set

, /
;

/ 0
}

0 1
public 
string 
? 
SocialMedia_Link '
{' (
get( +
;+ ,
set, /
;/ 0
}0 1
public 
int 
PersonalDetailsId $
{$ %
get% (
;( )
set) ,
;, -
}- .
[	 


ForeignKey
 
( 
$str (
)( )
]) *
[ 	
InverseProperty	 
( 
$str &
)& '
]' (
public 
virtual 
PersonalDetails &
?& '
personalDetails) 8
{9 :
get: =
;= >
set> A
;A B
}B C
public 
DateTime 
? 
	CreatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	CreatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} Ö

MC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\Technology.cs
	namespace 	
PMS_API
 
{ 
public 
class 

Technology 
{ 
[ 	
Key	 
] 
public 
int 
TechnologyId 
{  
get  #
;# $
set% (
;( )
}) *
[		 	
Required			 
]		 
public

 
string

 
?

 
TechnologyName

 %
{

% &
get

& )
;

) *
set

* -
;

- .
}

. /
[ 	
InverseProperty	 
( 
$str %
)% &
]& '
public 
virtual 
ICollection "
<" #
Skills# )
>) *
?* +
skills, 2
{3 4
get4 7
;7 8
set8 ;
;; <
}< =
[ 	
DefaultValue	 
( 
true 
) 
] 
public 
bool 
IsActive 
{ 
get  
;  !
set! $
;$ %
}% &
} 
} ≠)
GC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Models\User.cs
	namespace 	
PMS_API
 
{ 
public		 

class		 
User		 
{

 
[ 	
Key	 
] 
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Email 
{ 
get "
;" #
set$ '
;' (
}) *
public   
string   
?   
UserName   
{    !
get  " %
;  % &
set  ' *
;  * +
}  , -
public&& 
string&& 
?&& 
Password&& 
{&&  !
get&&" %
;&&% &
set&&' *
;&&* +
}&&, -
public(( 
int(( 
?(( 
CountryCodeId(( !
{((" #
get(($ '
;((' (
set(() ,
;((, -
}((. /
[** 	

ForeignKey**	 
(** 
$str** #
)**# $
]**$ %
[++ 	
InverseProperty++	 
(++ 
$str++  
)++  !
]++! "
public-- 
virtual-- 
CountryCode-- "
?--" #
countrycode--$ /
{--0 1
get--2 5
;--5 6
set--7 :
;--: ;
}--< =
public.. 
string.. 
?.. 
MobileNumber.. #
{..$ %
get..& )
;..) *
set..+ .
;... /
}..0 1
public00 
int00 
DesignationId00  
{00! "
get00# &
;00& '
set00( +
;00+ ,
}00- .
[22 	

ForeignKey22	 
(22 
$str22 #
)22# $
]22$ %
[33 	
InverseProperty33	 
(33 
$str33  
)33  !
]33! "
public55 
virtual55 
Designation55 "
?55" #
designation55$ /
{550 1
get552 5
;555 6
set557 :
;55: ;
}55< =
public66 
string66 
?66 #
ReportingPersonUsername66 .
{66/ 0
get661 4
;664 5
set666 9
;669 :
}66; <
public88 
int88 
OrganisationId88 !
{88" #
get88$ '
;88' (
set88) ,
;88, -
}88. /
[99 	

ForeignKey99	 
(99 
$str99 $
)99$ %
]99% &
[:: 	
InverseProperty::	 
(:: 
$str::  
)::  !
]::! "
public<< 
virtual<< 
Organisation<< #
?<<# $
organisation<<% 1
{<<2 3
get<<4 7
;<<7 8
set<<9 <
;<<< =
}<<> ?
public>> 
int>> 
GenderId>> 
{>> 
get>> !
;>>! "
set>># &
;>>& '
}>>( )
[@@ 	

ForeignKey@@	 
(@@ 
$str@@ 
)@@ 
]@@  
[AA 	
InversePropertyAA	 
(AA 
$strAA  
)AA  !
]AA! "
publicCC 
virtualCC 
GenderCC 
?CC 
genderCC %
{CC& '
getCC( +
;CC+ ,
setCC- 0
;CC0 1
}CC2 3
[EE 	
InversePropertyEE	 
(EE 
$strEE  
)EE  !
]EE! "
publicGG 
virtualGG 
PersonalDetailsGG &
?GG& '
personalDetailsGG( 7
{GG8 9
getGG: =
;GG= >
setGG? B
;GGB C
}GGD E
[NN 	
InversePropertyNN	 
(NN 
$strNN 
)NN  
]NN  !
publicOO 
virtualOO 
ProfileOO 
?OO 
profileOO  '
{OO' (
getOO( +
;OO+ ,
setOO, /
;OO/ 0
}OO0 1
publicPP 
intPP 
?PP 
	CreatedByPP 
{PP 
getPP  #
;PP# $
setPP% (
;PP( )
}PP* +
publicQQ 
DateTimeQQ 
?QQ 
	CreatedOnQQ "
{QQ# $
getQQ% (
;QQ( )
setQQ* -
;QQ- .
}QQ/ 0
publicRR 
intRR 
?RR 
	UpdatedByRR 
{RR 
getRR  #
;RR# $
setRR% (
;RR( )
}RR* +
publicSS 
DateTimeSS 
?SS 
	UpdatedOnSS "
{SS# $
getSS% (
;SS( )
setSS* -
;SS- .
}SS/ 0
[TT 	
DefaultValueTT	 
(TT 
trueTT 
)TT 
]TT 
publicUU 
boolUU 
IsActiveUU 
{UU 
getUU "
;UU" #
setUU$ '
;UU' (
}UU) *
}ZZ 
}[[  N
CC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Program.cs
var		 
builder		 
=		 
WebApplication		 
.		 
CreateBuilder		 *
(		* +
args		+ /
)		/ 0
;		0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder 
. 
Services 
. 
AddSwaggerGen 
( 
c  
=>! #
{$ %
c 
. 

SwaggerDoc 
( 
$str 
, 
new 
OpenApiInfo &
{' (
Title 
= 
$str #
,# $
Version% ,
=- .
$str/ 3
} 
) 
; 
c 
. !
AddSecurityDefinition 
( 
$str $
,$ %
new& )!
OpenApiSecurityScheme* ?
(? @
)@ A
{B C
Name 
= 
$str 
, 
Type 
= 
SecuritySchemeType %
.% &
ApiKey& ,
,, -
Scheme 
= 
$str 
, 
BearerFormat 
= 
$str  
,  !
In 
= 
ParameterLocation "
." #
Header# )
,) *
Description 
= 
$str	 ¬
,
¬ √
} 
) 
; 
c 
. "
AddSecurityRequirement 
( 
new  &
OpenApiSecurityRequirement! ;
{< =
{ 	
new !
OpenApiSecurityScheme %
{& '
	Reference 
= 
new 
OpenApiReference  0
{1 2
Type   
=   
ReferenceType   (
.  ( )
SecurityScheme  ) 7
,  7 8
Id!! 
=!! 
$str!! %
}"" 
}## 
,## 
new$$ 
string$$ 
[$$ 
]$$ 
{$$ 
}$$ 
}%% 	
}&& 
)&& 
;&& 
}'' 
)'' 
;'' 
builder(( 
.(( 
Services(( 
.(( 
AddDbContext(( 
<(( 
Context(( %
>((% &
(((& '
options((' .
=>((/ 1
{((1 2
options)) 
.)) 
UseSqlServer)) 
()) 
builder))  
.))  !
Configuration))! .
.)). /
GetConnectionString))/ B
())B C
$str))C V
)))V W
)))W X
;))X Y
}** 
)** 
;** 
builder++ 
.++ 
Services++ 
.++ 
	AddScoped++ 
<++ 
IMailService++ '
,++' (
MailService++( 3
>++3 4
(++4 5
)++5 6
;++6 7
builder,, 
.,, 
Services,, 
.,, 
	AddScoped,, 
<,,  
IMailDataAccessLayer,, /
,,,/ 0
MailDataAccessLayer,,0 C
>,,C D
(,,D E
),,E F
;,,F G
builder-- 
.-- 
Services-- 
.-- 
	AddScoped-- 
<-- 
ILoginService-- (
,--( )
LoginService--) 5
>--5 6
(--6 7
)--7 8
;--8 9
builder.. 
... 
Services.. 
... 
	AddScoped.. 
<.. 
	IUserData.. $
,..$ %
UserData..% -
>..- .
(... /
)../ 0
;..0 1
builder// 
.// 
Services// 
.// 
	AddScoped// 
<// 
IProfileData// '
,//' (
ProfileData//( 3
>//3 4
(//4 5
)//5 6
;//6 7
builder11 
.11 
Services11 
.11 
	AddScoped11 
<11 
IUserServices11 (
,11( )
UserServices11) 5
>115 6
(116 7
)117 8
;118 9
builder33 
.33 
Services33 
.33 
	AddScoped33 
<33 
IProfileService33 *
,33* +
ProfileService33+ 9
>339 :
(33: ;
)33; <
;33< =
builder44 
.44 
Services44 
.44 
	AddScoped44 
<44 
ICollegeServices44 +
,44+ ,
CollegeServices44, ;
>44; <
(44< =
)44= >
;44> ?
builder55 
.55 
Services55 
.55 
	AddScoped55 
<55  
IDesignationServices55 /
,55/ 0
DesignationServices550 C
>55C D
(55D E
)55E F
;55F G
builder66 
.66 
Services66 
.66 
	AddScoped66 
<66 
IDomainServices66 *
,66* +
DomainServices66+ 9
>669 :
(66: ;
)66; <
;66< =
builder77 
.77 
Services77 
.77 
	AddScoped77 
<77 "
IProfileStatusServices77 1
,771 2!
ProfileStatusServices772 G
>77G H
(77H I
)77I J
;77J K
builder88 
.88 
Services88 
.88 
	AddScoped88 
<88 
ITechnologyServices88 .
,88. /
TechnologyServices88/ A
>88A B
(88B C
)88C D
;88D E
builder99 
.99 
Services99 
.99 
AddAuthentication99 "
(99" #
JwtBearerDefaults99# 4
.994 5 
AuthenticationScheme995 I
)99I J
.99J K
AddJwtBearer99K W
(99W X
options99X _
=>99` b
{:: 
options;; 
.;;  
RequireHttpsMetadata;;  
=;;  !
false;;! &
;;;& '
options<< 
.<< 
	SaveToken<< 
=<< 
true<< 
;<< 
options== 
.== %
TokenValidationParameters== %
===% &
new==& )%
TokenValidationParameters==* C
(==C D
)==D E
{>> 
ValidateIssuer?? 
=?? 
true?? 
,?? 
ValidateAudience@@ 
=@@ 
true@@ 
,@@ 
ValidAudienceAA 
=AA 
builderAA 
.AA 
ConfigurationAA ,
[AA, -
$strAA- ;
]AA; <
,AA< =
ValidIssuerBB 
=BB 
builderBB 
.BB 
ConfigurationBB )
[BB) *
$strBB* 6
]BB6 7
,BB7 8
IssuerSigningKeyCC 
=CC 
newCC  
SymmetricSecurityKeyCC 1
(CC1 2
EncodingCC2 :
.CC: ;
UTF8CC; ?
.CC? @
GetBytesCC@ H
(CCH I
builderCCI P
.CCP Q
ConfigurationCCQ ^
[CC^ _
$strCC_ h
]CCh i
)CCi j
)CCj k
}DD 
;DD 
}EE 
)FF 
;FF 
builderGG 
.GG 
ServicesGG 
.GG #
AddControllersWithViewsGG (
(GG( )
)GG) *
.GG* +
AddNewtonsoftJsonGG+ <
(GG< =
optionsGG= D
=>GGE G
optionsHH 
.HH 
SerializerSettingsHH 
.HH !
ReferenceLoopHandlingHH 0
=HH0 1

NewtonsoftHH1 ;
.HH; <
JsonHH< @
.HH@ A!
ReferenceLoopHandlingHHA V
.HHV W
IgnoreHHW ]
)II 
;II 
builderJJ 
.JJ 
ServicesJJ 
.JJ 
AddCorsJJ 
(JJ 
(JJ 
setupJJ 
)JJ  
=>JJ! #
{LL 
setupNN 	
.NN	 

	AddPolicyNN
 
(NN 
$strNN 
,NN 
(NN  
optionsNN  '
)NN' (
=>NN) +
{PP 
optionsRR 
.RR 
AllowAnyMethodRR 
(RR 
)RR  
.RR  !
AllowAnyHeaderRR! /
(RR/ 0
)RR0 1
.RR1 2
AllowAnyOriginRR2 @
(RR@ A
)RRA B
;RRB C
}TT 
)TT 
;TT 
}VV 
)VV 
;VV 
varWW 
appWW 
=WW 	
builderWW
 
.WW 
BuildWW 
(WW 
)WW 
;WW 
ifZZ 
(ZZ 
appZZ 
.ZZ 
EnvironmentZZ 
.ZZ 
IsDevelopmentZZ !
(ZZ! "
)ZZ" #
)ZZ# $
{[[ 
app\\ 
.\\ 

UseSwagger\\ 
(\\ 
)\\ 
;\\ 
app]] 
.]] 
UseSwaggerUI]] 
(]] 
)]] 
;]] 
}^^ 
app__ 
.__ 
UseCors__ 
(__ 
$str__ 
)__ 
;__ 
app`` 
.`` 
UseHttpsRedirection`` 
(`` 
)`` 
;`` 
appbb 
.bb 
UseAuthenticationbb 
(bb 
)bb 
;bb 
appdd 
.dd 
UseAuthorizationdd 
(dd 
)dd 
;dd 
appff 
.ff 
MapControllersff 
(ff 
)ff 
;ff 
apphh 
.hh 
Runhh 
(hh 
)hh 	
;hh	 
®
TC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\CollegeServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
CollegeServices  
:! "
ICollegeServices# 3
{ 
private 
readonly #
ICollegeDataAccessLayer 0#
_collegeDataAccessLayer1 H
=I J
CollegeDataFactoryK ]
.] ^+
GetCollegeDataAccessLayerObject^ }
(} ~
)~ 
;	 Ä
private		 
readonly		 
ILogger		  
<		  !
CollegeServices		! 0
>		0 1
_logger		1 8
=		9 :
default		; B
!		B C
;		C D
public 
IEnumerable 
< 
College "
>" #
ViewColleges$ 0
(0 1
)1 2
{ 	
try 
{ 
return 
from 
college #
in$ &#
_collegeDataAccessLayer' >
.> ?
GetColleges? J
(J K
)K L
whereM R
collegeS Z
.Z [
IsActive[ c
==d f
trueg k
selectl r
colleges z
;z {
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} Ô
XC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\DesignationServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
DesignationServices $
:% & 
IDesignationServices' ;
{ 
private 
readonly '
IDesignationDataAccessLayer 4'
_designationDataAccessLayer5 P
=Q R"
DesignationDataFactoryS i
.i j0
#GetDesignationDataAccessLayerObject	j ç
(
ç é
)
é è
;
è ê
private		 
readonly		 
ILogger		  
<		  !
DesignationServices		! 4
>		4 5
_logger		5 <
=		= >
default		? F
!		F G
;		G H
public 
IEnumerable 
< 
Designation &
>& '
ViewDesignations( 8
(8 9
)9 :
{ 	
try 
{ 
return 
from 
designation '
in( *'
_designationDataAccessLayer+ F
.F G
GetDesignationsG V
(V W
)W X
whereY ^
designation_ j
.j k
IsActivek s
==t v
truew {
select	| Ç
designation
É é
;
é è
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} ò
SC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\DomainServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
DomainServices 
:  !
IDomainServices" 1
{ 
private 
readonly "
IDomainDataAccessLayer /"
_domainDataAccessLayer0 F
=G H
DomainDataFactoryI Z
.Z [*
GetDomainDataAccessLayerObject[ y
(y z
)z {
;{ |
private

 
readonly

 
ILogger

  
<

  !
DomainServices

! /
>

/ 0
_logger

0 7
=

8 9
default

: A
!

A B
;

B C
public 
IEnumerable 
< 
Domain !
>! "
ViewDomains# .
(. /
)/ 0
{ 	
try 
{ 
return 
from 
domain "
in# %"
_domainDataAccessLayer& <
.< =

GetDomains= G
(G H
)H I
whereJ O
domainP V
.V W
IsActiveW _
==` b
truec g
selecth n
domaino u
;u v
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} ´
UC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\ICollegeServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
ICollegeServices %
{ 
public 
IEnumerable 
< 
College "
>" #
ViewColleges$ 0
(0 1
)1 2
;2 3
} 
} ª
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\IDesignationServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface  
IDesignationServices )
{ 
public 
IEnumerable 
< 
Designation &
>& '
ViewDesignations( 8
(8 9
)9 :
;: ;
} 
} ß
TC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\IDomainServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IDomainServices $
{ 
public 
IEnumerable 
< 
Domain !
>! "
ViewDomains# .
(. /
)/ 0
;0 1
} 
} Õ
RC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\ILoginService.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
ILoginService "
{ 
public 
object 
	AuthLogin 
(  
string  &
UserName' /
,/ 0
string1 7
Password8 @
)@ A
;A B
} 
} ö
QC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\IMailService.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IMailService !
{ 
public 
Task 
SendEmailAsync "
(" #
MailRequest# .
mailRequest/ :
,: ;
bool; ?
isSingleMail@ L
)L M
;M N
public		 
MailRequest		 
RequestToUpdate		 *
(		* +
int		+ .
Userid		/ 5
)		5 6
;		6 7
public

 
Task

 
RequestToUpdateFile

 '
(

' (
int

( +
	profileId

, 5
)

5 6
;

6 7
public 
Task 
ShareProfile  
(  !
string! '

profileUrl( 2
,2 3
int3 6
	profileId7 @
,@ A
stringA G
toEmailNameH S
)S T
;T U
} 
} ø
ZC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\IOrganisationServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface !
IOrganisationServices *
{ 
public 
IEnumerable 
< 
Organisation '
>' (
ViewOrganisations) :
(: ;
); <
;< =
} 
} ∏8
TC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\IProfileService.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IProfileService $
{ 
bool 

AddProfile 
( 
Profile 
profile  '
)' (
;( )
bool 
AddPersonalDetail 
( 
PersonalDetails .
personalDetails/ >
)> ?
;? @
IEnumerable		 
<		 
PersonalDetails		 #
>		# $!
GetAllPersonalDetails		% :
(		: ;
)		; <
;		< =
object

 "
GetPersonalDetailsById

 %
(

% &
int

& )

Personalid

* 4
)

4 5
;

5 6
PersonalDetails 
GetPersonalById '
(' (
int( +

Personalid, 6
)6 7
;7 8
bool  
UpdatePersonalDetail !
(! "
PersonalDetails" 1
personalDetails2 A
)A B
;B C
bool "
DisablePersonalDetails #
(# $
int$ '
PersonalDetailsid( 9
)9 :
;: ;
bool 
AddEducation 
( 
	Education #
	education$ -
)- .
;. /
IEnumerable 
< 
	Education 
> "
GetallEducationDetails 5
(5 6
)6 7
;7 8
object #
GetEducationDetailsById &
(& '
int' *
Educationid+ 6
)6 7
;7 8
bool 
UpdateEducation 
( 
	Education &
	education' 0
)0 1
;1 2
bool %
DisableEducationalDetails &
(& '
int' *
Educationid+ 6
)6 7
;7 8
bool 
AddProjects 
( 
Projects !
project" )
)) *
;* +
IEnumerable 
< 
Projects 
>  
GetallProjectDetails 2
(2 3
)3 4
;4 5
object !
GetProjectDetailsById $
($ %
int% (
	Projectid) 2
)2 3
;3 4
bool 
UpdateProjects 
( 
Projects $
projects% -
)- .
;. /
bool !
DisableProjectDetails "
(" #
int# &
	Projectid' 0
)0 1
;1 2
bool 
	AddSkills 
( 
Skills 
skill #
)# $
;$ %
IEnumerable 
< 
Skills 
> 
GetallSkillDetails .
(. /
)/ 0
;0 1
object 
GetSkillDetailsById "
(" #
int# &
Skillid' .
). /
;/ 0
bool 
UpdateSkills 
( 
Skills  
skill! &
)& '
;' (
bool 
DisableSkillDetails  
(  !
int! $
Skillid% ,
), -
;- .
bool!! 
AddAchievements!! 
(!! 
Achievements!! )
achievements!!* 6
)!!6 7
;!!7 8
IEnumerable"" 
<"" 
Achievements""  
>""  !
GetallAchievements""" 4
(""4 5
)""5 6
;""6 7
bool$$ 
DisableAchievement$$ 
($$  
int$$  #
AchievementId$$$ 1
)$$1 2
;$$2 3
bool%% 
AddLanguage%% 
(%% 
Language%% !
language%%" *
)%%* +
;%%+ ,
bool&& 
DisableLanguage&& 
(&& 
int&&  

Languageid&&! +
)&&+ ,
;&&, -
bool(( 
AddSocialMedia(( 
((( 
SocialMedia(( '
media((( -
)((- .
;((. /
bool)) 
DisableSocialMedia)) 
())  
int))  #
SocialMediaid))$ 1
)))1 2
;))2 3
public++ 
object++ )
GetPersonalDetailsByProfileId++ 3
(++3 4
int++4 7
	Profileid++8 A
)++A B
;++B C
public,, 
IEnumerable,, 
<,, 
Object,, !
>,,! "-
!GetAllEducationDetailsByProfileId,,# D
(,,D E
int,,E H
	Profileid,,I R
),,R S
;,,S T
public-- 
IEnumerable-- 
<-- 
Object-- !
>--! "+
GetAllProjectDetailsByProfileId--# B
(--B C
int--C F
	Profileid--G P
)--P Q
;--Q R
public.. 
IEnumerable.. 
<.. 
Object.. !
>..! ")
GetAllSkillDetailsByProfileId..# @
(..@ A
int..A D
	Profileid..E N
)..N O
;..O P
public// 
IEnumerable// 
<// 
Object// !
>//! "/
#GetAllAchievementDetailsByProfileId//# F
(//F G
int//G J
	Profileid//K T
)//T U
;//U V
object00 
GetTechnologyById00  
(00  !
int00! $
Technologyid00% 1
)001 2
;002 3
IEnumerable11 
<11 

Technology11 
>11 
GetallTechnologies11  2
(112 3
)113 4
;114 5
object33 
GetProfileById33 
(33 
int33 !
	Profileid33" +
)33+ ,
;33, -
object44  
GetProfileIdByUserId44 #
(44# $
int44$ '
Userid44( .
)44. /
;44/ 0
public55 
IEnumerable55 
<55 
Profile55 "
>55" #
GetallProfiles55$ 2
(552 3
)553 4
;554 5
public66 
object66 
GetProfileCount66 %
(66% &
int66& )
currentdesignation66* <
)66< =
;66= >
public77 
object77 
GetFilteredProfile77 (
(77( )
string77) /
userName770 8
,778 9
int77: =
designationId77> K
,77K L
int77M P
domainID77Q Y
,77Y Z
int77[ ^
technologyId77_ k
,77k l
int77m p
	collegeId77q z
,77z {
int77| 
profileStatusId
77Ä è
,
77è ê
int
77ë î 
currentdesignation
77ï ß
)
77ß ®
;
77® ©
public88 
bool88 !
AcceptOrRejectProfile88 )
(88) *
int88* -
	profileId88. 7
,887 8
int889 <
response88= E
)88E F
;88F G
public:: 
bool:: 
updateProfileStatus:: '
(::' (
Profile::( /
profile::0 7
)::7 8
;::8 9
};; 
}<< ¬
ZC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\IProfileStatusService.cs
	namespace 	
PMS_API
 
{ 
public 

	interface "
IProfileStatusServices +
{ 
public 
IEnumerable 
< 
ProfileStatus (
>( )
ViewProfileStatuss* <
(< =
)= >
;> ?
} 
} ∏
XC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\ITechnologyServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
ITechnologyServices (
{ 
public 
IEnumerable 
< 

Technology %
>% &
ViewTechnologies' 7
(7 8
)8 9
;9 :
} 
} ÿ
RC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\IUserServices.cs
	namespace 	
PMS_API
 
{ 
public 

	interface 
IUserServices "
{ 
bool 
AddUser 
( 
User 
item 
, 
int "
userId# )
)) *
;* +
bool 
Disable 
( 
int 
id 
) 
; 
object		 
GetallUsers		 
(		 
int		 
profilestatusId		 .
,		. /
int		/ 2
designationId		3 @
)		@ A
;		A B
object

 
GetUser

 
(

 
int

 
id

 
)

 
;

 
bool 
Save 
( 
) 
; 
bool 

UpdateUser 
( 
User 
item !
)! "
;" #
object "
GetSpecificUserDetails %
(% &
)& '
;' (
bool 
ChangePassword 
( 
string "
OldPassword# .
,. /
string/ 5
NewPassword6 A
,A B
stringB H
ConfirmPasswordI X
,X Y
intY \
currentUser] h
)h i
;i j
object $
GetAllUsersByDesignation '
(' (
int( +
designationId, 9
)9 :
;: ;
} 
} £1
QC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\LoginService.cs
	namespace		 	
PMS_API		
 
{

 
public 

class 
LoginService 
: 
ILoginService +
{ 
private 
readonly 
	IUserData "
	_userData# ,
;, -
private 
readonly 
ILogger  
<  !
LoginService! -
>- .
_logger/ 6
;6 7
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
public 
LoginService 
( 
ILogger #
<# $
LoginService$ 0
>0 1
logger2 8
,8 9
IConfiguration: H
configurationI V
,V W
	IUserDataX a
userDatab j
)j k
{ 	
_logger 
= 
logger 
; 
_configuration 
= 
configuration *
;* +
	_userData 
= 
userData  
;  !
} 	
public 
object 
	AuthLogin 
(  
string  &
UserName' /
,/ 0
string1 7
Password8 @
)@ A
{ 	
try 
{ 
var 
user 
= 
	_userData #
.# $
LoginCrendentials$ 5
(5 6
UserName6 >
,> ?
Password? G
)G H
;H I
var 
claims 
= 
new  
[  !
]! "
{# $
new 
Claim !
(! "#
JwtRegisteredClaimNames" 9
.9 :
Sub: =
,= >
_configuration? M
[M N
$strN [
][ \
)\ ]
,] ^
new   
Claim   !
(  ! "#
JwtRegisteredClaimNames  " 9
.  9 :
Jti  : =
,  = >
Guid  ? C
.  C D
NewGuid  D K
(  K L
)  L M
.  M N
ToString  N V
(  V W
)  W X
)  X Y
,  Y Z
new!! 
Claim!! !
(!!! "#
JwtRegisteredClaimNames!!" 9
.!!9 :
Iat!!: =
,!!= >
DateTime!!? G
.!!G H
UtcNow!!H N
.!!N O
ToString!!O W
(!!W X
)!!X Y
)!!Y Z
,!!Z [
new"" 
Claim"" !
(""! "
$str""" ,
,"", -
user""- 1
.""1 2
UserName""2 :
!"": ;
)""; <
,""< =
new## 
Claim## !
(##! "
$str##" *
,##* +
user##+ /
.##/ 0
UserId##0 6
.##6 7
ToString##7 ?
(##? @
)##@ A
)##A B
,##B C
new$$ 
Claim$$ !
($$! "
$str$$" 1
,$$1 2
user$$2 6
.$$6 7
DesignationId$$7 D
.$$D E
ToString$$E M
($$M N
)$$N O
)$$O P
,$$P Q
}%% 
;%% 
var'' 
key'' 
='' 
new''  
SymmetricSecurityKey'' 2
(''2 3
Encoding''3 ;
.''; <
UTF8''< @
.''@ A
GetBytes''A I
(''I J
_configuration''J X
[''X Y
$str''Y b
]''b c
)''c d
)''d e
;''e f
var(( 
signIn(( 
=(( 
new((  
SigningCredentials((! 3
(((3 4
key((4 7
,((7 8
SecurityAlgorithms((9 K
.((K L

HmacSha256((L V
)((V W
;((W X
var)) 
token)) 
=)) 
new)) 
JwtSecurityToken))  0
())0 1
_configuration** "
[**" #
$str**# /
]**/ 0
,**0 1
_configuration++ "
[++" #
$str++# 1
]++1 2
,++2 3
claims,, 
,,, 
expires-- 
:-- 
DateTime-- %
.--% &
UtcNow--& ,
.--, -
AddHours--- 5
(--5 6
$num--6 7
)--7 8
,--8 9
signingCredentials.. &
:..& '
signIn..( .
)... /
;../ 0
var00 
Result00 
=00 
new00  
{11 
token22 
=22 
new22 #
JwtSecurityTokenHandler22  7
(227 8
)228 9
.229 :

WriteToken22: D
(22D E
token22E J
)22J K
,22K L
ExpiryInMinutes33 #
=33$ %
$num33& )
,33) *
IsHR44 
=44 
user44 
.44  
DesignationId44  -
==44. 0
$num441 2
?443 4
true445 9
:44: ;
false44< A
,44A B
IsAdmin55 
=55 
user55 "
.55" #
DesignationId55# 0
==551 3
$num554 5
?556 7
true558 <
:55= >
false55? D
}66 
;66 
return88 
Result88 
;88 
}:: 
catch;; 
(;; 
ValidationException;; &$
loginCredentialsNotValid;;' ?
);;? @
{<< 
_logger== 
.== 
LogInformation== &
(==& '
$"==' )
$str==) \
{==\ ]$
loginCredentialsNotValid==] u
.==u v
Message==v }
}==} ~
"==~ 
)	== Ä
;
==Ä Å
throw>> 
;>> 
}?? 
catch@@ 
(@@ 
	Exception@@ 
	exception@@ &
)@@& '
{AA 
_loggerBB 
.BB 
LogInformationBB &
(BB& '
$"BB' )
$strBB) \
{BB\ ]
	exceptionBB] f
.BBf g
MessageBBg n
}BBn o
"BBo p
)BBp q
;BBq r
throwCC 
;CC 
}DD 
}EE 	
}GG 
}HH îT
PC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\MailService.cs
	namespace

 	
PMS_API


 
{ 
public 

class 
MailService 
: 
IMailService +
{ 
private 
readonly 
MailSettings %
_mailSettings& 3
;3 4
private 
readonly 
ILogger  
<  !
MailService! ,
>, -
_logger. 5
;5 6
private 
readonly  
IMailDataAccessLayer - 
_mailDataAccessLayer. B
;B C
public 
MailService 
( 
ILogger "
<" #
MailService# .
>. /
logger0 6
,6 7
IOptions8 @
<@ A
MailSettingsA M
>M N
mailSettingsO [
,[ \ 
IMailDataAccessLayer] q 
mailDataAccessLayer	r Ö
)
Ö Ü
{ 	
_logger 
= 
logger 
; 
_mailSettings 
= 
mailSettings (
.( )
Value) .
;. / 
_mailDataAccessLayer  
=! "
mailDataAccessLayer# 6
;6 7
} 	
public 
async 
Task 
SendEmailAsync (
(( )
MailRequest) 4
mailRequest5 @
,@ A
boolB F
isSingleMailG S
)S T
{ 	
try 
{ 
var 
email 
= 
new 
MimeMessage  +
(+ ,
), -
;- .
email 
. 
Sender 
= 
MailboxAddress -
.- .
Parse. 3
(3 4
_mailSettings4 A
.A B
MailB F
)F G
;G H
if 
( 
isSingleMail  
==! #
true$ (
)( )
email   
.   
To   
.   
Add    
(    !
MailboxAddress  ! /
.  / 0
Parse  0 5
(  5 6
mailRequest  6 A
.  A B
ToEmail  B I
)  I J
)  J K
;  K L
else!! 
{"" 
foreach## 
(## 
var##  
mailid##! '
in##( *
mailRequest##+ 6
.##6 7
ToEmailList##7 B
!##B C
)##C D
email$$ 
.$$ 
To$$  
.$$  !
Add$$! $
($$$ %
MailboxAddress$$% 3
.$$3 4
Parse$$4 9
($$9 :
mailid$$: @
)$$@ A
)$$A B
;$$B C
}%% 
email&& 
.&& 
Subject&& 
=&& 
mailRequest&&  +
.&&+ ,
Subject&&, 3
;&&3 4
var'' 
builder'' 
='' 
new'' !
BodyBuilder''" -
(''- .
)''. /
;''/ 0
builder)) 
.)) 
TextBody))  
=))! "
mailRequest))# .
.)). /
Body))/ 3
;))3 4
email** 
.** 
Body** 
=** 
builder** $
.**$ %
ToMessageBody**% 2
(**2 3
)**3 4
;**4 5
using++ 
var++ 
smtp++ 
=++  
new++! $
MailKit++% ,
.++, -
Net++- 0
.++0 1
Smtp++1 5
.++5 6

SmtpClient++6 @
(++@ A
)++A B
;++B C
smtp,, 
.,, 
Connect,, 
(,, 
_mailSettings,, *
.,,* +
Host,,+ /
,,,/ 0
_mailSettings,,1 >
.,,> ?
Port,,? C
,,,C D
SecureSocketOptions,,E X
.,,X Y
StartTls,,Y a
),,a b
;,,b c
smtp-- 
.-- 
Authenticate-- !
(--! "
_mailSettings--" /
.--/ 0
Mail--0 4
,--4 5
_mailSettings--6 C
.--C D
Password--D L
)--L M
;--M N
await.. 
smtp.. 
... 
	SendAsync.. $
(..$ %
email..% *
)..* +
;..+ ,
smtp// 
.// 

Disconnect// 
(//  
true//  $
)//$ %
;//% &
}00 
catch11 
(11 
SmtpException11  '
sendEmailAsyncSmptException11! <
)11< =
{22 
_logger33 
.33 
LogInformation33 &
(33& '
$"33' )
$str	33) Ü
{
33Ü á)
sendEmailAsyncSmptException
33á ¢
.
33¢ £
Message
33£ ™
}
33™ ´
$str
33´ Æ
{
33Æ Ø)
sendEmailAsyncSmptException
33Ø  
.
33  À

StackTrace
33À ’
}
33’ ÷
"
33÷ ◊
)
33◊ ÿ
;
33ÿ Ÿ
throw44 
new44 
MailException44 '
(44' (
$str44( J
)44J K
;44K L
}55 
catch66 
(66 
	Exception66 #
sendEmailAsyncException66 4
)664 5
{77 
_logger88 
.88 
LogInformation88 &
(88& '
$"88' )
$str	88) Ç
{
88Ç É%
sendEmailAsyncException
88É ö
.
88ö õ
Message
88õ ¢
}
88¢ £
$str
88£ ¶
{
88¶ ß%
sendEmailAsyncException
88ß æ
.
88æ ø

StackTrace
88ø …
}
88…  
"
88  À
)
88À Ã
;
88Ã Õ
throw99 
new99 
MailException99 '
(99' (
$str99( J
)99J K
;99K L
}:: 
};; 	
public<< 
MailRequest<< 
RequestToUpdate<< *
(<<* +
int<<+ .
Userid<</ 5
)<<5 6
{== 	
try>> 
{?? 
MailRequest@@ 
mailRequest@@ '
=@@( )
MailDataFactory@@* 9
.@@9 : 
GetMailRequestObject@@: N
(@@N O
)@@O P
;@@P Q
mailRequestAA 
.AA 
ToEmailAA #
=AA$ % 
_mailDataAccessLayerAA& :
.AA: ;
GetUserEmailAA; G
(AAG H
UseridAAH N
)AAN O
;AAO P
mailRequestBB 
.BB 
SubjectBB #
=BB$ %
$strBB& 9
;BB9 :
mailRequestCC 
.CC 
BodyCC  
=CC! "
$"CC# %
$strCC% )
{CC) * 
_mailDataAccessLayerCC* >
.CC> ?
GetUserNameCC? J
(CCJ K
UseridCCK Q
)CCQ R
}CCR S
$str	CCS Ü
"
CCÜ á
;
CCá à
returnDD 
mailRequestDD "
;DD" #
}EE 
catchFF 
(FF 
	ExceptionFF $
RequestToUpdateExceptionFF 5
)FF5 6
{GG 
_loggerHH 
.HH 
LogInformationHH &
(HH& '
$"HH' )
$strHH) c
{HHc d$
RequestToUpdateExceptionHHd |
.HH| }
Message	HH} Ñ
}
HHÑ Ö
"
HHÖ Ü
)
HHÜ á
;
HHá à
throwII 
newII 
MailExceptionII '
(II' (
$strII( J
)IIJ K
;IIK L
}JJ 
}KK 	
publicLL 
asyncLL 
TaskLL 
RequestToUpdateFileLL -
(LL- .
intLL. 1
	profileIdLL2 ;
)LL; <
{MM 	
stringNN 
userNameNN 
=NN  
_mailDataAccessLayerNN 2
.NN2 3$
GetUserNameWithProfileIdNN3 K
(NNK L
	profileIdNNL U
)NNU V
;NNV W
stringOO 
pathOO 
=OO 
$strOO Z
;OOZ [
stringPP 
fileNamePP 
=PP 
$strPP $
+PP$ %
userNamePP% -
+PP- .
SystemPP. 4
.PP4 5
DateTimePP5 =
.PP= >
NowPP> A
.PPA B
TicksPPB G
+PPG H
$strPPH N
;PPN O
stringQQ 
emailContentQQ 
=QQ  !
$"QQ" $
$strQQ$ (
{QQ( )
userNameQQ) 1
}QQ1 2
$str	QQ2 ‹
"
QQ‹ ›
;
QQ› ﬁ
usingRR 
StreamWriterRR 
fileRR #
=RR$ %
FileRR& *
.RR* +

CreateTextRR+ 5
(RR5 6
PathRR6 :
.RR: ;
CombineRR; B
(RRB C
pathRRC G
,RRG H
fileNameRRI Q
)RRQ R
)RRR S
;RRS T
awaitSS 
fileSS 
.SS 
WriteLineAsyncSS %
(SS% &
emailContentSS& 2
)SS2 3
;SS3 4
}TT 	
publicUU 
asyncUU 
TaskUU 
ShareProfileUU &
(UU& '
stringUU' -

profileUrlUU. 8
,UU8 9
intUU9 <
	profileIdUU= F
,UUF G
stringUUG M
toEmailNameUUN Y
)UUY Z
{VV 	
stringWW 
userNameWW 
=WW  
_mailDataAccessLayerWW 2
.WW2 3$
GetUserNameWithProfileIdWW3 K
(WWK L
	profileIdWWL U
)WWU V
;WWV W
stringXX 
pathXX 
=XX 
$strXX Z
;XXZ [
stringYY 
fileNameYY 
=YY 
$strYY '
+YY' (
userNameYY( 0
+YY0 1
SystemYY1 7
.YY7 8
DateTimeYY8 @
.YY@ A
NowYYA D
.YYD E
TicksYYE J
+YYJ K
$strYYK Q
;YYQ R
stringZZ 
emailContentZZ 
=ZZ  !
$"ZZ" $
$strZZ$ (
{ZZ( )
toEmailNameZZ) 4
}ZZ4 5
$strZZ5 K
{ZZK L
userNameZZL T
}ZZT U
$strZZU }
{ZZ} ~

profileUrl	ZZ~ à
}
ZZà â
$str
ZZâ Ÿ
"
ZZŸ ⁄
;
ZZ⁄ €
using[[ 
StreamWriter[[ 
file[[ #
=[[$ %
File[[& *
.[[* +

CreateText[[+ 5
([[5 6
Path[[6 :
.[[: ;
Combine[[; B
([[B C
path[[C G
,[[G H
fileName[[I Q
)[[Q R
)[[R S
;[[S T
await\\ 
file\\ 
.\\ 
WriteLineAsync\\ %
(\\% &
emailContent\\& 2
)\\2 3
;\\3 4
}]] 	
}^^ 
}__ ˇ
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\OrganisationServices.cs
	namespace 	
PMS_API
 
{ 
public 

class  
OrganisationServices %
:& '!
IOrganisationServices( =
{ 
private 
readonly (
IOrganisationDataAccessLayer 5(
_OrganisationDataAccessLayer6 R
=S T#
OrganisationDataFactoryU l
.l m1
$GetOrganisationDataAccessLayerObject	m ë
(
ë í
)
í ì
;
ì î
private 
readonly 
ILogger  
<  ! 
OrganisationServices! 5
>5 6
_logger6 =
=> ?
default@ G
!G H
;H I
public		 
IEnumerable		 
<		 
Organisation		 '
>		' (
ViewOrganisations		) :
(		: ;
)		; <
{

 	
try 
{ 
return 
from 
organisation (
in) +(
_OrganisationDataAccessLayer, H
.H I
GetOrganisationsI Y
(Y Z
)Z [
where\ a
organisationb n
.n o
IsActiveo w
==x z
true{ 
select
Ä Ü
organisation
á ì
;
ì î
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} ›Ø
SC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\ProfileService.cs
	namespace 	
PMS_API
 
{ 
public 

class 
ProfileService 
:  !
IProfileService" 1
{ 
ProfileData		 
profileData		 
;		  
private

 
readonly

 
ILogger

  
<

  !
ProfileService

! /
>

/ 0
_logger

1 8
;

8 9
private 
static 
ProfileValidation (
_profileValidate) 9
=: ;
ProfileDataFactory< N
.N O%
GetProfileVaidationObjectO h
(h i
)i j
;j k
public 
ProfileService 
( 
ILogger %
<% &
ProfileService& 4
>4 5
logger6 <
)< =
{ 	
_logger 
= 
logger 
; 
profileData 
= 
ProfileDataFactory ,
., -
GetProfileData- ;
(; <
logger< B
)B C
;C D
} 	
public 
bool 

AddProfile 
( 
Profile &
profile' .
). /
{ 	
if 
( 
profile 
== 
null 
)  
throw! &
new' *!
ArgumentNullException+ @
(@ A
$"A C
$strC d
{d e
profilee l
}l m
"m n
)n o
;o p
try 
{ 
profile 
. 
	CreatedBy !
=" #
profile$ +
.+ ,
UserId, 2
;2 3
profile 
. 
	CreatedOn !
=" #
DateTime$ ,
., -
Now- 0
;0 1
profile 
. 
IsActive  
=! "
true# '
;' (
return 
profileData "
." #

AddProfile# -
(- .
profile. 5
)5 6
?7 8
true9 =
:> ?
false@ E
;E F
} 
catch 
( 
	Exception 
	exception &
)& '
{ 
_logger 
. 
LogInformation &
(& '
$"' )
$str) E
{E F
	exceptionF O
.O P
MessageP W
}W X
$strX Z
{Z [
	exception[ d
.d e

StackTracee o
}o p
"p q
)q r
;r s
return   
false   
;   
}!! 
}## 	
public%% 
bool%% 
AddPersonalDetail%% %
(%%% &
PersonalDetails%%& 5
personalDetails%%6 E
)%%E F
{&& 	
if'' 
('' 
personalDetails'' 
==''  "
null''# '
)''' (
throw'') .
new''/ 2!
ArgumentNullException''3 H
(''H I
$"''I K
$str''K l
{''l m
personalDetails''m |
}''| }
"''} ~
)''~ 
;	'' Ä
_profileValidate(( 
.(( #
PersonalDetailsvalidate(( 4
(((4 5
personalDetails((5 D
)((D E
;((E F
try)) 
{** 
personalDetails,, 
.,,  
	CreatedBy,,  )
=,,* +
personalDetails,,, ;
.,,; <
	ProfileId,,< E
;,,E F
personalDetails-- 
.--  
	CreatedOn--  )
=--* +
DateTime--, 4
.--4 5
Now--5 8
;--8 9
string.. 
	Imagedate..  
=..! "
$str..# %
;..% &
	Imagedate// 
=// 
ImageService// (
.//( )
Getbase64String//) 8
(//8 9
personalDetails//9 H
.//H I
base64header//I U
!//U V
)//V W
;//W X
personalDetails11 
.11  
base64header11  ,
=11- .
ImageService11/ ;
.11; <
Getbase64Header11< K
(11K L
personalDetails11L [
.11[ \
base64header11\ h
!11h i
)11i j
;11j k
personalDetails33 
.33  
Image33  %
=33& '
System33( .
.33. /
Convert33/ 6
.336 7
FromBase64String337 G
(33G H
	Imagedate33H Q
)33Q R
;33R S
return44 
profileData44 "
.44" #
AddPersonalDetail44# 4
(444 5
personalDetails445 D
)44D E
?44F G
true44H L
:44M N
false44O T
;44T U
}55 
catch66 
(66 
	Exception66 
	exception66 &
)66& '
{77 
_logger88 
.88 
LogInformation88 &
(88& '
$"88' )
$str88) L
{88L M
	exception88M V
.88V W
Message88W ^
}88^ _
$str88_ a
{88a b
	exception88b k
.88k l

StackTrace88l v
}88v w
"88w x
)88x y
;88y z
return99 
false99 
;99 
}:: 
}<< 	
public== 
IEnumerable== 
<== 
PersonalDetails== *
>==* +!
GetAllPersonalDetails==, A
(==A B
)==B C
{>> 	
try?? 
{@@ 
returnAA 
fromAA 
personalDetailsAA +
inAA, .
profileDataAA/ :
.AA: ;!
GetAllPersonalDetailsAA; P
(AAP Q
)AAQ R
whereAAS X
personalDetailsAAY h
.AAh i
IsActiveAAi q
==AAr t
trueAAu y
select	AAz Ä
personalDetails
AAÅ ê
;
AAê ë
}BB 
catchCC 
(CC 
	ExceptionCC 
	exceptionCC &
)CC& '
{DD 
_loggerEE 
.EE 
LogErrorEE  
(EE  !
$"EE! #
$strEE# J
{EEJ K
	exceptionEEK T
.EET U
MessageEEU \
}EE\ ]
$strEE] _
{EE_ `
	exceptionEE` i
.EEi j

StackTraceEEj t
}EEt u
"EEu v
)EEv w
;EEw x
throwFF 
	exceptionFF 
;FF  
}GG 
}HH 	
publicII 
objectII "
GetPersonalDetailsByIdII ,
(II, -
intII- 0

PersonalidII1 ;
)II; <
{JJ 	
ifKK 
(KK 

PersonalidKK 
<=KK 
$numKK 
)KK  
throwLL 
newLL !
ArgumentNullExceptionLL /
(LL/ 0
$"LL0 2
$strLL2 D
{LLD E

PersonalidLLE O
}LLO P
"LLP Q
)LLQ R
;LLR S
tryMM 
{NN 
varOO 
getpersonaldetailsOO &
=OO' (
profileDataOO) 4
.OO4 5"
GetPersonalDetailsByIdOO5 K
(OOK L

PersonalidOOL V
)OOV W
;OOW X
returnPP 
newPP 
{QQ 
personaldetailsidRR %
=RR& '
getpersonaldetailsRR( :
.RR: ;
PersonalDetailsIdRR; L
,RRL M
ImageSS 
=SS 
getpersonaldetailsSS .
.SS. /
ImageSS/ 4
,SS4 5
	objectiveTT 
=TT 
getpersonaldetailsTT  2
.TT2 3
	ObjectiveTT3 <
,TT< =
dateofbirthUU 
=UU  !
getpersonaldetailsUU" 4
.UU4 5
DateOfBirthUU5 @
,UU@ A
nationalityVV 
=VV  !
getpersonaldetailsVV" 4
.VV4 5
NationalityVV5 @
,VV@ A
dateofjoiningWW !
=WW" #
getpersonaldetailsWW$ 6
.WW6 7
DateOfJoiningWW7 D
,WWD E
languageXX 
=XX 
getpersonaldetailsXX 1
.XX1 2
languageXX2 :
,XX: ;
socialmediaYY 
=YY  !
getpersonaldetailsYY" 4
.YY4 5
socialmediaYY5 @
,YY@ A
breakdurationZZ !
=ZZ" #
getpersonaldetailsZZ$ 6
.ZZ6 7
breakDurationZZ7 D
,ZZD E
}\\ 
;\\ 
}]] 
catch^^ 
(^^ 
	Exception^^ 
	exception^^ &
)^^& '
{__ 
_logger`` 
.`` 
LogError``  
(``  !
$"``! #
$str``# K
{``K L
	exception``L U
.``U V
Message``V ]
}``] ^
$str``^ `
{``` a
	exception``a j
.``j k

StackTrace``k u
}``u v
"``v w
)``w x
;``x y
throwaa 
	exceptionaa 
;aa  
}bb 
}cc 	
publicdd 
objectdd )
GetPersonalDetailsByProfileIddd 3
(dd3 4
intdd4 7
	Profileiddd8 A
)ddA B
{ee 	
ifff 
(ff 
	Profileidff 
<=ff 
$numff 
)ff 
throwgg 
newgg !
ArgumentNullExceptiongg /
(gg/ 0
$"gg0 2
$strgg2 D
{ggD E
	ProfileidggE N
}ggN O
"ggO P
)ggP Q
;ggQ R
tryhh 
{ii 
varjj )
getpersonaldetailsbyprofileidjj 1
=jj2 3
profileDatajj4 ?
.jj? @!
GetAllPersonalDetailsjj@ U
(jjU V
)jjV W
.jjW X
WherejjX ]
(jj] ^
itemjj^ b
=>jjc e
itemjjf j
.jjj k
	ProfileIdjjk t
==jju w
	Profileid	jjx Å
)
jjÅ Ç
.
jjÇ É
Select
jjÉ â
(
jjâ ä
item
jjä é
=>
jjè ë
newkk 
{ll 
personaldetailsidmm &
=mm' (
itemmm) -
.mm- .
PersonalDetailsIdmm. ?
,mm? @
Imagenn 
=nn 
itemnn !
.nn! "
Imagenn" '
,nn' (
	objectiveoo 
=oo  
itemoo! %
.oo% &
	Objectiveoo& /
,oo/ 0
dateofbirthpp  
=pp! "
itempp# '
.pp' (
DateOfBirthpp( 3
,pp3 4
nationalityqq  
=qq! "
itemqq# '
.qq' (
Nationalityqq( 3
,qq3 4
dateofjoiningrr "
=rr# $
itemrr% )
.rr) *
DateOfJoiningrr* 7
,rr7 8
languagess 
=ss 1
%removeAdditionalDetailsExceptLanguagess  E
(ssE F
itemssF J
.ssJ K
languagessK S
!ssS T
)ssT U
,ssU V
socialmediatt  
=tt! "4
(removeAdditionalDetailsExceptSocialMediatt# K
(ttK L
itemttL P
.ttP Q
socialmediattQ \
!tt\ ]
)tt] ^
,tt^ _
}vv 
)vv 
.vv 
FirstOrDefaultvv "
(vv" #
)vv# $
;vv$ %
returnxx )
getpersonaldetailsbyprofileidxx 5
;xx5 6
}zz 
catch{{ 
({{ 
	Exception{{ 
	exception{{ &
){{& '
{|| 
_logger}} 
.}} 
LogError}}  
(}}  !
$"}}! #
$str}}# R
{}}R S
	exception}}S \
.}}\ ]
Message}}] d
}}}d e
$str}}e g
{}}g h
	exception}}h q
.}}q r

StackTrace}}r |
}}}| }
"}}} ~
)}}~ 
;	}} Ä
throw~~ 
	exception~~ 
;~~  
} 
}
ÄÄ 	
private
ÅÅ 
ICollection
ÅÅ 
<
ÅÅ 
Language
ÅÅ $
>
ÅÅ$ %3
%removeAdditionalDetailsExceptLanguage
ÅÅ& K
(
ÅÅK L
ICollection
ÅÅL W
<
ÅÅW X
Language
ÅÅX `
>
ÅÅ` a
	languages
ÅÅb k
)
ÅÅk l
{
ÇÇ 	
foreach
ÉÉ 
(
ÉÉ 
var
ÉÉ 
item
ÉÉ 
in
ÉÉ  
	languages
ÉÉ! *
)
ÉÉ* +
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
item
ÖÖ 
.
ÖÖ 
IsActive
ÖÖ  
==
ÖÖ  "
true
ÖÖ" &
)
ÖÖ& '
{
ÖÖ' (
item
ÜÜ 
.
ÜÜ 
personalDetails
ÜÜ (
=
ÜÜ) *
null
ÜÜ+ /
;
ÜÜ/ 0
}
áá 
else
àà 
{
àà 
	languages
ââ 
.
ââ 
Remove
ââ $
(
ââ$ %
item
ââ% )
)
ââ) *
;
ââ* +
}
ää 
}
åå 
return
çç 
	languages
çç 
;
çç 
}
éé 	
private
êê 
ICollection
êê 
<
êê 
SocialMedia
êê '
>
êê' (6
(removeAdditionalDetailsExceptSocialMedia
êê) Q
(
êêQ R
ICollection
êêR ]
<
êê] ^
SocialMedia
êê^ i
>
êêi j
socialMedias
êêk w
)
êêw x
{
ëë 	
foreach
íí 
(
íí 
var
íí 
item
íí 
in
íí  
socialMedias
íí! -
)
íí- .
{
ìì 
if
îî 
(
îî 
item
îî 
.
îî 
IsActive
îî  
==
îî  "
true
îî" &
)
îî& '
{
îî' (
item
ïï 
.
ïï 
personalDetails
ïï $
=
ïï% &
null
ïï' +
;
ïï+ ,
}
ññ 
else
óó 
{
óó 
socialMedias
òò  
.
òò  !
Remove
òò! '
(
òò' (
item
òò( ,
)
òò, -
;
òò- .
}
ôô 
}
öö 
return
õõ 
socialMedias
õõ 
;
õõ  
}
úú 	
public
ùù 
PersonalDetails
ùù 
GetPersonalById
ùù .
(
ùù. /
int
ùù/ 2
PersonalDetailsId
ùù3 D
)
ùùD E
{
ûû 	
try
üü 
{
†† 
if
°° 
(
°° 
PersonalDetailsId
°° %
<=
°°& (
$num
°°) *
)
°°* +
throw
¢¢ 
new
¢¢ #
ArgumentNullException
¢¢ 3
(
¢¢3 4
$"
¢¢4 6
$str
¢¢6 H
{
¢¢H I
PersonalDetailsId
¢¢I Z
}
¢¢Z [
"
¢¢[ \
)
¢¢\ ]
;
¢¢] ^
PersonalDetails
££ 
personalDetails
££  /
=
££0 1
profileData
££2 =
.
££= >$
GetPersonalDetailsById
££> T
(
££T U
PersonalDetailsId
££U f
)
££f g
;
££g h
return
§§ 
personalDetails
§§ &
;
§§& '
}
•• 
catch
¶¶ 
(
¶¶ 
	Exception
¶¶ 
	exception
¶¶ &
)
¶¶& '
{
ßß 
_logger
®® 
.
®® 
LogError
®®  
(
®®  !
$"
®®! #
$str
®®# D
{
®®D E
	exception
®®E N
.
®®N O
Message
®®O V
}
®®V W
$str
®®W Y
{
®®Y Z
	exception
®®Z c
.
®®c d

StackTrace
®®d n
}
®®n o
"
®®o p
)
®®p q
;
®®q r
throw
©© 
	exception
©© 
;
©©  
}
™™ 
}
´´ 	
public
¨¨ 
bool
¨¨ "
UpdatePersonalDetail
¨¨ (
(
¨¨( )
PersonalDetails
¨¨) 8
personalDetails
¨¨9 H
)
¨¨H I
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
personalDetails
ÆÆ 
==
ÆÆ  "
null
ÆÆ# '
)
ÆÆ' (
throw
ÆÆ) .
new
ÆÆ/ 2#
ArgumentNullException
ÆÆ3 H
(
ÆÆH I
$"
ÆÆI K
$strÆÆK ç
{ÆÆç é
personalDetailsÆÆé ù
}ÆÆù û
"ÆÆû ü
)ÆÆü †
;ÆÆ† °
try
∞∞ 
{
±± 
var
≤≤ 
Profile
≤≤ 
=
≤≤ 
GetPersonalById
≤≤ -
(
≤≤- .
personalDetails
≤≤. =
.
≤≤= >
PersonalDetailsId
≤≤> O
)
≤≤O P
;
≤≤P Q
if
≥≥ 
(
≥≥ 
Profile
≥≥ 
.
≥≥ 
	Objective
≥≥ %
!=
≥≥& (
personalDetails
≥≥) 8
.
≥≥8 9
	Objective
≥≥9 B
)
≥≥B C
Profile
¥¥ 
.
¥¥ 
	Objective
¥¥ %
=
¥¥& '
personalDetails
¥¥( 7
.
¥¥7 8
	Objective
¥¥8 A
;
¥¥A B
if
µµ 
(
µµ 
Profile
µµ 
.
µµ 
DateOfBirth
µµ '
!=
µµ( *
personalDetails
µµ+ :
.
µµ: ;
DateOfBirth
µµ; F
)
µµF G
Profile
∂∂ 
.
∂∂ 
DateOfBirth
∂∂ '
=
∂∂( )
personalDetails
∂∂* 9
.
∂∂9 :
DateOfBirth
∂∂: E
;
∂∂E F
if
∑∑ 
(
∑∑ 
Profile
∑∑ 
.
∑∑ 
DateOfJoining
∑∑ )
!=
∑∑* ,
personalDetails
∑∑- <
.
∑∑< =
DateOfJoining
∑∑= J
)
∑∑J K
Profile
∏∏ 
.
∏∏ 
DateOfJoining
∏∏ )
=
∏∏* +
personalDetails
∏∏, ;
.
∏∏; <
DateOfJoining
∏∏< I
;
∏∏I J
if
ππ 
(
ππ 
Profile
ππ 
.
ππ 
Nationality
ππ '
!=
ππ( *
personalDetails
ππ+ :
.
ππ: ;
Nationality
ππ; F
)
ππF G
Profile
∫∫ 
.
∫∫ 
Nationality
∫∫ '
=
∫∫( )
personalDetails
∫∫* 9
.
∫∫9 :
Nationality
∫∫: E
;
∫∫E F
string
ºº 
	Imagedate
ºº  
=
ºº! "
$str
ºº# %
;
ºº% &
	Imagedate
ΩΩ 
=
ΩΩ 
ImageService
ΩΩ (
.
ΩΩ( )
Getbase64String
ΩΩ) 8
(
ΩΩ8 9
personalDetails
ΩΩ9 H
.
ΩΩH I
base64header
ΩΩI U
!
ΩΩU V
)
ΩΩV W
;
ΩΩW X
Profile
øø 
.
øø 
base64header
øø $
=
øø% &
ImageService
øø' 3
.
øø3 4
Getbase64Header
øø4 C
(
øøC D
personalDetails
øøD S
.
øøS T
base64header
øøT `
!
øø` a
)
øøa b
;
øøb c
Profile
¡¡ 
.
¡¡ 
Image
¡¡ 
=
¡¡ 
System
¡¡  &
.
¡¡& '
Convert
¡¡' .
.
¡¡. /
FromBase64String
¡¡/ ?
(
¡¡? @
	Imagedate
¡¡@ I
)
¡¡I J
;
¡¡J K
Profile
¬¬ 
.
¬¬ 
	UpdatedBy
¬¬ !
=
¬¬" #
personalDetails
¬¬$ 3
.
¬¬3 4
	CreatedBy
¬¬4 =
;
¬¬= >
Profile
√√ 
.
√√ 
	UpdatedOn
√√ !
=
√√" #
DateTime
√√$ ,
.
√√, -
Now
√√- 0
;
√√0 1
return
ƒƒ 
profileData
ƒƒ "
.
ƒƒ" #"
UpdatePersonalDetail
ƒƒ# 7
(
ƒƒ7 8
Profile
ƒƒ8 ?
)
ƒƒ? @
;
ƒƒ@ A
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
	exception
∆∆ &
)
∆∆& '
{
«« 
_logger
»» 
.
»» 
LogInformation
»» &
(
»»& '
$"
»»' )
$str
»») O
{
»»O P
	exception
»»P Y
.
»»Y Z
Message
»»Z a
}
»»a b
$str
»»b d
{
»»d e
	exception
»»e n
.
»»n o

StackTrace
»»o y
}
»»y z
"
»»z {
)
»»{ |
;
»»| }
return
…… 
false
…… 
;
…… 
}
   
}
ÃÃ 	
public
œœ 
bool
œœ $
DisablePersonalDetails
œœ *
(
œœ* +
int
œœ+ .
PersonalDetailid
œœ/ ?
)
œœ? @
{
–– 	
if
—— 
(
—— 
PersonalDetailid
——  
<=
——! #
$num
——$ %
)
——% &
throw
““ 
new
““ #
ArgumentNullException
““ /
(
““/ 0
$"
““0 2
$str
““2 D
{
““D E
PersonalDetailid
““E U
}
““U V
"
““V W
)
““W X
;
““X Y
try
’’ 
{
÷÷ 
return
ÿÿ 
profileData
ÿÿ "
.
ÿÿ" #$
DisablePersonalDetails
ÿÿ# 9
(
ÿÿ9 :
PersonalDetailid
ÿÿ: J
)
ÿÿJ K
?
ÿÿL M
true
ÿÿN R
:
ÿÿS T
false
ÿÿU Z
;
ÿÿZ [
}
⁄⁄ 
catch
‹‹ 
(
‹‹ 
	Exception
‹‹ 
	exception
‹‹ &
)
‹‹& '
{
›› 
_logger
ﬁﬁ 
.
ﬁﬁ 
LogInformation
ﬁﬁ &
(
ﬁﬁ& '
$"
ﬁﬁ' )
$str
ﬁﬁ) Q
{
ﬁﬁQ R
	exception
ﬁﬁR [
.
ﬁﬁ[ \
Message
ﬁﬁ\ c
}
ﬁﬁc d
$str
ﬁﬁd f
{
ﬁﬁf g
	exception
ﬁﬁg p
.
ﬁﬁp q

StackTrace
ﬁﬁq {
}
ﬁﬁ{ |
"
ﬁﬁ| }
)
ﬁﬁ} ~
;
ﬁﬁ~ 
return
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
}
·· 	
public
„„ 
bool
„„ 
AddEducation
„„  
(
„„  !
	Education
„„! *
	education
„„+ 4
)
„„4 5
{
‰‰ 	
if
ÂÂ 
(
ÂÂ 
	education
ÂÂ 
==
ÂÂ 
null
ÂÂ !
)
ÂÂ! "
throw
ÂÂ# (
new
ÂÂ) ,#
ArgumentNullException
ÂÂ- B
(
ÂÂB C
$"
ÂÂC E
$str
ÂÂE f
{
ÂÂf g
	education
ÂÂg p
}
ÂÂp q
"
ÂÂq r
)
ÂÂr s
;
ÂÂs t
try
ÁÁ 
{
ËË 
	education
ÈÈ 
.
ÈÈ 
	CreatedBy
ÈÈ #
=
ÈÈ$ %
	education
ÈÈ& /
.
ÈÈ/ 0
	ProfileId
ÈÈ0 9
;
ÈÈ9 :
	education
ÍÍ 
.
ÍÍ 
	CreatedOn
ÍÍ #
=
ÍÍ$ %
DateTime
ÍÍ& .
.
ÍÍ. /
Now
ÍÍ/ 2
;
ÍÍ2 3
return
ÎÎ 
profileData
ÎÎ "
.
ÎÎ" #
AddEducation
ÎÎ# /
(
ÎÎ/ 0
	education
ÎÎ0 9
)
ÎÎ9 :
?
ÎÎ; <
true
ÎÎ= A
:
ÎÎB C
false
ÎÎD I
;
ÎÎI J
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ !
ValidationException
ÌÌ &
	exception
ÌÌ' 0
)
ÌÌ0 1
{
ÓÓ 
_logger
ÔÔ 
.
ÔÔ 
LogError
ÔÔ  
(
ÔÔ  !
$"
ÔÔ! #
$str
ÔÔ# A
{
ÔÔA B
	exception
ÔÔB K
.
ÔÔK L
Message
ÔÔL S
}
ÔÔS T
$str
ÔÔT V
{
ÔÔV W
	exception
ÔÔW `
.
ÔÔ` a

StackTrace
ÔÔa k
}
ÔÔk l
"
ÔÔl m
)
ÔÔm n
;
ÔÔn o
throw
 
;
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
	exception
ÚÚ &
)
ÚÚ& '
{
ÛÛ 
_logger
ÙÙ 
.
ÙÙ 
LogInformation
ÙÙ &
(
ÙÙ& '
$"
ÙÙ' )
$str
ÙÙ) G
{
ÙÙG H
	exception
ÙÙH Q
.
ÙÙQ R
Message
ÙÙR Y
}
ÙÙY Z
$str
ÙÙZ \
{
ÙÙ\ ]
	exception
ÙÙ] f
.
ÙÙf g

StackTrace
ÙÙg q
}
ÙÙq r
"
ÙÙr s
)
ÙÙs t
;
ÙÙt u
throw
ıı 
;
ıı 
}
˜˜ 
}
¯¯ 	
public
˙˙ 
Object
˙˙ %
GetEducationDetailsById
˙˙ -
(
˙˙- .
int
˙˙. 1
Educationid
˙˙2 =
)
˙˙= >
{
˚˚ 	
if
¸¸ 
(
¸¸ 
Educationid
¸¸ 
<=
¸¸ 
$num
¸¸  
)
¸¸  !
throw
˝˝ 
new
˝˝ #
ArgumentNullException
˝˝ /
(
˝˝/ 0
$"
˝˝0 2
$str
˝˝2 D
{
˝˝D E
Educationid
˝˝E P
}
˝˝P Q
"
˝˝Q R
)
˝˝R S
;
˝˝S T
try
˛˛ 
{
ˇˇ 
var
ÄÄ !
geteducationdetails
ÄÄ '
=
ÄÄ( )
profileData
ÄÄ* 5
.
ÄÄ5 6%
GetEducationDetailsById
ÄÄ6 M
(
ÄÄM N
Educationid
ÄÄN Y
)
ÄÄY Z
;
ÄÄZ [
return
ÅÅ 
new
ÅÅ 
{
ÇÇ 
educationid
ÉÉ 
=
ÉÉ  !!
geteducationdetails
ÉÉ" 5
.
ÉÉ5 6
EducationId
ÉÉ6 A
,
ÉÉA B
degree
ÑÑ 
=
ÑÑ !
geteducationdetails
ÑÑ 0
.
ÑÑ0 1
Degree
ÑÑ1 7
,
ÑÑ7 8
course
ÖÖ 
=
ÖÖ !
geteducationdetails
ÖÖ 0
.
ÖÖ0 1
Course
ÖÖ1 7
,
ÖÖ7 8
college
ÜÜ 
=
ÜÜ !
geteducationdetails
ÜÜ 1
.
ÜÜ1 2
college
ÜÜ2 9
!
ÜÜ9 :
.
ÜÜ: ;
CollegeName
ÜÜ; F
,
ÜÜF G
	collegeid
áá 
=
áá !
geteducationdetails
áá  3
.
áá3 4
	CollegeId
áá4 =
,
áá= >
starting
àà 
=
àà !
geteducationdetails
àà 2
.
àà2 3
Starting
àà3 ;
,
àà; <
ending
ââ 
=
ââ !
geteducationdetails
ââ 0
.
ââ0 1
Ending
ââ1 7
,
ââ7 8

percentage
ää 
=
ää  !
geteducationdetails
ää! 4
.
ää4 5

Percentage
ää5 ?
}
åå 
;
åå 
}
çç 
catch
éé 
(
éé 
	Exception
éé 
	exception
éé &
)
éé& '
{
èè 
_logger
êê 
.
êê 
LogError
êê  
(
êê  !
$"
êê! #
$str
êê# L
{
êêL M
	exception
êêM V
.
êêV W
Message
êêW ^
}
êê^ _
$str
êê_ a
{
êêa b
	exception
êêb k
.
êêk l

StackTrace
êêl v
}
êêv w
"
êêw x
)
êêx y
;
êêy z
throw
ëë 
	exception
ëë 
;
ëë  
}
íí 
}
ìì 	
public
îî 
IEnumerable
îî 
<
îî 
	Education
îî $
>
îî$ %$
GetallEducationDetails
îî& <
(
îî< =
)
îî= >
{
ïï 	
try
ññ 
{
óó 
return
ôô 
from
ôô 

educations
ôô &
in
ôô' )
profileData
ôô* 5
.
ôô5 6$
GetallEducationDetails
ôô6 L
(
ôôL M
)
ôôM N
where
ôôO T

educations
ôôU _
.
ôô_ `
IsActive
ôô` h
==
ôôi k
true
ôôl p
select
ôôq w

educationsôôx Ç
;ôôÇ É
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
	exception
ûû &
)
ûû& '
{
üü 
_logger
†† 
.
†† 
LogError
††  
(
††  !
$"
††! #
$str
††# K
{
††K L
	exception
††L U
.
††U V
Message
††V ]
}
††] ^
$str
††^ `
{
††` a
	exception
††a j
.
††j k

StackTrace
††k u
}
††u v
"
††v w
)
††w x
;
††x y
throw
°° 
	exception
°° 
;
°°  
}
¢¢ 
}
££ 	
public
§§ 
IEnumerable
§§ 
<
§§ 
Object
§§ !
>
§§! "/
!GetAllEducationDetailsByProfileId
§§# D
(
§§D E
int
§§E H
	Profileid
§§I R
)
§§R S
{
•• 	
if
¶¶ 
(
¶¶ 
	Profileid
¶¶ 
<=
¶¶ 
$num
¶¶ 
)
¶¶ 
throw
ßß 
new
ßß #
ArgumentNullException
ßß /
(
ßß/ 0
$"
ßß0 2
$str
ßß2 D
{
ßßD E
	Profileid
ßßE N
}
ßßN O
"
ßßO P
)
ßßP Q
;
ßßQ R
try
®® 
{
©© 
var
™™ ,
geteducationdetailsbyprofileid
™™ 2
=
™™3 4
profileData
™™5 @
.
™™@ A$
GetallEducationDetails
™™A W
(
™™W X
)
™™X Y
.
™™Y Z
Where
™™Z _
(
™™_ `
item
™™` d
=>
™™e g
item
™™h l
.
™™l m
	ProfileId
™™m v
==
™™w y
	Profileid™™z É
&&™™Ñ Ü
item™™á ã
.™™ã å
IsActive™™å î
==™™ï ó
true™™ò ú
)™™ú ù
.™™ù û
Select™™û §
(™™§ •
item™™• ©
=>™™™ ¨
new
´´ 
{
¨¨ 
educationid
≠≠  
=
≠≠! "
item
≠≠# '
.
≠≠' (
EducationId
≠≠( 3
,
≠≠3 4
degree
ÆÆ 
=
ÆÆ 
item
ÆÆ "
.
ÆÆ" #
Degree
ÆÆ# )
,
ÆÆ) *
course
ØØ 
=
ØØ 
item
ØØ "
.
ØØ" #
Course
ØØ# )
,
ØØ) *
college
∞∞ 
=
∞∞ 
item
∞∞ #
.
∞∞# $
college
∞∞$ +
?
∞∞+ ,
.
∞∞, -
CollegeName
∞∞- 8
,
∞∞8 9
startingyear
±± !
=
±±" #
item
±±$ (
.
±±( )
Starting
±±) 1
,
±±1 2

endingyear
≤≤ 
=
≤≤  !
item
≤≤" &
.
≤≤& '
Ending
≤≤' -
,
≤≤- .

percentage
≥≥ 
=
≥≥  !
item
≥≥" &
.
≥≥& '

Percentage
≥≥' 1
}
µµ 
)
µµ 
;
µµ 
return
µµ ,
geteducationdetailsbyprofileid
µµ :
;
µµ: ;
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
	exception
∑∑ &
)
∑∑& '
{
∏∏ 
_logger
ππ 
.
ππ 
LogError
ππ  
(
ππ  !
$"
ππ! #
$str
ππ# V
{
ππV W
	exception
ππW `
.
ππ` a
Message
ππa h
}
ππh i
$str
ππi k
{
ππk l
	exception
ππl u
.
ππu v

StackTraceππv Ä
}ππÄ Å
"ππÅ Ç
)ππÇ É
;ππÉ Ñ
throw
∫∫ 
	exception
∫∫ 
;
∫∫  
}
ªª 
}
ºº 	
public
ΩΩ 
	Education
ΩΩ 
GetEducationById
ΩΩ )
(
ΩΩ) *
int
ΩΩ* -
EducationId
ΩΩ. 9
)
ΩΩ9 :
{
ææ 	
try
øø 
{
¿¿ 
if
¡¡ 
(
¡¡ 
EducationId
¡¡ 
<=
¡¡  "
$num
¡¡# $
)
¡¡$ %
throw
¬¬ 
new
¬¬ #
ArgumentNullException
¬¬ 3
(
¬¬3 4
$"
¬¬4 6
$str
¬¬6 H
{
¬¬H I
EducationId
¬¬I T
}
¬¬T U
"
¬¬U V
)
¬¬V W
;
¬¬W X
	Education
√√ 
	education
√√ #
=
√√$ %
profileData
√√& 1
.
√√1 2%
GetEducationDetailsById
√√2 I
(
√√I J
EducationId
√√J U
)
√√U V
;
√√V W
return
ƒƒ 
	education
ƒƒ  
;
ƒƒ  !
}
≈≈ 
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
	exception
∆∆ &
)
∆∆& '
{
«« 
_logger
»» 
.
»» 
LogError
»»  
(
»»  !
$"
»»! #
$str
»»# L
{
»»L M
	exception
»»M V
.
»»V W
Message
»»W ^
}
»»^ _
$str
»»_ a
{
»»a b
	exception
»»b k
.
»»k l

StackTrace
»»l v
}
»»v w
"
»»w x
)
»»x y
;
»»y z
throw
…… 
	exception
…… 
;
……  
}
   
}
ÃÃ 	
public
ÕÕ 
bool
ÕÕ 
UpdateEducation
ÕÕ #
(
ÕÕ# $
	Education
ÕÕ$ -
	education
ÕÕ. 7
)
ÕÕ7 8
{
ŒŒ 	
if
œœ 
(
œœ 
	education
œœ 
==
œœ 
null
œœ !
)
œœ! "
throw
œœ# (
new
œœ) ,#
ArgumentNullException
œœ- B
(
œœB C
$"
œœC E
$strœœE É
{œœÉ Ñ
	educationœœÑ ç
}œœç é
"œœé è
)œœè ê
;œœê ë
try
—— 
{
““ 
	Education
”” 
Profile
”” !
=
””" #
GetEducationById
””$ 4
(
””4 5
	education
””5 >
.
””> ?
EducationId
””? J
)
””J K
;
””K L
if
’’ 
(
’’ 
Profile
’’ 
.
’’ 
Degree
’’ "
!=
’’# %
	education
’’& /
.
’’/ 0
Degree
’’0 6
)
’’6 7
Profile
÷÷ 
.
÷÷ 
Degree
÷÷ "
=
÷÷# $
	education
÷÷% .
.
÷÷. /
Degree
÷÷/ 5
;
÷÷5 6
if
◊◊ 
(
◊◊ 
Profile
◊◊ 
.
◊◊ 
Course
◊◊ "
!=
◊◊# %
	education
◊◊& /
.
◊◊/ 0
Course
◊◊0 6
)
◊◊6 7
Profile
ÿÿ 
.
ÿÿ 
Course
ÿÿ "
=
ÿÿ# $
	education
ÿÿ% .
.
ÿÿ. /
Course
ÿÿ/ 5
;
ÿÿ5 6
if
ŸŸ 
(
ŸŸ 
Profile
ŸŸ 
.
ŸŸ 
	CollegeId
ŸŸ %
!=
ŸŸ& (
	education
ŸŸ) 2
.
ŸŸ2 3
	CollegeId
ŸŸ3 <
)
ŸŸ< =
Profile
⁄⁄ 
.
⁄⁄ 
	CollegeId
⁄⁄ %
=
⁄⁄& '
	education
⁄⁄( 1
.
⁄⁄1 2
	CollegeId
⁄⁄2 ;
;
⁄⁄; <
if
€€ 
(
€€ 
Profile
€€ 
.
€€ 
Starting
€€ $
!=
€€% '
	education
€€( 1
.
€€1 2
Starting
€€2 :
)
€€: ;
Profile
‹‹ 
.
‹‹ 
Starting
‹‹ $
=
‹‹% &
	education
‹‹' 0
.
‹‹0 1
Starting
‹‹1 9
;
‹‹9 :
if
›› 
(
›› 
Profile
›› 
.
›› 
Ending
›› "
!=
››# %
	education
››& /
.
››/ 0
Ending
››0 6
)
››6 7
Profile
ﬁﬁ 
.
ﬁﬁ 
Ending
ﬁﬁ "
=
ﬁﬁ# $
	education
ﬁﬁ% .
.
ﬁﬁ. /
Ending
ﬁﬁ/ 5
;
ﬁﬁ5 6
if
ﬂﬂ 
(
ﬂﬂ 
Profile
ﬂﬂ 
.
ﬂﬂ 

Percentage
ﬂﬂ &
!=
ﬂﬂ' )
	education
ﬂﬂ* 3
.
ﬂﬂ3 4

Percentage
ﬂﬂ4 >
)
ﬂﬂ> ?
Profile
‡‡ 
.
‡‡ 

Percentage
‡‡ &
=
‡‡' (
	education
‡‡) 2
.
‡‡2 3

Percentage
‡‡3 =
;
‡‡= >
Profile
·· 
.
·· 
	UpdatedBy
·· !
=
··" #
	education
··$ -
.
··- .
	CreatedBy
··. 7
;
··7 8
Profile
‚‚ 
.
‚‚ 
	UpdatedOn
‚‚ !
=
‚‚" #
DateTime
‚‚$ ,
.
‚‚, -
Now
‚‚- 0
;
‚‚0 1
return
‰‰ 
profileData
‰‰ "
.
‰‰" #
UpdateEducation
‰‰# 2
(
‰‰2 3
Profile
‰‰3 :
)
‰‰: ;
;
‰‰; <
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
	exception
ÁÁ &
)
ÁÁ& '
{
ËË 
_logger
ÈÈ 
.
ÈÈ 
LogInformation
ÈÈ &
(
ÈÈ& '
$"
ÈÈ' )
$str
ÈÈ) J
{
ÈÈJ K
	exception
ÈÈK T
.
ÈÈT U
Message
ÈÈU \
}
ÈÈ\ ]
$str
ÈÈ] _
{
ÈÈ_ `
	exception
ÈÈ` i
.
ÈÈi j

StackTrace
ÈÈj t
}
ÈÈt u
"
ÈÈu v
)
ÈÈv w
;
ÈÈw x
return
ÍÍ 
false
ÍÍ 
;
ÍÍ 
}
ÎÎ 
}
ÏÏ 	
public
ÌÌ 
bool
ÌÌ '
DisableEducationalDetails
ÌÌ -
(
ÌÌ- .
int
ÌÌ. 1!
EducationalDetailid
ÌÌ2 E
)
ÌÌE F
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ !
EducationalDetailid
ÔÔ #
<=
ÔÔ$ &
$num
ÔÔ' (
)
ÔÔ( )
throw
 
new
 #
ArgumentNullException
 /
(
/ 0
$"
0 2
$str
2 D
{
D E!
EducationalDetailid
E X
}
X Y
"
Y Z
)
Z [
;
[ \
try
ÛÛ 
{
ÙÙ 
return
ˆˆ 
profileData
ˆˆ "
.
ˆˆ" #'
DisableEducationalDetails
ˆˆ# <
(
ˆˆ< =!
EducationalDetailid
ˆˆ= P
)
ˆˆP Q
?
ˆˆR S
true
ˆˆT X
:
ˆˆY Z
false
ˆˆ[ `
;
ˆˆ` a
}
¯¯ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
	exception
˙˙ &
)
˙˙& '
{
˚˚ 
_logger
¸¸ 
.
¸¸ 
LogInformation
¸¸ &
(
¸¸& '
$"
¸¸' )
$str
¸¸) A
{
¸¸A B
	exception
¸¸B K
.
¸¸K L
Message
¸¸L S
}
¸¸S T
$str
¸¸T V
{
¸¸V W
	exception
¸¸W `
.
¸¸` a

StackTrace
¸¸a k
}
¸¸k l
"
¸¸l m
)
¸¸m n
;
¸¸n o
return
˝˝ 
false
˝˝ 
;
˝˝ 
}
˛˛ 
}
ˇˇ 	
public
ÅÅ 
bool
ÅÅ 
AddProjects
ÅÅ 
(
ÅÅ  
Projects
ÅÅ  (
project
ÅÅ) 0
)
ÅÅ0 1
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
project
ÉÉ 
==
ÉÉ 
null
ÉÉ 
)
ÉÉ  
throw
ÉÉ! &
new
ÉÉ' *#
ArgumentNullException
ÉÉ+ @
(
ÉÉ@ A
$"
ÉÉA C
$str
ÉÉC d
{
ÉÉd e
project
ÉÉe l
}
ÉÉl m
"
ÉÉm n
)
ÉÉn o
;
ÉÉo p
try
ÖÖ 
{
ÜÜ 
project
áá 
.
áá 
IsActive
áá  
=
áá! "
true
áá# '
;
áá' (
project
àà 
.
àà 
	CreatedBy
àà !
=
àà" #
project
àà$ +
.
àà+ ,
	ProfileId
àà, 5
;
àà5 6
project
ââ 
.
ââ 
	CreatedOn
ââ !
=
ââ" #
DateTime
ââ$ ,
.
ââ, -
Now
ââ- 0
;
ââ0 1
return
ää 
profileData
ää "
.
ää" #
AddProjects
ää# .
(
ää. /
project
ää/ 6
)
ää6 7
?
ää8 9
true
ää: >
:
ää? @
false
ääA F
;
ääF G
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
	exception
åå &
)
åå& '
{
çç 
_logger
éé 
.
éé 
LogInformation
éé &
(
éé& '
$"
éé' )
$str
éé) F
{
ééF G
	exception
ééG P
.
ééP Q
Message
ééQ X
}
ééX Y
$str
ééY [
{
éé[ \
	exception
éé\ e
.
éée f

StackTrace
ééf p
}
éép q
"
ééq r
)
éér s
;
éés t
return
èè 
false
èè 
;
èè 
}
êê 
}
ìì 	
public
ïï 
object
ïï #
GetProjectDetailsById
ïï +
(
ïï+ ,
int
ïï, /
	Projectid
ïï0 9
)
ïï9 :
{
ññ 	
if
óó 
(
óó 
	Projectid
óó 
<=
óó 
$num
óó 
)
óó 
throw
òò 
new
òò #
ArgumentNullException
òò /
(
òò/ 0
$"
òò0 2
$str
òò2 D
{
òòD E
	Projectid
òòE N
}
òòN O
"
òòO P
)
òòP Q
;
òòQ R
try
ôô 
{
öö 
var
õõ 
getprojectdetails
õõ %
=
õõ& '
profileData
õõ( 3
.
õõ3 4#
GetProjectDetailsById
õõ4 I
(
õõI J
	Projectid
õõJ S
)
õõS T
;
õõT U
return
úú 
new
úú 
{
ùù 
	projectid
ûû 
=
ûû 
getprojectdetails
ûû  1
.
ûû1 2
	ProjectId
ûû2 ;
,
ûû; <
projectname
üü 
=
üü  !
getprojectdetails
üü" 3
.
üü3 4
ProjectName
üü4 ?
,
üü? @ 
projectdescription
†† &
=
††' (
getprojectdetails
††) :
.
††: ; 
ProjectDescription
††; M
,
††M N
startingMonth
°° !
=
°°" #
getprojectdetails
°°$ 5
.
°°5 6
StartingMonth
°°6 C
,
°°C D
startingYear
¢¢  
=
¢¢! "
getprojectdetails
¢¢# 4
.
¢¢4 5
StartingYear
¢¢5 A
,
¢¢A B
endingMonth
££ 
=
££  !
getprojectdetails
££" 3
.
££3 4
EndingMonth
££4 ?
,
££? @

endingYear
§§ 
=
§§  
getprojectdetails
§§! 2
.
§§2 3

EndingYear
§§3 =
,
§§= >
role
•• 
=
•• 
getprojectdetails
•• ,
.
••, -
Designation
••- 8
,
••8 9
	toolsused
¶¶ 
=
¶¶ 
getprojectdetails
¶¶  1
.
¶¶1 2
	ToolsUsed
¶¶2 ;
,
¶¶; <
}
®® 
;
®® 
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
	exception
™™ &
)
™™& '
{
´´ 
_logger
¨¨ 
.
¨¨ 
LogError
¨¨  
(
¨¨  !
$"
¨¨! #
$str
¨¨# J
{
¨¨J K
	exception
¨¨K T
.
¨¨T U
Message
¨¨U \
}
¨¨\ ]
$str
¨¨] _
{
¨¨_ `
	exception
¨¨` i
.
¨¨i j

StackTrace
¨¨j t
}
¨¨t u
"
¨¨u v
)
¨¨v w
;
¨¨w x
throw
≠≠ 
	exception
≠≠ 
;
≠≠  
}
ÆÆ 
}
ØØ 	
public
∞∞ 
IEnumerable
∞∞ 
<
∞∞ 
Projects
∞∞ #
>
∞∞# $"
GetallProjectDetails
∞∞% 9
(
∞∞9 :
)
∞∞: ;
{
±± 	
try
≤≤ 
{
≥≥ 
return
µµ 
from
µµ 
projects
µµ $
in
µµ% '
profileData
µµ( 3
.
µµ3 4"
GetallProjectDetails
µµ4 H
(
µµH I
)
µµI J
where
µµK P
projects
µµQ Y
.
µµY Z
IsActive
µµZ b
==
µµc e
true
µµf j
select
µµk q
projects
µµr z
;
µµz {
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
	exception
∑∑ &
)
∑∑& '
{
∏∏ 
_logger
ππ 
.
ππ 
LogError
ππ  
(
ππ  !
$"
ππ! #
$str
ππ# I
{
ππI J
	exception
ππJ S
.
ππS T
Message
ππT [
}
ππ[ \
$str
ππ\ ^
{
ππ^ _
	exception
ππ_ h
.
ππh i

StackTrace
ππi s
}
ππs t
"
ππt u
)
ππu v
;
ππv w
throw
∫∫ 
	exception
∫∫ 
;
∫∫  
}
ªª 
}
ºº 	
public
ΩΩ 
IEnumerable
ΩΩ 
<
ΩΩ 
Object
ΩΩ !
>
ΩΩ! "-
GetAllProjectDetailsByProfileId
ΩΩ# B
(
ΩΩB C
int
ΩΩC F
	Profileid
ΩΩG P
)
ΩΩP Q
{
ææ 	
if
øø 
(
øø 
	Profileid
øø 
<=
øø 
$num
øø 
)
øø 
throw
¿¿ 
new
¿¿ #
ArgumentNullException
¿¿ /
(
¿¿/ 0
$"
¿¿0 2
$str
¿¿2 D
{
¿¿D E
	Profileid
¿¿E N
}
¿¿N O
"
¿¿O P
)
¿¿P Q
;
¿¿Q R
try
¡¡ 
{
¬¬ 
var
ƒƒ -
getallprojectdetailsbyprofileid
ƒƒ 3
=
ƒƒ4 5
profileData
ƒƒ6 A
.
ƒƒA B"
GetallProjectDetails
ƒƒB V
(
ƒƒV W
)
ƒƒW X
.
ƒƒX Y
Where
ƒƒY ^
(
ƒƒ^ _
item
ƒƒ_ c
=>
ƒƒd f
item
ƒƒg k
.
ƒƒk l
	ProfileId
ƒƒl u
==
ƒƒv x
	Profileidƒƒy Ç
&&ƒƒÉ Ö
itemƒƒÜ ä
.ƒƒä ã
IsActiveƒƒã ì
==ƒƒî ñ
trueƒƒó õ
)ƒƒõ ú
.ƒƒú ù
Selectƒƒù £
(ƒƒ£ §
itemƒƒ§ ®
=>ƒƒ© ´
new
≈≈ 
{
∆∆ 
	projectid
»» 
=
»»  
item
»»! %
.
»»% &
	ProjectId
»»& /
,
»»/ 0
projectname
……  
=
……! "
item
……# '
.
……' (
ProjectName
……( 3
,
……3 4 
projectdescription
   '
=
  ( )
item
  * .
.
  . / 
ProjectDescription
  / A
,
  A B
startingMonth
ÀÀ "
=
ÀÀ# $
item
ÀÀ% )
.
ÀÀ) *
StartingMonth
ÀÀ* 7
,
ÀÀ7 8
startingYear
ÃÃ !
=
ÃÃ" #
item
ÃÃ$ (
.
ÃÃ( )
StartingYear
ÃÃ) 5
,
ÃÃ5 6
endingMonth
ÕÕ  
=
ÕÕ! "
item
ÕÕ# '
.
ÕÕ' (
EndingMonth
ÕÕ( 3
,
ÕÕ3 4

endingYear
ŒŒ 
=
ŒŒ  !
item
ŒŒ" &
.
ŒŒ& '

EndingYear
ŒŒ' 1
,
ŒŒ1 2
role
œœ 
=
œœ 
item
œœ  
.
œœ  !
Designation
œœ! ,
,
œœ, -
	toolsused
–– 
=
––  
item
––! %
.
––% &
	ToolsUsed
––& /
}
’’ 
)
’’ 
;
’’ 
return
’’ -
getallprojectdetailsbyprofileid
’’ ;
;
’’; <
}
ÿÿ 
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
	exception
ŸŸ &
)
ŸŸ& '
{
⁄⁄ 
_logger
€€ 
.
€€ 
LogError
€€  
(
€€  !
$"
€€! #
$str
€€# T
{
€€T U
	exception
€€U ^
.
€€^ _
Message
€€_ f
}
€€f g
$str
€€g i
{
€€i j
	exception
€€j s
.
€€s t

StackTrace
€€t ~
}
€€~ 
"€€ Ä
)€€Ä Å
;€€Å Ç
throw
‹‹ 
	exception
‹‹ 
;
‹‹  
}
›› 
}
ﬁﬁ 	
public
ﬂﬂ 
Projects
ﬂﬂ 
GetProjectById
ﬂﬂ &
(
ﬂﬂ& '
int
ﬂﬂ' *
	ProjectId
ﬂﬂ+ 4
)
ﬂﬂ4 5
{
‡‡ 	
try
·· 
{
‚‚ 
if
„„ 
(
„„ 
	ProjectId
„„ 
<=
„„  
$num
„„! "
)
„„" #
throw
‰‰ 
new
‰‰ #
ArgumentNullException
‰‰ 3
(
‰‰3 4
$"
‰‰4 6
$str
‰‰6 J
{
‰‰J K
	ProjectId
‰‰K T
}
‰‰T U
"
‰‰U V
)
‰‰V W
;
‰‰W X
Projects
ÂÂ 
project
ÂÂ  
=
ÂÂ! "
profileData
ÂÂ# .
.
ÂÂ. /#
GetProjectDetailsById
ÂÂ/ D
(
ÂÂD E
	ProjectId
ÂÂE N
)
ÂÂN O
;
ÂÂO P
return
ÊÊ 
project
ÊÊ 
;
ÊÊ 
}
ÁÁ 
catch
ËË 
(
ËË 
	Exception
ËË 
	exception
ËË &
)
ËË& '
{
ÈÈ 
_logger
ÍÍ 
.
ÍÍ 
LogError
ÍÍ  
(
ÍÍ  !
$"
ÍÍ! #
$str
ÍÍ# C
{
ÍÍC D
	exception
ÍÍD M
.
ÍÍM N
Message
ÍÍN U
}
ÍÍU V
$str
ÍÍV X
{
ÍÍX Y
	exception
ÍÍY b
.
ÍÍb c

StackTrace
ÍÍc m
}
ÍÍm n
"
ÍÍn o
)
ÍÍo p
;
ÍÍp q
throw
ÎÎ 
	exception
ÎÎ 
;
ÎÎ  
}
ÏÏ 
}
ÓÓ 	
public
ÔÔ 
bool
ÔÔ 
UpdateProjects
ÔÔ "
(
ÔÔ" #
Projects
ÔÔ# +
projects
ÔÔ, 4
)
ÔÔ4 5
{
 	
if
ÒÒ 
(
ÒÒ 
projects
ÒÒ 
==
ÒÒ 
null
ÒÒ  
)
ÒÒ  !
throw
ÒÒ" '
new
ÒÒ( +#
ArgumentNullException
ÒÒ, A
(
ÒÒA B
$"
ÒÒB D
$str
ÒÒD 
{ÒÒ Ä
projectsÒÒÄ à
}ÒÒà â
"ÒÒâ ä
)ÒÒä ã
;ÒÒã å
try
ÛÛ 
{
ÙÙ 
var
ıı 
Profile
ıı 
=
ıı 
GetProjectById
ıı ,
(
ıı, -
projects
ıı- 5
.
ıı5 6
	ProjectId
ıı6 ?
)
ıı? @
;
ıı@ A
if
˜˜ 
(
˜˜ 
Profile
˜˜ 
.
˜˜ 
ProjectName
˜˜ '
!=
˜˜( *
projects
˜˜+ 3
.
˜˜3 4
ProjectName
˜˜4 ?
)
˜˜? @
Profile
¯¯ 
.
¯¯ 
ProjectName
¯¯ '
=
¯¯( )
projects
¯¯* 2
.
¯¯2 3
ProjectName
¯¯3 >
;
¯¯> ?
if
˘˘ 
(
˘˘ 
Profile
˘˘ 
.
˘˘  
ProjectDescription
˘˘ .
!=
˘˘/ 1
projects
˘˘2 :
.
˘˘: ; 
ProjectDescription
˘˘; M
)
˘˘M N
Profile
˙˙ 
.
˙˙  
ProjectDescription
˙˙ .
=
˙˙/ 0
projects
˙˙1 9
.
˙˙9 : 
ProjectDescription
˙˙: L
;
˙˙L M
if
˚˚ 
(
˚˚ 
Profile
˚˚ 
.
˚˚ 
StartingMonth
˚˚ )
!=
˚˚* ,
projects
˚˚- 5
.
˚˚5 6
StartingMonth
˚˚6 C
)
˚˚C D
Profile
¸¸ 
.
¸¸ 
StartingMonth
¸¸ )
=
¸¸* +
projects
¸¸, 4
.
¸¸4 5
StartingMonth
¸¸5 B
;
¸¸B C
if
˝˝ 
(
˝˝ 
Profile
˝˝ 
.
˝˝ 
StartingYear
˝˝ (
!=
˝˝) +
projects
˝˝, 4
.
˝˝4 5
StartingYear
˝˝5 A
)
˝˝A B
Profile
˛˛ 
.
˛˛ 
StartingYear
˛˛ (
=
˛˛) *
projects
˛˛+ 3
.
˛˛3 4
StartingYear
˛˛4 @
;
˛˛@ A
if
ˇˇ 
(
ˇˇ 
Profile
ˇˇ 
.
ˇˇ 
EndingMonth
ˇˇ '
!=
ˇˇ( *
projects
ˇˇ+ 3
.
ˇˇ3 4
EndingMonth
ˇˇ4 ?
)
ˇˇ? @
Profile
ÄÄ 
.
ÄÄ 
EndingMonth
ÄÄ '
=
ÄÄ( )
projects
ÄÄ* 2
.
ÄÄ2 3
EndingMonth
ÄÄ3 >
;
ÄÄ> ?
if
ÅÅ 
(
ÅÅ 
Profile
ÅÅ 
.
ÅÅ 

EndingYear
ÅÅ &
!=
ÅÅ' )
projects
ÅÅ* 2
.
ÅÅ2 3

EndingYear
ÅÅ3 =
)
ÅÅ= >
Profile
ÇÇ 
.
ÇÇ 

EndingYear
ÇÇ &
=
ÇÇ' (
projects
ÇÇ) 1
.
ÇÇ1 2

EndingYear
ÇÇ2 <
;
ÇÇ< =
if
ÉÉ 
(
ÉÉ 
Profile
ÉÉ 
.
ÉÉ 
Designation
ÉÉ '
!=
ÉÉ( *
projects
ÉÉ+ 3
.
ÉÉ3 4
Designation
ÉÉ4 ?
)
ÉÉ? @
Profile
ÑÑ 
.
ÑÑ 
Designation
ÑÑ '
=
ÑÑ( )
projects
ÑÑ* 2
.
ÑÑ2 3
Designation
ÑÑ3 >
;
ÑÑ> ?
if
ÖÖ 
(
ÖÖ 
Profile
ÖÖ 
.
ÖÖ 
	ToolsUsed
ÖÖ %
!=
ÖÖ& (
projects
ÖÖ) 1
.
ÖÖ1 2
	ToolsUsed
ÖÖ2 ;
)
ÖÖ; <
Profile
ÜÜ 
.
ÜÜ 
	ToolsUsed
ÜÜ %
=
ÜÜ& '
projects
ÜÜ( 0
.
ÜÜ0 1
	ToolsUsed
ÜÜ1 :
;
ÜÜ: ;
Profile
àà 
.
àà 
IsActive
àà  
=
àà! "
projects
àà# +
.
àà+ ,
IsActive
àà, 4
;
àà4 5
Profile
ââ 
.
ââ 
	UpdatedBy
ââ !
=
ââ" #
projects
ââ$ ,
.
ââ, -
	CreatedBy
ââ- 6
;
ââ6 7
Profile
ää 
.
ää 
	UpdatedOn
ää !
=
ää" #
DateTime
ää$ ,
.
ää, -
Now
ää- 0
;
ää0 1
return
ãã 
profileData
ãã "
.
ãã" #
UpdateProjects
ãã# 1
(
ãã1 2
Profile
ãã2 9
)
ãã9 :
;
ãã: ;
}
çç 
catch
èè 
(
èè 
	Exception
èè 
	exception
èè &
)
èè& '
{
êê 
_logger
ëë 
.
ëë 
LogInformation
ëë &
(
ëë& '
$"
ëë' )
$str
ëë) I
{
ëëI J
	exception
ëëJ S
.
ëëS T
Message
ëëT [
}
ëë[ \
$str
ëë\ ^
{
ëë^ _
	exception
ëë_ h
.
ëëh i

StackTrace
ëëi s
}
ëës t
"
ëët u
)
ëëu v
;
ëëv w
return
íí 
false
íí 
;
íí 
}
îî 
}
ïï 	
public
ññ 
bool
ññ #
DisableProjectDetails
ññ )
(
ññ) *
int
ññ* -
ProjectDetailid
ññ. =
)
ññ= >
{
óó 	
if
òò 
(
òò 
ProjectDetailid
òò 
<=
òò  "
$num
òò# $
)
òò$ %
throw
ôô 
new
ôô #
ArgumentNullException
ôô /
(
ôô/ 0
$"
ôô0 2
$str
ôô2 D
{
ôôD E
ProjectDetailid
ôôE T
}
ôôT U
"
ôôU V
)
ôôV W
;
ôôW X
try
úú 
{
ùù 
return
üü 
profileData
üü "
.
üü" ##
DisableProjectDetails
üü# 8
(
üü8 9
ProjectDetailid
üü9 H
)
üüH I
?
üüJ K
true
üüL P
:
üüQ R
false
üüS X
;
üüX Y
}
°° 
catch
££ 
(
££ 
	Exception
££ 
	exception
££ &
)
££& '
{
§§ 
_logger
•• 
.
•• 
LogInformation
•• &
(
••& '
$"
••' )
$str
••) P
{
••P Q
	exception
••Q Z
.
••Z [
Message
••[ b
}
••b c
$str
••c e
{
••e f
	exception
••f o
.
••o p

StackTrace
••p z
}
••z {
"
••{ |
)
••| }
;
••} ~
return
¶¶ 
false
¶¶ 
;
¶¶ 
}
ßß 
}
®® 	
public
™™ 
bool
™™ 
	AddSkills
™™ 
(
™™ 
Skills
™™ $
skill
™™% *
)
™™* +
{
´´ 	
if
¨¨ 
(
¨¨ 
skill
¨¨ 
==
¨¨ 
null
¨¨ 
)
¨¨ 
throw
¨¨ $
new
¨¨% (#
ArgumentNullException
¨¨) >
(
¨¨> ?
$"
¨¨? A
$str
¨¨A b
{
¨¨b c
skill
¨¨c h
}
¨¨h i
"
¨¨i j
)
¨¨j k
;
¨¨k l
_profileValidate
≠≠ 
.
≠≠ #
SkillDetailValidation
≠≠ 2
(
≠≠2 3
skill
≠≠3 8
)
≠≠8 9
;
≠≠9 :
try
ÆÆ 
{
ØØ 
skill
∞∞ 
.
∞∞ 
	CreatedBy
∞∞ 
=
∞∞  !
skill
∞∞" '
.
∞∞' (
	ProfileId
∞∞( 1
;
∞∞1 2
skill
±± 
.
±± 
	CreatedOn
±± 
=
±±  !
DateTime
±±" *
.
±±* +
Now
±±+ .
;
±±. /
return
≤≤ 
profileData
≤≤ "
.
≤≤" #
	AddSkills
≤≤# ,
(
≤≤, -
skill
≤≤- 2
)
≤≤2 3
?
≤≤4 5
true
≤≤6 :
:
≤≤; <
false
≤≤= B
;
≤≤B C
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
	exception
¥¥ &
)
¥¥& '
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogInformation
∂∂ &
(
∂∂& '
$"
∂∂' )
$str
∂∂) D
{
∂∂D E
	exception
∂∂E N
.
∂∂N O
Message
∂∂O V
}
∂∂V W
$str
∂∂W Y
{
∂∂Y Z
	exception
∂∂Z c
.
∂∂c d

StackTrace
∂∂d n
}
∂∂n o
"
∂∂o p
)
∂∂p q
;
∂∂q r
return
∑∑ 
false
∑∑ 
;
∑∑ 
}
∏∏ 
}
ªª 	
public
ΩΩ 
object
ΩΩ !
GetSkillDetailsById
ΩΩ )
(
ΩΩ) *
int
ΩΩ* -
Skillid
ΩΩ. 5
)
ΩΩ5 6
{
ææ 	
if
øø 
(
øø 
Skillid
øø 
<=
øø 
$num
øø 
)
øø 
throw
¿¿ 
new
¿¿ #
ArgumentNullException
¿¿ /
(
¿¿/ 0
$"
¿¿0 2
$str
¿¿2 D
{
¿¿D E
Skillid
¿¿E L
}
¿¿L M
"
¿¿M N
)
¿¿N O
;
¿¿O P
try
¡¡ 
{
¬¬ 
var
√√ 
getskilldetails
√√ #
=
√√$ %
profileData
√√& 1
.
√√1 2!
GetSkillDetailsById
√√2 E
(
√√E F
Skillid
√√F M
)
√√M N
;
√√N O
return
ƒƒ 
new
ƒƒ 
{
≈≈ 
skillid
∆∆ 
=
∆∆ 
getskilldetails
∆∆ -
.
∆∆- .
SkillId
∆∆. 5
,
∆∆5 6

domainname
«« 
=
««  
getskilldetails
««! 0
.
««0 1
domain
««1 7
!
««7 8
.
««8 9

DomainName
««9 C
,
««C D
technologyname
»» "
=
»»# $
getskilldetails
»»% 4
.
»»4 5

technology
»»5 ?
!
»»? @
.
»»@ A
TechnologyName
»»A O
,
»»O P
domainId
…… 
=
…… 
getskilldetails
…… .
.
……. /
DomainId
……/ 7
,
……7 8
technologyId
    
=
  ! "
getskilldetails
  # 2
.
  2 3
TechnologyId
  3 ?
}
ÀÀ 
;
ÀÀ 
}
ÃÃ 
catch
ÕÕ 
(
ÕÕ 
	Exception
ÕÕ 
	exception
ÕÕ &
)
ÕÕ& '
{
ŒŒ 
_logger
œœ 
.
œœ 
LogError
œœ  
(
œœ  !
$"
œœ! #
$str
œœ# H
{
œœH I
	exception
œœI R
.
œœR S
Message
œœS Z
}
œœZ [
$str
œœ[ ]
{
œœ] ^
	exception
œœ^ g
.
œœg h

StackTrace
œœh r
}
œœr s
"
œœs t
)
œœt u
;
œœu v
throw
–– 
	exception
–– 
;
––  
}
—— 
}
““ 	
public
”” 
IEnumerable
”” 
<
”” 
Skills
”” !
>
””! " 
GetallSkillDetails
””# 5
(
””5 6
)
””6 7
{
‘‘ 	
try
’’ 
{
÷÷ 
return
ÿÿ 
from
ÿÿ 
skills
ÿÿ "
in
ÿÿ# %
profileData
ÿÿ& 1
.
ÿÿ1 2 
GetallSkillDetails
ÿÿ2 D
(
ÿÿD E
)
ÿÿE F
where
ÿÿG L
skills
ÿÿM S
.
ÿÿS T
IsActive
ÿÿT \
==
ÿÿ] _
true
ÿÿ` d
select
ÿÿe k
skills
ÿÿl r
;
ÿÿr s
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
	Exception
⁄⁄ 
	exception
⁄⁄ &
)
⁄⁄& '
{
€€ 
_logger
‹‹ 
.
‹‹ 
LogError
‹‹  
(
‹‹  !
$"
‹‹! #
$str
‹‹# G
{
‹‹G H
	exception
‹‹H Q
.
‹‹Q R
Message
‹‹R Y
}
‹‹Y Z
$str
‹‹Z \
{
‹‹\ ]
	exception
‹‹] f
.
‹‹f g

StackTrace
‹‹g q
}
‹‹q r
"
‹‹r s
)
‹‹s t
;
‹‹t u
throw
›› 
	exception
›› 
;
››  
}
ﬁﬁ 
}
ﬂﬂ 	
public
‡‡ 
IEnumerable
‡‡ 
<
‡‡ 
Object
‡‡ !
>
‡‡! "+
GetAllSkillDetailsByProfileId
‡‡# @
(
‡‡@ A
int
‡‡A D
	Profileid
‡‡E N
)
‡‡N O
{
·· 	
if
‚‚ 
(
‚‚ 
	Profileid
‚‚ 
<=
‚‚ 
$num
‚‚ 
)
‚‚ 
throw
„„ 
new
„„ #
ArgumentNullException
„„ /
(
„„/ 0
$"
„„0 2
$str
„„2 D
{
„„D E
	Profileid
„„E N
}
„„N O
"
„„O P
)
„„P Q
;
„„Q R
try
‰‰ 
{
ÂÂ 
var
ÊÊ +
getallskilldetailsbyprofileid
ÊÊ 1
=
ÊÊ2 3
profileData
ÊÊ4 ?
.
ÊÊ? @ 
GetallSkillDetails
ÊÊ@ R
(
ÊÊR S
)
ÊÊS T
.
ÊÊT U
Where
ÊÊU Z
(
ÊÊZ [
item
ÊÊ[ _
=>
ÊÊ` b
item
ÊÊc g
.
ÊÊg h
	ProfileId
ÊÊh q
==
ÊÊr t
	Profileid
ÊÊu ~
&&ÊÊ Å
itemÊÊÇ Ü
.ÊÊÜ á
IsActiveÊÊá è
==ÊÊê í
trueÊÊì ó
)ÊÊó ò
.ÊÊò ô
SelectÊÊô ü
(ÊÊü †
itemÊÊ† §
=>ÊÊ• ß
new
ÁÁ 
{
ËË 
skillid
ÈÈ 
=
ÈÈ 
item
ÈÈ "
.
ÈÈ" #
SkillId
ÈÈ# *
,
ÈÈ* +

domainname
ÍÍ 
=
ÍÍ  
item
ÍÍ! %
.
ÍÍ% &
domain
ÍÍ& ,
!
ÍÍ, -
.
ÍÍ- .

DomainName
ÍÍ. 8
,
ÍÍ8 9
technologyname
ÎÎ "
=
ÎÎ# $
item
ÎÎ% )
.
ÎÎ) *

technology
ÎÎ* 4
!
ÎÎ4 5
.
ÎÎ5 6
TechnologyName
ÎÎ6 D
}
ÏÏ 
)
ÏÏ 
;
ÏÏ 
return
ÏÏ +
getallskilldetailsbyprofileid
ÏÏ 8
;
ÏÏ8 9
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
	Exception
ÓÓ 
	exception
ÓÓ &
)
ÓÓ& '
{
ÔÔ 
_logger
 
.
 
LogError
  
(
  !
$"
! #
$str
# R
{
R S
	exception
S \
.
\ ]
Message
] d
}
d e
$str
e g
{
g h
	exception
h q
.
q r

StackTrace
r |
}
| }
"
} ~
)
~ 
; Ä
throw
ÒÒ 
	exception
ÒÒ 
;
ÒÒ  
}
ÚÚ 
}
ÛÛ 	
public
ÙÙ 
Skills
ÙÙ 
GetSkillById
ÙÙ "
(
ÙÙ" #
int
ÙÙ# &
SkillId
ÙÙ' .
)
ÙÙ. /
{
ıı 	
try
ˆˆ 
{
˜˜ 
if
¯¯ 
(
¯¯ 
SkillId
¯¯ 
<=
¯¯ 
$num
¯¯  
)
¯¯  !
throw
˘˘ 
new
˘˘ #
ArgumentNullException
˘˘ 3
(
˘˘3 4
$"
˘˘4 6
$str
˘˘6 M
{
˘˘M N
SkillId
˘˘N U
}
˘˘U V
"
˘˘V W
)
˘˘W X
;
˘˘X Y
var
˙˙ 
skills
˙˙ 
=
˙˙ 
profileData
˙˙ (
.
˙˙( )!
GetSkillDetailsById
˙˙) <
(
˙˙< =
SkillId
˙˙= D
)
˙˙D E
;
˙˙E F
return
˚˚ 
skills
˚˚ 
;
˚˚ 
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
	exception
˝˝ &
)
˝˝& '
{
˛˛ 
_logger
ˇˇ 
.
ˇˇ 
LogError
ˇˇ  
(
ˇˇ  !
$"
ˇˇ! #
$str
ˇˇ# A
{
ˇˇA B
	exception
ˇˇB K
.
ˇˇK L
Message
ˇˇL S
}
ˇˇS T
$str
ˇˇT V
{
ˇˇV W
	exception
ˇˇW `
.
ˇˇ` a

StackTrace
ˇˇa k
}
ˇˇk l
"
ˇˇl m
)
ˇˇm n
;
ˇˇn o
throw
ÄÄ 
	exception
ÄÄ 
;
ÄÄ  
}
ÅÅ 
}
ÉÉ 	
public
ÑÑ 
bool
ÑÑ 
UpdateSkills
ÑÑ  
(
ÑÑ  !
Skills
ÑÑ! '
skill
ÑÑ( -
)
ÑÑ- .
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
skill
ÜÜ 
==
ÜÜ 
null
ÜÜ 
)
ÜÜ 
throw
ÜÜ $
new
ÜÜ% (#
ArgumentNullException
ÜÜ) >
(
ÜÜ> ?
$"
ÜÜ? A
$str
ÜÜA x
{
ÜÜx y
skill
ÜÜy ~
}
ÜÜ~ 
"ÜÜ Ä
)ÜÜÄ Å
;ÜÜÅ Ç
try
àà 
{
ââ 
var
ää 
skills
ää 
=
ää 
GetSkillById
ää )
(
ää) *
skill
ää* /
.
ää/ 0
SkillId
ää0 7
)
ää7 8
;
ää8 9
if
åå 
(
åå 
skills
åå 
.
åå 
DomainId
åå #
!=
åå$ &
skill
åå' ,
.
åå, -
DomainId
åå- 5
)
åå5 6
skills
çç 
.
çç 
DomainId
çç #
=
çç$ %
skill
çç& +
.
çç+ ,
DomainId
çç, 4
;
çç4 5
if
éé 
(
éé 
skills
éé 
.
éé 
TechnologyId
éé '
!=
éé( *
skill
éé+ 0
.
éé0 1
TechnologyId
éé1 =
)
éé= >
skills
èè 
.
èè 
TechnologyId
èè '
=
èè( )
skill
èè* /
.
èè/ 0
TechnologyId
èè0 <
;
èè< =
skills
êê 
.
êê 
	UpdatedBy
êê  
=
êê! "
skill
êê# (
.
êê( )
	CreatedBy
êê) 2
;
êê2 3
skills
ëë 
.
ëë 
	UpdatedOn
ëë  
=
ëë! "
DateTime
ëë# +
.
ëë+ ,
Now
ëë, /
;
ëë/ 0
return
ìì 
profileData
ìì "
.
ìì" #
UpdateSkills
ìì# /
(
ìì/ 0
skills
ìì0 6
)
ìì6 7
;
ìì7 8
}
îî 
catch
ññ 
(
ññ 
	Exception
ññ 
	exception
ññ &
)
ññ& '
{
óó 
_logger
òò 
.
òò 
LogInformation
òò &
(
òò& '
$"
òò' )
$str
òò) G
{
òòG H
	exception
òòH Q
.
òòQ R
Message
òòR Y
}
òòY Z
$str
òòZ \
{
òò\ ]
	exception
òò] f
.
òòf g

StackTrace
òòg q
}
òòq r
"
òòr s
)
òòs t
;
òòt u
return
ôô 
false
ôô 
;
ôô 
}
õõ 
}
úú 	
public
ûû 
bool
ûû !
DisableSkillDetails
ûû '
(
ûû' (
int
ûû( +
SkillDetailid
ûû, 9
)
ûû9 :
{
üü 	
if
†† 
(
†† 
SkillDetailid
†† 
<=
††  
$num
††! "
)
††" #
throw
°° 
new
°° #
ArgumentNullException
°° /
(
°°/ 0
$"
°°0 2
$str
°°2 D
{
°°D E
SkillDetailid
°°E R
}
°°R S
"
°°S T
)
°°T U
;
°°U V
try
§§ 
{
•• 
return
ßß 
profileData
ßß "
.
ßß" #!
DisableSkillDetails
ßß# 6
(
ßß6 7
SkillDetailid
ßß7 D
)
ßßD E
?
ßßF G
true
ßßH L
:
ßßM N
false
ßßO T
;
ßßT U
}
©© 
catch
´´ 
(
´´ 
	Exception
´´ 
	exception
´´ &
)
´´& '
{
¨¨ 
_logger
≠≠ 
.
≠≠ 
LogInformation
≠≠ &
(
≠≠& '
$"
≠≠' )
$str
≠≠) N
{
≠≠N O
	exception
≠≠O X
.
≠≠X Y
Message
≠≠Y `
}
≠≠` a
$str
≠≠a c
{
≠≠c d
	exception
≠≠d m
.
≠≠m n

StackTrace
≠≠n x
}
≠≠x y
"
≠≠y z
)
≠≠z {
;
≠≠{ |
return
ÆÆ 
false
ÆÆ 
;
ÆÆ 
}
ØØ 
}
∞∞ 	
public
±± 
bool
±± 
AddLanguage
±± 
(
±±  
Language
±±  (
language
±±) 1
)
±±1 2
{
≤≤ 	
if
≥≥ 
(
≥≥ 
language
≥≥ 
==
≥≥ 
null
≥≥  
)
≥≥  !
throw
≥≥" '
new
≥≥( +#
ArgumentNullException
≥≥, A
(
≥≥A B
$"
≥≥B D
$str
≥≥D e
{
≥≥e f
language
≥≥f n
}
≥≥n o
"
≥≥o p
)
≥≥p q
;
≥≥q r
try
µµ 
{
∂∂ 
language
∑∑ 
.
∑∑ 
	CreatedBy
∑∑ "
=
∑∑# $
language
∑∑% -
.
∑∑- .
PersonalDetailsId
∑∑. ?
;
∑∑? @
language
∏∏ 
.
∏∏ 
	CreatedOn
∏∏ "
=
∏∏# $
DateTime
∏∏% -
.
∏∏- .
Now
∏∏. 1
;
∏∏1 2
return
ππ 
profileData
ππ "
.
ππ" #
AddLanguage
ππ# .
(
ππ. /
language
ππ/ 7
)
ππ7 8
?
ππ9 :
true
ππ; ?
:
ππ@ A
false
ππB G
;
ππG H
}
∫∫ 
catch
ªª 
(
ªª 
	Exception
ªª 
	exception
ªª &
)
ªª& '
{
ºº 
_logger
ΩΩ 
.
ΩΩ 
LogInformation
ΩΩ &
(
ΩΩ& '
$"
ΩΩ' )
$str
ΩΩ) F
{
ΩΩF G
	exception
ΩΩG P
.
ΩΩP Q
Message
ΩΩQ X
}
ΩΩX Y
$str
ΩΩY [
{
ΩΩ[ \
	exception
ΩΩ\ e
.
ΩΩe f

StackTrace
ΩΩf p
}
ΩΩp q
"
ΩΩq r
)
ΩΩr s
;
ΩΩs t
return
ææ 
false
ææ 
;
ææ 
}
øø 
}
¬¬ 	
public
≈≈ 
bool
≈≈ 
DisableLanguage
≈≈ #
(
≈≈# $
int
≈≈$ '

Languageid
≈≈( 2
)
≈≈2 3
{
∆∆ 	
if
«« 
(
«« 

Languageid
«« 
<=
«« 
$num
«« 
)
««  
throw
»» 
new
»» #
ArgumentNullException
»» /
(
»»/ 0
$"
»»0 2
$str
»»2 D
{
»»D E

Languageid
»»E O
}
»»O P
"
»»P Q
)
»»Q R
;
»»R S
try
ÀÀ 
{
ÃÃ 
return
ŒŒ 
profileData
ŒŒ "
.
ŒŒ" #
DisableLanguage
ŒŒ# 2
(
ŒŒ2 3

Languageid
ŒŒ3 =
)
ŒŒ= >
?
ŒŒ? @
true
ŒŒA E
:
ŒŒF G
false
ŒŒH M
;
ŒŒM N
}
–– 
catch
““ 
(
““ 
	Exception
““ 
	exception
““ &
)
““& '
{
”” 
_logger
‘‘ 
.
‘‘ 
LogInformation
‘‘ &
(
‘‘& '
$"
‘‘' )
$str
‘‘) J
{
‘‘J K
	exception
‘‘K T
.
‘‘T U
Message
‘‘U \
}
‘‘\ ]
$str
‘‘] _
{
‘‘_ `
	exception
‘‘` i
.
‘‘i j

StackTrace
‘‘j t
}
‘‘t u
"
‘‘u v
)
‘‘v w
;
‘‘w x
return
’’ 
false
’’ 
;
’’ 
}
÷÷ 
}
◊◊ 	
public
ÿÿ 
bool
ÿÿ 
AddSocialMedia
ÿÿ "
(
ÿÿ" #
SocialMedia
ÿÿ# .
media
ÿÿ/ 4
)
ÿÿ4 5
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
media
⁄⁄ 
==
⁄⁄ 
null
⁄⁄ 
)
⁄⁄ 
throw
⁄⁄ $
new
⁄⁄% (#
ArgumentNullException
⁄⁄) >
(
⁄⁄> ?
$"
⁄⁄? A
$str
⁄⁄A b
{
⁄⁄b c
media
⁄⁄c h
}
⁄⁄h i
"
⁄⁄i j
)
⁄⁄j k
;
⁄⁄k l
try
‹‹ 
{
›› 
media
ﬁﬁ 
.
ﬁﬁ 
	CreatedBy
ﬁﬁ 
=
ﬁﬁ  !
media
ﬁﬁ" '
.
ﬁﬁ' (
PersonalDetailsId
ﬁﬁ( 9
;
ﬁﬁ9 :
media
ﬂﬂ 
.
ﬂﬂ 
	CreatedOn
ﬂﬂ 
=
ﬂﬂ  !
DateTime
ﬂﬂ" *
.
ﬂﬂ* +
Now
ﬂﬂ+ .
;
ﬂﬂ. /
return
‡‡ 
profileData
‡‡ "
.
‡‡" #
AddSocialMedia
‡‡# 1
(
‡‡1 2
media
‡‡2 7
)
‡‡7 8
?
‡‡9 :
true
‡‡; ?
:
‡‡@ A
false
‡‡B G
;
‡‡G H
}
·· 
catch
‚‚ 
(
‚‚ !
ValidationException
‚‚ &
	exception
‚‚' 0
)
‚‚0 1
{
„„ 
_logger
‰‰ 
.
‰‰ 
LogInformation
‰‰ &
(
‰‰& '
$"
‰‰' )
$str
‰‰) L
{
‰‰L M
	exception
‰‰M V
.
‰‰V W
Message
‰‰W ^
}
‰‰^ _
{
‰‰_ `
	exception
‰‰` i
.
‰‰i j

StackTrace
‰‰j t
}
‰‰t u
"
‰‰u v
)
‰‰v w
;
‰‰w x
throw
ÂÂ 
;
ÂÂ 
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
	exception
ÁÁ &
)
ÁÁ& '
{
ËË 
_logger
ÈÈ 
.
ÈÈ 
LogInformation
ÈÈ &
(
ÈÈ& '
$"
ÈÈ' )
$str
ÈÈ) I
{
ÈÈI J
	exception
ÈÈJ S
.
ÈÈS T
Message
ÈÈT [
}
ÈÈ[ \
$str
ÈÈ\ ^
{
ÈÈ^ _
	exception
ÈÈ_ h
.
ÈÈh i

StackTrace
ÈÈi s
}
ÈÈs t
"
ÈÈt u
)
ÈÈu v
;
ÈÈv w
throw
ÍÍ 
;
ÍÍ 
}
ÎÎ 
}
ÓÓ 	
public
ÔÔ 
bool
ÔÔ  
DisableSocialMedia
ÔÔ &
(
ÔÔ& '
int
ÔÔ' *
SocialMediaid
ÔÔ+ 8
)
ÔÔ8 9
{
 	
if
ÒÒ 
(
ÒÒ 
SocialMediaid
ÒÒ 
<=
ÒÒ  
$num
ÒÒ! "
)
ÒÒ" #
throw
ÚÚ 
new
ÚÚ #
ArgumentNullException
ÚÚ /
(
ÚÚ/ 0
$"
ÚÚ0 2
$str
ÚÚ2 D
{
ÚÚD E
SocialMediaid
ÚÚE R
}
ÚÚR S
"
ÚÚS T
)
ÚÚT U
;
ÚÚU V
try
ıı 
{
ˆˆ 
return
¯¯ 
profileData
¯¯ "
.
¯¯" # 
DisableSocialMedia
¯¯# 5
(
¯¯5 6
SocialMediaid
¯¯6 C
)
¯¯C D
?
¯¯E F
true
¯¯G K
:
¯¯L M
false
¯¯N S
;
¯¯S T
}
˙˙ 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
	exception
¸¸ &
)
¸¸& '
{
˝˝ 
_logger
˛˛ 
.
˛˛ 
LogInformation
˛˛ &
(
˛˛& '
$"
˛˛' )
$str
˛˛) M
{
˛˛M N
	exception
˛˛N W
.
˛˛W X
Message
˛˛X _
}
˛˛_ `
$str
˛˛` b
{
˛˛b c
	exception
˛˛c l
.
˛˛l m

StackTrace
˛˛m w
}
˛˛w x
"
˛˛x y
)
˛˛y z
;
˛˛z {
return
ˇˇ 
false
ˇˇ 
;
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
public
ÖÖ 
object
ÖÖ 
GetTechnologyById
ÖÖ '
(
ÖÖ' (
int
ÖÖ( +
Technologyid
ÖÖ, 8
)
ÖÖ8 9
{
ÜÜ 	
if
áá 
(
áá 
Technologyid
áá 
<=
áá 
$num
áá  !
)
áá! "
throw
àà 
new
àà #
ArgumentNullException
àà /
(
àà/ 0
$"
àà0 2
$str
àà2 D
{
ààD E
Technologyid
ààE Q
}
ààQ R
"
ààR S
)
ààS T
;
ààT U
try
ââ 
{
ää 
var
ãã "
gettechnologydetails
ãã (
=
ãã) *
profileData
ãã+ 6
.
ãã6 7
GetTechnologyById
ãã7 H
(
ããH I
Technologyid
ããI U
)
ããU V
;
ããV W
return
åå 
new
åå 
{
çç 
technologyname
éé "
=
éé# $"
gettechnologydetails
éé% 9
.
éé9 :
TechnologyName
éé: H
}
èè 
;
èè 
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
	exception
ëë &
)
ëë& '
{
íí 
_logger
ìì 
.
ìì 
LogError
ìì  
(
ìì  !
$"
ìì! #
$str
ìì# F
{
ììF G
	exception
ììG P
.
ììP Q
Message
ììQ X
}
ììX Y
$str
ììY [
{
ìì[ \
	exception
ìì\ e
.
ììe f

StackTrace
ììf p
}
ììp q
"
ììq r
)
ììr s
;
ììs t
throw
îî 
	exception
îî 
;
îî  
}
ïï 
}
ññ 	
public
óó 
IEnumerable
óó 
<
óó 

Technology
óó %
>
óó% & 
GetallTechnologies
óó' 9
(
óó9 :
)
óó: ;
{
òò 	
try
ôô 
{
öö 
return
õõ 
from
õõ 
Technologies
õõ (
in
õõ) +
profileData
õõ, 7
.
õõ7 8 
GetallTechnologies
õõ8 J
(
õõJ K
)
õõK L
where
õõM R
Technologies
õõS _
.
õõ_ `
IsActive
õõ` h
==
õõi k
true
õõl p
select
õõq w
Technologiesõõx Ñ
;õõÑ Ö
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
	exception
ùù &
)
ùù& '
{
ûû 
_logger
üü 
.
üü 
LogError
üü  
(
üü  !
$"
üü! #
$str
üü# G
{
üüG H
	exception
üüH Q
.
üüQ R
Message
üüR Y
}
üüY Z
$str
üüZ \
{
üü\ ]
	exception
üü] f
.
üüf g

StackTrace
üüg q
}
üüq r
"
üür s
)
üüs t
;
üüt u
throw
†† 
	exception
†† 
;
††  
}
°° 
}
¢¢ 	
public
££ 
bool
££ 
AddAchievements
££ #
(
££# $
Achievements
££$ 0
achievement
££1 <
)
££< =
{
§§ 	
if
•• 
(
•• 
achievement
•• 
==
•• 
null
•• #
)
••# $
throw
••% *
new
••+ .#
ArgumentNullException
••/ D
(
••D E
$"
••E G
$str
••G h
{
••h i
achievement
••i t
}
••t u
"
••u v
)
••v w
;
••w x
_profileValidate
¶¶ 
.
¶¶ #
AchievementValidation
¶¶ 2
(
¶¶2 3
achievement
¶¶3 >
)
¶¶> ?
;
¶¶? @
try
ßß 
{
®® 
string
©© 
	Imagedate
©©  
=
©©! "
$str
©©# %
;
©©% &
	Imagedate
™™ 
=
™™ 
ImageService
™™ (
.
™™( )
Getbase64String
™™) 8
(
™™8 9
achievement
™™9 D
.
™™D E
base64header
™™E Q
!
™™Q R
)
™™R S
;
™™S T
achievement
´´ 
.
´´ 
base64header
´´ (
=
´´) *
ImageService
´´+ 7
.
´´7 8
Getbase64Header
´´8 G
(
´´G H
achievement
´´H S
.
´´S T
base64header
´´T `
!
´´` a
)
´´a b
;
´´b c
achievement
¨¨ 
.
¨¨ 
AchievementImage
¨¨ ,
=
¨¨- .
System
¨¨/ 5
.
¨¨5 6
Convert
¨¨6 =
.
¨¨= >
FromBase64String
¨¨> N
(
¨¨N O
	Imagedate
¨¨O X
)
¨¨X Y
;
¨¨Y Z
achievement
ØØ 
.
ØØ 
	CreatedOn
ØØ %
=
ØØ& '
DateTime
ØØ( 0
.
ØØ0 1
Now
ØØ1 4
;
ØØ4 5
return
∞∞ 
profileData
∞∞ "
.
∞∞" #
AddAchievements
∞∞# 2
(
∞∞2 3
achievement
∞∞3 >
)
∞∞> ?
?
∞∞@ A
true
∞∞B F
:
∞∞G H
false
∞∞I N
;
∞∞N O
}
±± 
catch
≤≤ 
(
≤≤ 
	Exception
≤≤ 
	exception
≤≤ &
)
≤≤& '
{
≥≥ 
_logger
¥¥ 
.
¥¥ 
LogInformation
¥¥ &
(
¥¥& '
$"
¥¥' )
$str
¥¥) J
{
¥¥J K
	exception
¥¥K T
.
¥¥T U
Message
¥¥U \
}
¥¥\ ]
$str
¥¥] _
{
¥¥_ `
	exception
¥¥` i
.
¥¥i j

StackTrace
¥¥j t
}
¥¥t u
"
¥¥u v
)
¥¥v w
;
¥¥w x
return
µµ 
false
µµ 
;
µµ 
}
∂∂ 
}
ππ 	
public
∫∫ 
IEnumerable
∫∫ 
<
∫∫ 
Achievements
∫∫ '
>
∫∫' ( 
GetallAchievements
∫∫) ;
(
∫∫; <
)
∫∫< =
{
ªª 	
try
ºº 
{
ΩΩ 
return
ææ 
from
ææ 
achievements
ææ (
in
ææ) +
profileData
ææ, 7
.
ææ7 8 
GetallAchievements
ææ8 J
(
ææJ K
)
ææK L
where
ææM R
achievements
ææS _
.
ææ_ `
IsActive
ææ` h
==
ææi k
true
ææl p
select
ææq w
achievementsææx Ñ
;ææÑ Ö
}
øø 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
	exception
¿¿ &
)
¿¿& '
{
¡¡ 
_logger
√√ 
.
√√ 
LogError
√√  
(
√√  !
$"
√√! #
$str
√√# G
{
√√G H
	exception
√√H Q
.
√√Q R
Message
√√R Y
}
√√Y Z
$str
√√Z \
{
√√\ ]
	exception
√√] f
.
√√f g

StackTrace
√√g q
}
√√q r
"
√√r s
)
√√s t
;
√√t u
throw
ƒƒ 
	exception
ƒƒ 
;
ƒƒ  
}
≈≈ 
}
∆∆ 	
public
«« 
IEnumerable
«« 
<
«« 
Object
«« !
>
««! "1
#GetAllAchievementDetailsByProfileId
««# F
(
««F G
int
««G J
	Profileid
««K T
)
««T U
{
»» 	
if
…… 
(
…… 
	Profileid
…… 
<=
…… 
$num
…… 
)
…… 
throw
   
new
   #
ArgumentNullException
   /
(
  / 0
$"
  0 2
$str
  2 D
{
  D E
	Profileid
  E N
}
  N O
"
  O P
)
  P Q
;
  Q R
try
ÀÀ 
{
ÃÃ 
var
ÕÕ )
getachievementsbypersonalid
ÕÕ /
=
ÕÕ0 1
profileData
ÕÕ2 =
.
ÕÕ= > 
GetallAchievements
ÕÕ> P
(
ÕÕP Q
)
ÕÕQ R
.
ÕÕR S
Where
ÕÕS X
(
ÕÕX Y
item
ÕÕY ]
=>
ÕÕ^ `
item
ÕÕa e
.
ÕÕe f
	ProfileId
ÕÕf o
==
ÕÕp r
	Profileid
ÕÕs |
&&
ÕÕ} 
itemÕÕÄ Ñ
.ÕÕÑ Ö
IsActiveÕÕÖ ç
==ÕÕé ê
trueÕÕë ï
)ÕÕï ñ
.ÕÕñ ó
SelectÕÕó ù
(ÕÕù û
itemÕÕû ¢
=>ÕÕ£ •
new
ŒŒ 
{
œœ 
achievementid
–– "
=
––# $
item
––% )
.
––) *
AchievementId
––* 7
,
––7 8
achievementtype
—— $
=
——% &
item
——' +
.
——+ ,
achievementtype
——, ;
!
——; <
.
——< =!
AchievementTypeName
——= P
,
——P Q
achievementimage
““ %
=
““& '
item
““( ,
.
““, -
AchievementImage
““- =
}
‘‘ 
)
‘‘ 
;
‘‘ 
return
‘‘ )
getachievementsbypersonalid
‘‘ 7
;
‘‘7 8
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
	exception
÷÷ &
)
÷÷& '
{
◊◊ 
_logger
ÿÿ 
.
ÿÿ 
LogError
ÿÿ  
(
ÿÿ  !
$"
ÿÿ! #
$str
ÿÿ# X
{
ÿÿX Y
	exception
ÿÿY b
.
ÿÿb c
Message
ÿÿc j
}
ÿÿj k
$str
ÿÿk m
{
ÿÿm n
	exception
ÿÿn w
.
ÿÿw x

StackTraceÿÿx Ç
}ÿÿÇ É
"ÿÿÉ Ñ
)ÿÿÑ Ö
;ÿÿÖ Ü
throw
ŸŸ 
	exception
ŸŸ 
;
ŸŸ  
}
⁄⁄ 
}
€€ 	
public
‹‹ 
bool
‹‹  
DisableAchievement
‹‹ &
(
‹‹& '
int
‹‹' *
achievementId
‹‹+ 8
)
‹‹8 9
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 
achievementId
ﬁﬁ 
<=
ﬁﬁ  
$num
ﬁﬁ! "
)
ﬁﬁ" #
throw
ﬂﬂ 
new
ﬂﬂ #
ArgumentNullException
ﬂﬂ /
(
ﬂﬂ/ 0
$"
ﬂﬂ0 2
$str
ﬂﬂ2 P
{
ﬂﬂP Q
achievementId
ﬂﬂQ ^
}
ﬂﬂ^ _
"
ﬂﬂ_ `
)
ﬂﬂ` a
;
ﬂﬂa b
try
‚‚ 
{
„„ 
return
ÂÂ 
profileData
ÂÂ "
.
ÂÂ" # 
DisableAchievement
ÂÂ# 5
(
ÂÂ5 6
achievementId
ÂÂ6 C
)
ÂÂC D
?
ÂÂE F
true
ÂÂG K
:
ÂÂL M
false
ÂÂN S
;
ÂÂS T
}
ÁÁ 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
	exception
ÈÈ &
)
ÈÈ& '
{
ÍÍ 
_logger
ÎÎ 
.
ÎÎ 
LogInformation
ÎÎ &
(
ÎÎ& '
$"
ÎÎ' )
$str
ÎÎ) M
{
ÎÎM N
	exception
ÎÎN W
.
ÎÎW X
Message
ÎÎX _
}
ÎÎ_ `
$str
ÎÎ` b
{
ÎÎb c
	exception
ÎÎc l
.
ÎÎl m

StackTrace
ÎÎm w
}
ÎÎw x
"
ÎÎx y
)
ÎÎy z
;
ÎÎz {
return
ÏÏ 
false
ÏÏ 
;
ÏÏ 
}
ÌÌ 
}
ÓÓ 	
public
ÔÔ 
IEnumerable
ÔÔ 
<
ÔÔ 
Profile
ÔÔ "
>
ÔÔ" #
GetallProfiles
ÔÔ$ 2
(
ÔÔ2 3
)
ÔÔ3 4
{
 	
try
ÒÒ 
{
ÚÚ 
var
ÛÛ 
result
ÛÛ 
=
ÛÛ 
from
ÛÛ !
profile
ÛÛ" )
in
ÛÛ* ,
profileData
ÛÛ- 8
.
ÛÛ8 9
GetallProfiles
ÛÛ9 G
(
ÛÛG H
)
ÛÛH I
where
ÛÛJ O
profile
ÛÛP W
.
ÛÛW X
IsActive
ÛÛX `
==
ÛÛa c
true
ÛÛd h
select
ÛÛi o
profile
ÛÛp w
;
ÛÛw x
return
ÙÙ 
result
ÙÙ 
;
ÙÙ 
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
	exception
¯¯ &
)
¯¯& '
{
˘˘ 
_logger
˚˚ 
.
˚˚ 
LogError
˚˚  
(
˚˚  !
$"
˚˚! #
$str
˚˚# C
{
˚˚C D
	exception
˚˚D M
.
˚˚M N
Message
˚˚N U
}
˚˚U V
$str
˚˚V X
{
˚˚X Y
	exception
˚˚Y b
.
˚˚b c

StackTrace
˚˚c m
}
˚˚m n
"
˚˚n o
)
˚˚o p
;
˚˚p q
throw
¸¸ 
	exception
¸¸ 
;
¸¸  
}
˝˝ 
}
˛˛ 	
public
ˇˇ 
object
ˇˇ )
GetProfileStatusByProfileId
ˇˇ 1
(
ˇˇ1 2
int
ˇˇ2 5
	Profileid
ˇˇ6 ?
)
ˇˇ? @
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
	Profileid
ÅÅ 
<=
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
throw
ÇÇ 
new
ÇÇ #
ArgumentNullException
ÇÇ /
(
ÇÇ/ 0
$"
ÇÇ0 2
$str
ÇÇ2 D
{
ÇÇD E
	Profileid
ÇÇE N
}
ÇÇN O
"
ÇÇO P
)
ÇÇP Q
;
ÇÇQ R
try
ÉÉ 
{
ÑÑ 
return
ÖÖ 
profileData
ÖÖ "
.
ÖÖ" #)
GetProfileStatusByProfileId
ÖÖ# >
(
ÖÖ> ?
	Profileid
ÖÖ? H
)
ÖÖH I
;
ÖÖI J
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
	exception
áá &
)
áá& '
{
àà 
_logger
ää 
.
ää 
LogError
ää  
(
ää  !
$"
ää! #
$str
ää# P
{
ääP Q
	exception
ääQ Z
.
ääZ [
Message
ää[ b
}
ääb c
$str
ääc e
{
ääe f
	exception
ääf o
.
ääo p

StackTrace
ääp z
}
ääz {
"
ää{ |
)
ää| }
;
ää} ~
throw
ãã 
	exception
ãã 
;
ãã  
}
åå 
}
çç 	
public
éé 
object
éé 
GetProfileById
éé $
(
éé$ %
int
éé% (
	Profileid
éé) 2
)
éé2 3
{
èè 	
if
êê 
(
êê 
	Profileid
êê 
<=
êê 
$num
êê 
)
êê 
throw
ëë 
new
ëë #
ArgumentNullException
ëë /
(
ëë/ 0
$"
ëë0 2
$str
ëë2 D
{
ëëD E
	Profileid
ëëE N
}
ëëN O
"
ëëO P
)
ëëP Q
;
ëëQ R
try
íí 
{
ìì 
var
îî 
getviewdetails
îî "
=
îî# $
new
ïï 
{
ññ 
personaldetails
óó #
=
óó$ %+
GetPersonalDetailsByProfileId
óó& C
(
óóC D
	Profileid
óóD M
)
óóM N
,
óóN O
educationdetails
òò $
=
òò% &/
!GetAllEducationDetailsByProfileId
òò' H
(
òòH I
	Profileid
òòI R
)
òòR S
,
òòS T
projectdetails
ôô "
=
ôô# $-
GetAllProjectDetailsByProfileId
ôô% D
(
ôôD E
	Profileid
ôôE N
)
ôôN O
,
ôôO P
skilldetails
öö  
=
öö! "+
GetAllSkillDetailsByProfileId
öö# @
(
öö@ A
	Profileid
ööA J
)
ööJ K
,
ööK L 
achievementdetails
õõ &
=
õõ' (1
#GetAllAchievementDetailsByProfileId
õõ) L
(
õõL M
	Profileid
õõM V
)
õõV W
,
õõW X
profilestatus
úú !
=
úú" #)
GetProfileStatusByProfileId
úú$ ?
(
úú? @
	Profileid
úú@ I
)
úúI J
,
úúJ K
}
üü 
;
üü 
return
°° 
getviewdetails
°° %
;
°°% &
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
	exception
££ &
)
££& '
{
§§ 
_logger
•• 
.
•• 
LogError
••  
(
••  !
$"
••! #
$str
••# C
{
••C D
	exception
••D M
.
••M N
Message
••N U
}
••U V
$str
••V X
{
••X Y
	exception
••Y b
.
••b c

StackTrace
••c m
}
••m n
"
••n o
)
••o p
;
••p q
throw
¶¶ 
	exception
¶¶ 
;
¶¶  
}
ßß 
}
®® 	
public
©© 
object
©©  
GetSpecificProfile
©© (
(
©©( )
)
©©) *
{
™™ 	
try
¨¨ 
{
≠≠ 
var
ÆÆ 

getprofile
ÆÆ 
=
ÆÆ  
profileData
ÆÆ! ,
.
ÆÆ, -
GetallProfiles
ÆÆ- ;
(
ÆÆ; <
)
ÆÆ< =
.
ÆÆ= >
Select
ÆÆ> D
(
ÆÆD E
item
ÆÆE I
=>
ÆÆJ L
new
ØØ 
{
∞∞ 
Status
±± 
=
±± 
item
±± !
.
±±! "
profilestatus
±±" /
!
±±/ 0
.
±±0 1
ProfileStatusName
±±1 B
,
±±B C
Name
≤≤ 
=
≤≤ 
item
≤≤ 
.
≤≤  
personalDetails
≤≤  /
!
≤≤/ 0
.
≤≤0 1
users
≤≤1 6
!
≤≤6 7
.
≤≤7 8
Name
≤≤8 <
,
≤≤< =
Designation
≥≥ 
=
≥≥  !
item
≥≥" &
.
≥≥& '
personalDetails
≥≥' 6
.
≥≥6 7
users
≥≥7 <
.
≥≥< =
designation
≥≥= H
!
≥≥H I
.
≥≥I J
DesignationName
≥≥J Y
,
≥≥Y Z
ReportingPerson
¥¥ #
=
¥¥$ %
item
¥¥& *
.
¥¥* +
personalDetails
¥¥+ :
.
¥¥: ;
users
¥¥; @
.
¥¥@ A%
ReportingPersonUsername
¥¥A X
,
¥¥X Y
}
∏∏ 
)
∏∏ 
;
∏∏ 
return
∏∏ 

getprofile
∏∏ %
;
∏∏% &
}
∫∫ 
catch
ªª 
(
ªª 
	Exception
ªª 
	exception
ªª &
)
ªª& '
{
ºº 
_logger
ΩΩ 
.
ΩΩ 
LogError
ΩΩ  
(
ΩΩ  !
$"
ΩΩ! #
$str
ΩΩ# G
{
ΩΩG H
	exception
ΩΩH Q
.
ΩΩQ R
Message
ΩΩR Y
}
ΩΩY Z
$str
ΩΩZ \
{
ΩΩ\ ]
	exception
ΩΩ] f
.
ΩΩf g

StackTrace
ΩΩg q
}
ΩΩq r
"
ΩΩr s
)
ΩΩs t
;
ΩΩt u
throw
ææ 
	exception
ææ 
;
ææ  
}
øø 
}
¿¿ 	
public
¡¡ 
object
¡¡ "
GetProfileIdByUserId
¡¡ *
(
¡¡* +
int
¡¡+ .
Userid
¡¡/ 5
)
¡¡5 6
{
¬¬ 	
if
√√ 
(
√√ 
Userid
√√ 
<=
√√ 
$num
√√ 
)
√√ 
throw
ƒƒ 
new
ƒƒ #
ArgumentNullException
ƒƒ /
(
ƒƒ/ 0
$"
ƒƒ0 2
$str
ƒƒ2 D
{
ƒƒD E
Userid
ƒƒE K
}
ƒƒK L
"
ƒƒL M
)
ƒƒM N
;
ƒƒN O
try
≈≈ 
{
∆∆ 
var
«« 

getprofile
«« 
=
««  
profileData
««! ,
.
««, -"
GetProfileIdByUserId
««- A
(
««A B
Userid
««B H
)
««H I
;
««I J
if
»» 
(
»» 

getprofile
»» 
==
»» 
null
»» #
)
»»# $
{
»»$ %
return
…… 
new
…… 
{
   
	profileId
ÀÀ !
=
ÀÀ" #
$num
ÀÀ$ %
}
ÃÃ 
;
ÃÃ 
}
ÕÕ 
if
ŒŒ 
(
ŒŒ 

getprofile
ŒŒ 
.
ŒŒ 
IsActive
ŒŒ '
)
ŒŒ' (
{
œœ 
return
–– 
new
–– 
{
—— 
profilestatus
““ %
=
““& '

getprofile
““( 2
.
““2 3
profilestatus
““3 @
!
““@ A
.
““A B
ProfileStatusName
““B S
,
““S T
	profileId
”” !
=
””" #

getprofile
””$ .
.
””. /
	ProfileId
””/ 8
}
‘‘ 
;
‘‘ 
}
’’ 
return
÷÷ 

getprofile
÷÷ !
;
÷÷! "
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
	exception
ÿÿ &
)
ÿÿ& '
{
ŸŸ 
_logger
⁄⁄ 
.
⁄⁄ 
LogError
⁄⁄  
(
⁄⁄  !
$"
⁄⁄! #
$str
⁄⁄# I
{
⁄⁄I J
	exception
⁄⁄J S
.
⁄⁄S T
Message
⁄⁄T [
}
⁄⁄[ \
$str
⁄⁄\ ^
{
⁄⁄^ _
	exception
⁄⁄_ h
.
⁄⁄h i

StackTrace
⁄⁄i s
}
⁄⁄s t
"
⁄⁄t u
)
⁄⁄u v
;
⁄⁄v w
throw
€€ 
	exception
€€ 
;
€€  
}
‹‹ 
}
ﬁﬁ 	
public
ﬂﬂ 
object
ﬂﬂ 
GetProfileCount
ﬂﬂ %
(
ﬂﬂ% &
int
ﬂﬂ& ) 
currentdesignation
ﬂﬂ* <
)
ﬂﬂ< =
{
‡‡ 	
try
·· 
{
‚‚ 
var
„„ 
result
„„ 
=
„„ 
profileData
„„ (
.
„„( )
GetProfileCount
„„) 8
(
„„8 9 
currentdesignation
„„9 K
)
„„K L
;
„„M N
return
‰‰ 
result
‰‰ 
;
‰‰ 
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
	exception
ÊÊ &
)
ÊÊ& '
{
ÁÁ 
_logger
ËË 
.
ËË 
LogError
ËË  
(
ËË  !
$"
ËË! #
$str
ËË# D
{
ËËD E
	exception
ËËE N
.
ËËN O
Message
ËËO V
}
ËËV W
$str
ËËW Y
{
ËËY Z
	exception
ËËZ c
.
ËËc d

StackTrace
ËËd n
}
ËËn o
"
ËËo p
)
ËËp q
;
ËËq r
throw
ÍÍ 
	exception
ÍÍ 
;
ÍÍ  
}
ÎÎ 
}
ÌÌ 	
public
ÔÔ 
object
ÔÔ  
GetFilteredProfile
ÔÔ (
(
ÔÔ( )
string
ÔÔ) /
userName
ÔÔ0 8
,
ÔÔ8 9
int
ÔÔ: =
designationId
ÔÔ> K
,
ÔÔK L
int
ÔÔM P
domainID
ÔÔQ Y
,
ÔÔY Z
int
ÔÔ[ ^
technologyId
ÔÔ_ k
,
ÔÔk l
int
ÔÔm p
	collegeId
ÔÔq z
,
ÔÔz {
int
ÔÔ| 
profileStatusIdÔÔÄ è
,ÔÔè ê
intÔÔê ì"
currentdesignationÔÔî ¶
)ÔÔ¶ ß
{
 	
try
ÚÚ 
{
ÛÛ 
return
ıı 
profileData
ıı "
.
ıı" # 
GetFilteredProfile
ıı# 5
(
ıı5 6
userName
ıı6 >
,
ıı> ?
designationId
ıı? L
,
ııL M
domainID
ııN V
,
ııV W
technologyId
ııX d
,
ııd e
	collegeId
ııf o
,
ııo p
profileStatusIdııq Ä
,ııÄ Å"
currentdesignationııÅ ì
)ııì î
.
ˆˆ 
Select
ˆˆ 
(
ˆˆ 
user
ˆˆ 
=>
ˆˆ 
new
ˆˆ  #
{
˜˜ 
	profileId
¯¯ 
=
¯¯ 
user
¯¯  $
.
¯¯$ %
profile
¯¯% ,
!
¯¯, -
.
¯¯- .
	ProfileId
¯¯. 7
,
¯¯7 8
profileStatus
˘˘ !
=
˘˘" #
user
˘˘$ (
.
˘˘( )
profile
˘˘) 0
.
˘˘0 1
profilestatus
˘˘1 >
!
˘˘> ?
.
˘˘? @
ProfileStatusName
˘˘@ Q
,
˘˘Q R
name
˙˙ 
=
˙˙ 
user
˙˙ 
.
˙˙  
Name
˙˙  $
,
˙˙$ %
designation
˚˚ 
=
˚˚  !
user
˚˚" &
.
˚˚& '
designation
˚˚' 2
!
˚˚2 3
.
˚˚3 4
DesignationName
˚˚4 C
,
˚˚C D
userId
¸¸ 
=
¸¸ 
user
¸¸ 
.
¸¸  
UserId
¸¸  &
,
¸¸& '
repotingPerson
˝˝ "
=
˝˝# $
user
˝˝% )
.
˝˝) *%
ReportingPersonUsername
˝˝* A
,
˝˝A B
image
˛˛ 
=
˛˛ 
user
˛˛  
.
˛˛  !
personalDetails
˛˛! 0
!=
˛˛1 3
null
˛˛4 8
?
˛˛9 :
user
˛˛; ?
.
˛˛? @
personalDetails
˛˛@ O
.
˛˛O P
Image
˛˛P U
:
˛˛V W
null
˛˛X \
}
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
	exception
ÅÅ &
)
ÅÅ& '
{
ÇÇ 
_logger
ÉÉ 
.
ÉÉ 
LogError
ÉÉ  
(
ÉÉ  !
$"
ÉÉ! #
$str
ÉÉ# I
{
ÉÉI J
	exception
ÉÉJ S
.
ÉÉS T
Message
ÉÉT [
}
ÉÉ[ \
$str
ÉÉ\ ^
{
ÉÉ^ _
	exception
ÉÉ_ h
.
ÉÉh i

StackTrace
ÉÉi s
}
ÉÉs t
"
ÉÉt u
)
ÉÉu v
;
ÉÉv w
throw
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
public
áá 
bool
áá #
AcceptOrRejectProfile
áá )
(
áá) *
int
áá* -
	profileId
áá. 7
,
áá7 8
int
áá9 <
response
áá= E
)
ááE F
{
àà 	
if
ââ 
(
ââ 
	profileId
ââ 
<=
ââ 
$num
ââ 
)
ââ 
throw
ää 
new
ää !
ValidationException
ää -
(
ää- .
$"
ää. 0
$str
ää0 M
"
ääM N
)
ääN O
;
ääO P
try
åå 
{
çç 
return
éé 
profileData
éé "
.
éé" ##
AcceptOrRejectProfile
éé# 8
(
éé8 9
	profileId
éé9 B
,
ééB C
response
ééD L
)
ééL M
?
ééN O
true
ééP T
:
ééU V
false
ééW \
;
éé\ ]
}
èè 
catch
êê 
(
êê !
ValidationException
êê &
	exception
êê' 0
)
êê0 1
{
ëë 
_logger
íí 
.
íí 
LogError
íí  
(
íí  !
$"
íí! #
$str
íí# J
{
ííJ K
	exception
ííK T
.
ííT U
Message
ííU \
}
íí\ ]
$str
íí] _
{
íí_ `
	exception
íí` i
.
ííi j

StackTrace
ííj t
}
íít u
"
ííu v
)
íív w
;
ííw x
throw
ìì 
;
ìì 
}
îî 
catch
ïï 
(
ïï 
	Exception
ïï 
	exception
ïï &
)
ïï& '
{
ññ 
_logger
óó 
.
óó 
LogError
óó  
(
óó  !
$"
óó! #
$str
óó# J
{
óóJ K
	exception
óóK T
.
óóT U
Message
óóU \
}
óó\ ]
$str
óó] _
{
óó_ `
	exception
óó` i
.
óói j

StackTrace
óój t
}
óót u
"
óóu v
)
óóv w
;
óów x
throw
òò 
;
òò 
}
ôô 
}
öö 	
public
õõ 
bool
õõ !
updateProfileStatus
õõ '
(
õõ' (
Profile
õõ( /
profile
õõ0 7
)
õõ7 8
{
úú 	
if
ùù 
(
ùù 
profile
ùù 
==
ùù 
null
ùù 
)
ùù  
throw
ûû 
new
ûû !
ValidationException
ûû -
(
ûû- .
$str
ûû. D
)
ûûD E
;
ûûE F
try
üü 
{
†† 
Profile
°° 
result
°° 
=
°°  
profileData
°°! ,
.
°°, -

GetProfile
°°- 7
(
°°7 8
profile
°°8 ?
.
°°? @
	ProfileId
°°@ I
)
°°I J
;
°°J K
if
¢¢ 
(
¢¢ 
profile
¢¢ 
.
¢¢ 
UserId
¢¢ "
!=
¢¢# %
result
¢¢& ,
.
¢¢, -
UserId
¢¢- 3
)
¢¢3 4
throw
££ 
new
££ !
ValidationException
££ 1
(
££1 2
$str
££2 F
)
££F G
;
££G H
result
•• 
.
•• 
ProfileStatusId
•• &
=
••' (
$num
••) *
;
••* +
result
¶¶ 
.
¶¶ 
	UpdatedOn
¶¶  
=
¶¶! "
DateTime
¶¶# +
.
¶¶+ ,
Now
¶¶, /
;
¶¶/ 0
return
®® 
profileData
®® "
.
®®" #!
updateProfileStatus
®®# 6
(
®®6 7
result
®®7 =
)
®®= >
;
®®> ?
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
	exception
™™ &
)
™™& '
{
´´ 
_logger
¨¨ 
.
¨¨ 
LogError
¨¨  
(
¨¨  !
$"
¨¨! #
$str
¨¨# H
{
¨¨H I
	exception
¨¨I R
.
¨¨R S
Message
¨¨S Z
}
¨¨Z [
$str
¨¨[ ]
{
¨¨] ^
	exception
¨¨^ g
.
¨¨g h

StackTrace
¨¨h r
}
¨¨r s
"
¨¨s t
)
¨¨t u
;
¨¨u v
throw
≠≠ 
;
≠≠ 
}
ÆÆ 
}
ØØ 	
}
∞∞ 
}±± é
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\ProfileStatusService.cs
	namespace 	
PMS_API
 
{ 
public 

class !
ProfileStatusServices &
:' ("
IProfileStatusServices) ?
{ 
private 
readonly )
IProfileStatusDataAccessLayer 6)
_ProfileStatusDataAccessLayer7 T
=U V$
ProfileStatusDataFactoryW o
.o p2
%GetProfileStatusDataAccessLayerObject	p ï
(
ï ñ
)
ñ ó
;
ó ò
private 
readonly 
ILogger  
<  !!
ProfileStatusServices! 6
>6 7
_logger7 >
=? @
defaultA H
!H I
;I J
public		 
IEnumerable		 
<		 
ProfileStatus		 (
>		( )
ViewProfileStatuss		* <
(		< =
)		= >
{

 	
try 
{ 
return 
from 
profileStatus )
in* ,)
_ProfileStatusDataAccessLayer- J
.J K
GetProfileStatussK \
(\ ]
)] ^
where_ d
profileStatuse r
.r s
IsActives {
==| ~
true	 É
select
Ñ ä
profileStatus
ã ò
;
ò ô
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} ·
WC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\TechnologyServices.cs
	namespace 	
PMS_API
 
{ 
public 

class 
TechnologyServices #
:$ %
ITechnologyServices& 9
{ 
private 
readonly &
ITechnologyDataAccessLayer 3&
_TechnologyDataAccessLayer4 N
=O P!
TechnologyDataFactoryQ f
.f g/
"GetTechnologyDataAccessLayerObject	g â
(
â ä
)
ä ã
;
ã å
private 
readonly 
ILogger  
<  !
TechnologyServices! 3
>3 4
_logger4 ;
=< =
default> E
!E F
;F G
public		 
IEnumerable		 
<		 

Technology		 %
>		% &
ViewTechnologies		' 7
(		7 8
)		8 9
{

 	
try 
{ 
return 
from 

technology &
in' )&
_TechnologyDataAccessLayer* D
.D E
GetTechnologiesE T
(T U
)U V
whereW \

technology] g
.g h
IsActiveh p
==q s
truet x
selecty 

technology
Ä ä
;
ä ã
} 
catch 
( 
	Exception 
ex 
)  
{ 
_logger 
. 
LogInformation &
(& '
$"' )
{) *
ex* ,
., -
Message- 4
}4 5
$str5 8
{8 9
ex9 ;
.; <

StackTrace< F
}F G
"G H
)H I
;I J
throw 
; 
} 
} 	
} 
} “•
QC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Services\UserServices.cs
	namespace 	
PMS_API
 
{ 
public		 

class		 
UserServices		 
:		 
IUserServices		  -
{

 
private 
readonly 
UserData "
userData# +
;+ ,
private 
readonly 
ILogger  
<  !
UserServices! -
>- .
_logger/ 6
;6 7
public 
UserServices 
( 
ILogger #
<# $
UserServices$ 0
>0 1
logger2 8
)8 9
{ 	
_logger 
= 
logger 
; 
userData 
= 
UserDataFactory &
.& '
GetUserObject' 4
(4 5
logger5 ;
); <
;< =
} 	
private 
readonly 
UserValidation '
_validation( 3
=4 5
UserDataFactory6 E
.E F
GetValidationObjectF Y
(Y Z
)Z [
;[ \
public 
object 
GetallUsers !
(! "
int" %
profilestatusId& 5
,5 6
int7 :
designationId; H
)H I
{ 	
try 
{ 
return 
( 
from 
user !
in" $
userData% -
.- .
GetallForCard. ;
(; <
profilestatusId< K
,K L
designationIdM Z
)Z [
where\ a
userb f
.f g
IsActiveg o
==p r
trues w
selectx ~
user	 É
)
É Ñ
.
Ñ Ö
Select
Ö ã
(
ã å
user 
=> 
new 
{ 
UserId 
=  
user! %
.% &
UserId& ,
,, -
Name 
= 
user #
.# $
Name$ (
,( )
UserDesignation '
=( )
user* .
.. /
designation/ :
!: ;
.; <
DesignationName< K
,K L
ReportingPerson '
=( )
user* .
.. /#
ReportingPersonUsername/ F
,F G
UserProfileStatus   )
=  * +
user  , 0
.  0 1
profile  1 8
!  8 9
.  9 :
profilestatus  : G
!  G H
.  H I
ProfileStatusName  I Z
,  Z [
UserProfileImage!! (
=!!) *
user!!+ /
.!!/ 0
personalDetails!!0 ?
!=!!@ B
null!!C G
?!!H I
user!!J N
.!!N O
personalDetails!!O ^
!!!^ _
.!!_ `
Image!!` e
:!!f g
null!!h l
,!!l m
UserProfileId"" %
=""& '
user""( ,
."", -
profile""- 4
.""4 5
	ProfileId""5 >
}## 
)$$ 
;$$ 
}%% 
catch&& 
(&& 
	Exception&& 
	exception&& &
)&&& '
{'' 
_logger(( 
.(( 
LogError((  
(((  !
$"((! #
$str((# >
{((> ?
	exception((? H
.((H I
Message((I P
}((P Q
$str((Q S
{((S T
	exception((T ]
.((] ^

StackTrace((^ h
}((h i
"((i j
)((j k
;((k l
throw)) 
;)) 
}** 
}++ 	
public,, 
Object,, "
GetSpecificUserDetails,, ,
(,,, -
),,- .
{-- 	
try.. 
{// 
return00 
(00 
from00 
user00 !
in00" $
userData00% -
.00- .
GetallUsers00. 9
(009 :
)00: ;
where00< A
user00B F
.00F G
IsActive00G O
==00O Q
true00R V
select00W ]
user00^ b
)00b c
.00c d
ToList00d j
(00j k
)00k l
.11 
Select11 
(11 
var11 
=>11 
new11 "
{22 
Name33 
=33 
var33 
.33 
Name33 #
,33# $
UserId44 
=44 
var44  
.44  !
UserId44! '
,44' (
Designation55 
=55  !
var55" %
.55% &
designation55& 1
!551 2
.552 3
DesignationName553 B
,55B C
ReportingPerson66 #
=66$ %
var66& )
.66) *#
ReportingPersonUsername66* A
}77 
)88 
;88 
}99 
catch:: 
(:: 
	Exception:: 
	exception:: &
)::& '
{;; 
_logger<< 
.<< 
LogInformation<< &
(<<& '
$"<<' )
$str<<) S
{<<S T
	exception<<T ]
.<<] ^
Message<<^ e
}<<e f
$str<<f i
{<<i j
	exception<<j s
.<<s t

StackTrace<<t ~
}<<~ 
"	<< Ä
)
<<Ä Å
;
<<Å Ç
throw== 
;== 
}>> 
}?? 	
public@@ 
object@@ 
GetUser@@ 
(@@ 
int@@ !
id@@" $
)@@$ %
{AA 	
ifBB 
(BB 
idBB 
<=BB 
$numBB 
)BB 
throwCC 
newCC !
ArgumentNullExceptionCC /
(CC/ 0
$"CC0 2
$strCC2 D
{CCD E
idCCE G
}CCG H
"CCH I
)CCI J
;CCJ K
tryDD 
{EE 
varFF 
getuserFF 
=FF 
userDataFF &
.FF& '
GetUserFF' .
(FF. /
idFF/ 1
)FF1 2
;FF2 3
ifGG 
(GG 
getuserGG 
.GG 
IsActiveGG $
==GG% '
trueGG( ,
)GG, -
{HH 
returnII 
newII 
{JJ 
useridKK 
=KK  
getuserKK! (
.KK( )
UserIdKK) /
,KK/ 0
nameLL 
=LL 
getuserLL &
.LL& '
NameLL' +
,LL+ ,
emailMM 
=MM 
getuserMM  '
.MM' (
EmailMM( -
,MM- .
usernameNN  
=NN! "
getuserNN# *
.NN* +
UserNameNN+ 3
,NN3 4
passwordOO  
=OO! "
getuserOO# *
.OO* +
PasswordOO+ 3
,OO3 4
genderIdPP  
=PP! "
getuserPP# *
.PP* +
GenderIdPP+ 3
,PP3 4
genderQQ 
=QQ  
getuserQQ! (
.QQ( )
genderQQ) /
!QQ/ 0
.QQ0 1

GenderNameQQ1 ;
,QQ; <
CountryCodeIdRR %
=RR& '
getuserRR( /
.RR/ 0
CountryCodeIdRR0 =
,RR= >
countryCodeSS #
=SS$ %
getuserSS& -
.SS- .
countrycodeSS. 9
!SS9 :
.SS: ;
CountryCodeNameSS; J
,SSJ K
mobilenumberTT $
=TT% &
getuserTT' .
.TT. /
MobileNumberTT/ ;
,TT; <
designationIdUU %
=UU& '
getuserUU( /
.UU/ 0
DesignationIdUU0 =
,UU= >
designationVV #
=VV$ %
getuserVV& -
.VV- .
designationVV. 9
!VV9 :
.VV: ;
DesignationNameVV; J
,VVJ K#
reportingpersonUsernameWW /
=WW0 1
getuserWW2 9
.WW9 :#
ReportingPersonUsernameWW: Q
,WWQ R
organisationIdXX &
=XX' (
getuserXX) 0
.XX0 1
OrganisationIdXX1 ?
,XX? @
organisationYY $
=YY% &
getuserYY' .
.YY. /
organisationYY/ ;
!YY; <
.YY< =
OrganisationNameYY= M
}[[ 
;[[ 
}\\ 
else]] 
{^^ 
throw__ 
new__ 
ValidationException__ 1
(__1 2
$str__2 B
)__B C
;__C D
}`` 
}aa 
catchbb 
(bb 
	Exceptionbb 
	exceptionbb &
)bb& '
{cc 
_loggerdd 
.dd 
LogErrordd  
(dd  !
$"dd! #
$strdd# :
{dd: ;
	exceptiondd; D
.ddD E
MessageddE L
}ddL M
$strddM O
{ddO P
	exceptionddP Y
.ddY Z

StackTraceddZ d
}ddd e
"dde f
)ddf g
;ddg h
throwee 
;ee 
}ff 
}gg 	
publichh 
boolhh 
AddUserhh 
(hh 
Userhh  
itemhh! %
,hh% &
inthh' *
userIdhh+ 1
)hh1 2
{jj 	
ifkk 
(kk 
itemkk 
==kk 
nullkk 
)kk 
throwll 
newll !
ArgumentNullExceptionll /
(ll/ 0
$"ll0 2
$strll2 g
{llg h
itemllh l
}lll m
"llm n
)lln o
;llo p
_validationmm 
.mm 
userValidatemm $
(mm$ %
itemmm% )
)mm) *
;mm* +
trynn 
{oo 
itempp 
.pp 
	CreatedBypp 
=pp  
userIdpp! '
;pp' (
itemqq 
.qq 
	CreatedOnqq 
=qq  
DateTimeqq! )
.qq) *
Nowqq* -
;qq- .
itemrr 
.rr 
IsActiverr 
=rr 
truerr  $
;rr$ %
returnss 
userDatass 
.ss  
AddUserss  '
(ss' (
itemss( ,
)ss, -
?ss. /
truess0 4
:ss5 6
falsess7 <
;ss< =
}uu 
catchvv 
(vv 
ValidationExceptionvv &
	exceptionvv' 0
)vv0 1
{ww 
_loggerxx 
.xx 
LogInformationxx &
(xx& '
$"xx' )
$strxx) @
{xx@ A
	exceptionxxA J
.xxJ K
MessagexxK R
}xxR S
$strxxS U
{xxU V
	exceptionxxV _
.xx_ `

StackTracexx` j
}xxj k
"xxk l
)xxl m
;xxm n
throwyy 
;yy 
}zz 
catch{{ 
({{ !
ArgumentNullException{{ (
	exception{{) 2
){{2 3
{|| 
_logger}} 
.}} 
LogInformation}} &
(}}& '
$"}}' )
$str}}) @
{}}@ A
	exception}}A J
.}}J K
Message}}K R
}}}R S
$str}}S U
{}}U V
	exception}}V _
.}}_ `

StackTrace}}` j
}}}j k
"}}k l
)}}l m
;}}m n
throw~~ 
;~~ 
} 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
	exception
ÄÄ &
)
ÄÄ& '
{
ÅÅ 
_logger
ÇÇ 
.
ÇÇ 
LogInformation
ÇÇ &
(
ÇÇ& '
$"
ÇÇ' )
$str
ÇÇ) @
{
ÇÇ@ A
	exception
ÇÇA J
.
ÇÇJ K
Message
ÇÇK R
}
ÇÇR S
$str
ÇÇS U
{
ÇÇU V
	exception
ÇÇV _
.
ÇÇ_ `

StackTrace
ÇÇ` j
}
ÇÇj k
"
ÇÇk l
)
ÇÇl m
;
ÇÇm n
return
ÉÉ 
false
ÉÉ 
;
ÉÉ 
}
ÖÖ 
}
ÜÜ 	
public
áá 
bool
áá 
Disable
áá 
(
áá 
int
áá 
id
áá  "
)
áá" #
{
àà 	
if
ââ 
(
ââ 
id
ââ 
<=
ââ 
$num
ââ 
)
ââ 
throw
ää 
new
ää #
ArgumentNullException
ää /
(
ää/ 0
$"
ää0 2
$str
ää2 D
{
ääD E
id
ääE G
}
ääG H
"
ääH I
)
ääI J
;
ääJ K
try
çç 
{
éé 
return
êê 
userData
êê 
.
êê  
Disable
êê  '
(
êê' (
id
êê( *
)
êê* +
?
êê, -
true
êê. 2
:
êê3 4
false
êê5 :
;
êê: ;
}
íí 
catch
îî 
(
îî 
	Exception
îî 
	exception
îî &
)
îî& '
{
ïï 
_logger
ññ 
.
ññ 
LogInformation
ññ &
(
ññ& '
$"
ññ' )
$str
ññ) @
{
ññ@ A
	exception
ññA J
.
ññJ K
Message
ññK R
}
ññR S
$str
ññS U
{
ññU V
	exception
ññV _
.
ññ_ `

StackTrace
ññ` j
}
ññj k
"
ññk l
)
ññl m
;
ññm n
return
óó 
false
óó 
;
óó 
}
òò 
}
ôô 	
public
öö 
bool
öö 

UpdateUser
öö 
(
öö 
User
öö #
item
öö$ (
)
öö( )
{
õõ 	
if
ùù 
(
ùù 
item
ùù 
==
ùù 
null
ùù 
)
ùù 
throw
ùù #
new
ùù$ '#
ArgumentNullException
ùù( =
(
ùù= >
$"
ùù> @
$str
ùù@ r
{
ùùr s
item
ùùs w
}
ùùw x
"
ùùx y
)
ùùy z
;
ùùz {
_validation
ûû 
.
ûû 
userValidate
ûû $
(
ûû$ %
item
ûû% )
)
ûû) *
;
ûû* +
try
üü 
{
†† 
item
¢¢ 
.
¢¢ 
	UpdatedBy
¢¢ 
=
¢¢  
item
¢¢! %
.
¢¢% &
UserId
¢¢& ,
;
¢¢, -
item
££ 
.
££ 
	UpdatedOn
££ 
=
££  
DateTime
££! )
.
££) *
Now
££* -
;
££- .
return
§§ 
userData
§§ 
.
§§  

UpdateUser
§§  *
(
§§* +
item
§§+ /
)
§§/ 0
?
§§1 2
true
§§3 7
:
§§8 9
false
§§: ?
;
§§? @
}
¶¶ 
catch
®® 
(
®® 
	Exception
®® 
	exception
®® &
)
®®& '
{
©© 
_logger
™™ 
.
™™ 
LogInformation
™™ &
(
™™& '
$"
™™' )
$str
™™) C
{
™™C D
	exception
™™D M
.
™™M N
Message
™™N U
}
™™U V
$str
™™V X
{
™™X Y
	exception
™™Y b
.
™™b c

StackTrace
™™c m
}
™™m n
"
™™n o
)
™™o p
;
™™p q
return
´´ 
false
´´ 
;
´´ 
}
≠≠ 
}
ÆÆ 	
public
ØØ 
bool
ØØ 
ChangePassword
ØØ "
(
ØØ" #
string
ØØ# )
OldPassword
ØØ* 5
,
ØØ5 6
string
ØØ7 =
NewPassword
ØØ> I
,
ØØI J
string
ØØK Q
ConfirmPassword
ØØR a
,
ØØa b
int
ØØc f
currentUser
ØØg r
)
ØØr s
{
±± 	 
PasswordValidation
≥≥ 
.
≥≥ 
IsValidPassword
≥≥ .
(
≥≥. /
NewPassword
≥≥/ :
,
≥≥: ;
ConfirmPassword
≥≥< K
)
≥≥K L
;
≥≥L M
try
∏∏ 
{
ππ 
if
∫∫ 
(
∫∫ 
NewPassword
∫∫ 
!=
∫∫  "
ConfirmPassword
∫∫# 2
)
∫∫2 3
throw
ªª 
new
ªª !
ValidationException
ªª 1
(
ªª1 2
$"
ªª2 4
$str
ªª4 n
{
ªªn o
ConfirmPassword
ªªo ~
}
ªª~ 
"ªª Ä
)ªªÄ Å
;ªªÅ Ç
else
ºº 
{
ΩΩ 
return
ææ 
userData
ææ #
.
ææ# $
EditPassword
ææ$ 0
(
ææ0 1
OldPassword
ææ1 <
,
ææ< =
NewPassword
ææ> I
,
ææI J
ConfirmPassword
ææK Z
,
ææZ [
currentUser
ææ\ g
)
ææg h
?
ææi j
true
ææk o
:
ææp q
false
æær w
;
ææw x
}
øø 
}
¡¡ 
catch
√√ 
(
√√ 
ArgumentException
√√ $
	exception
√√% .
)
√√. /
{
≈≈ 
_logger
«« 
.
«« 
LogInformation
«« &
(
««& '
$"
««' )
$str««) á
{««á à
	exception««à ë
.««ë í
Message««í ô
}««ô ö
"««ö õ
)««õ ú
;««ú ù
return
…… 
false
…… 
;
…… 
}
ÀÀ 
catch
ÕÕ 
(
ÕÕ !
ValidationException
ÕÕ &
passwordNotValid
ÕÕ' 7
)
ÕÕ7 8
{
œœ 
_logger
—— 
.
—— 
LogInformation
—— &
(
——& '
$"
——' )
$str——) Ö
{——Ö Ü 
passwordNotValid——Ü ñ
.——ñ ó
Message——ó û
}——û ü
"——ü †
)——† °
;——° ¢
throw
”” 
;
”” 
}
’’ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
	exception
◊◊ &
)
◊◊& '
{
ŸŸ 
_logger
€€ 
.
€€ 
LogInformation
€€ &
(
€€& '
$"
€€' )
$str€€) Ñ
{€€Ñ Ö
	exception€€Ö é
.€€é è
Message€€è ñ
}€€ñ ó
"€€ó ò
)€€ò ô
;€€ô ö
return
›› 
false
›› 
;
›› 
}
ﬂﬂ 
}
·· 	
public
‚‚ 
bool
‚‚ 
Save
‚‚ 
(
‚‚ 
)
‚‚ 
{
„„ 	
return
‰‰ 
userData
‰‰ 
.
‰‰ 
save
‰‰  
(
‰‰  !
)
‰‰! "
;
‰‰" #
}
ÂÂ 	
public
ÁÁ 
object
ÁÁ &
GetAllUsersByDesignation
ÁÁ .
(
ÁÁ. /
int
ÁÁ/ 2
designationId
ÁÁ3 @
)
ÁÁ@ A
{
ËË 	
try
ÈÈ 
{
ÍÍ 
return
ÎÎ 
(
ÎÎ 
from
ÎÎ 
user
ÎÎ !
in
ÎÎ" $
userData
ÎÎ% -
.
ÎÎ- .&
GetAllUsersByDesignation
ÎÎ. F
(
ÎÎF G
designationId
ÎÎG T
)
ÎÎT U
where
ÎÎV [
user
ÎÎ\ `
.
ÎÎ` a
IsActive
ÎÎa i
==
ÎÎj l
true
ÎÎm q
select
ÎÎr x
user
ÎÎy }
)
ÎÎ} ~
.
ÎÎ~ 
SelectÎÎ Ö
(ÎÎÖ Ü
user
ÏÏ 
=>
ÏÏ 
new
ÏÏ 
{
ÌÌ 
UserId
ÓÓ 
=
ÓÓ  
user
ÓÓ! %
.
ÓÓ% &
UserId
ÓÓ& ,
,
ÓÓ, -
Name
ÔÔ 
=
ÔÔ 
user
ÔÔ #
.
ÔÔ# $
Name
ÔÔ$ (
,
ÔÔ( )
UserDesignation
 '
=
( )
user
* .
.
. /
designation
/ :
!
: ;
.
; <
DesignationName
< K
,
K L
ReportingPerson
ÒÒ '
=
ÒÒ( )
user
ÒÒ* .
.
ÒÒ. /%
ReportingPersonUsername
ÒÒ/ F
,
ÒÒF G
UserProfileStatus
ÚÚ )
=
ÚÚ* +
user
ÚÚ, 0
.
ÚÚ0 1
profile
ÚÚ1 8
!
ÚÚ8 9
.
ÚÚ9 :
profilestatus
ÚÚ: G
!
ÚÚG H
.
ÚÚH I
ProfileStatusName
ÚÚI Z
,
ÚÚZ [
UserProfileImage
ÛÛ (
=
ÛÛ) *
user
ÛÛ+ /
.
ÛÛ/ 0
personalDetails
ÛÛ0 ?
!=
ÛÛ@ B
null
ÛÛC G
?
ÛÛH I
user
ÛÛJ N
.
ÛÛN O
personalDetails
ÛÛO ^
!
ÛÛ^ _
.
ÛÛ_ `
Image
ÛÛ` e
:
ÛÛf g
null
ÛÛh l
,
ÛÛl m
UserProfileId
ÙÙ %
=
ÙÙ& '
user
ÙÙ( ,
.
ÙÙ, -
profile
ÙÙ- 4
.
ÙÙ4 5
	ProfileId
ÙÙ5 >
}
ıı 
)
ˆˆ 
;
ˆˆ 
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
	exception
¯¯ &
)
¯¯& '
{
˘˘ 
_logger
˙˙ 
.
˙˙ 
LogError
˙˙  
(
˙˙  !
$"
˙˙! #
$str
˙˙# K
{
˙˙K L
	exception
˙˙L U
.
˙˙U V
Message
˙˙V ]
}
˙˙] ^
$str
˙˙^ `
{
˙˙` a
	exception
˙˙a j
.
˙˙j k

StackTrace
˙˙k u
}
˙˙u v
"
˙˙v w
)
˙˙w x
;
˙˙x y
throw
˚˚ 
;
˚˚ 
}
¸¸ 
}
˝˝ 	
}
˛˛ 
}ˇˇ è	
aC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Utilityfunctions\CollectionExtensions.cs
	namespace 	
PMS_API
 
; 
public 
static 
class  
CollectionExtensions (
{ 
public 

static 

IQueryable 
< 
TSource $
>$ %
WhereIf& -
<- .
TSource. 5
>5 6
(6 7
this 

IQueryable 
< 
TSource 
>  
source! '
,' (
bool 
	condition 
, 

Expression 
< 
Func 
< 
TSource 
,  
bool! %
>% &
>& '
	predicate( 1
)1 2
{		 	
if

 

(

 
	condition

 
)

 
return 
source 
. 
Where 
(  
	predicate  )
)) *
;* +
else 
return 
source 
; 
} 	
} Ÿ	
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Utilityfunctions\HashPassword.cs
	namespace 	
PMS_API
 
. 
API 
. 
UtilityFunctions &
{ 
public 

static 
class 
HashPassword $
{ 
public 
static 
string 
Sha256 #
(# $
this$ (
string) /
input0 5
)5 6
{ 	
using 
var 
sha 
= 
SHA256 "
." #
Create# )
() *
)* +
;+ ,
var 
bytes 
= 
Encoding  
.  !
UTF8! %
.% &
GetBytes& .
(. /
input/ 4
)4 5
;5 6
var 
hash 
= 
sha 
. 
ComputeHash &
(& '
bytes' ,
), -
;- .
return 
Convert 
. 
ToBase64String )
() *
hash* .
). /
;/ 0
} 	
} 
} ˛
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Utilityfunctions\ImageService.cs
	namespace 	
PMS_API
 
{ 
public 
static 
class 
ImageService %
{ 
public 
static 
string 
Getbase64String ,
(, -
string- 3
value4 9
)9 :
{ 	
if 
( 
value 
. 
Contains 
( 
$str %
)% &
)& '
{ 
return		 
value		 
.		 
Replace		 $
(		$ %
$str		% >
,		> ?
$str		@ B
)		B C
;		C D
}

 
else 
if 
( 
value 
. 
Contains #
(# $
$str$ )
)) *
)* +
{ 
return 
value 
. 
Replace $
($ %
$str% =
,= >
$str? A
)A B
;B C
} 
else 
{ 
return 
value 
. 
Replace $
($ %
$str% =
,= >
$str? A
)A B
;B C
} 
} 	
public 
static 
string 
Getbase64Header ,
(, -
string- 3
value4 9
)9 :
{ 	
if 
( 
value 
. 
Contains 
( 
$str %
)% &
)& '
{ 
return 
$str 0
;0 1
} 
else 
if 
( 
value 
. 
Contains #
(# $
$str$ )
)) *
)* +
{ 
return 
$str /
;/ 0
} 
else 
{ 
return   
$str   /
;  / 0
}!! 
}"" 	
}## 
}$$ º
ZC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Validations\PasswordValidation.cs
	namespace 	
PMS_API
 
{ 
public 

static 
class 
PasswordValidation *
{ 
public 
static 
bool 
IsValidPassword *
(* +
string+ 1
NewPassword2 =
,= >
string> D
ConfirmPasswordE T
)T U
{		 	
if 
( 
! 
Regex 
. 
IsMatch 
( 
NewPassword )
,) *
$str+ l
)l m
)m n
throw 
new 
ValidationException -
(- .
$". 0
$str	0 –
{
– —
NewPassword
— ‹
}
‹ ›
"
› ﬁ
)
ﬁ ﬂ
;
ﬂ ‡
if 
( 
! 
Regex 
. 
IsMatch 
( 
ConfirmPassword -
,- .
$str/ p
)p q
)q r
throw 
new 
ValidationException -
(- .
$". 0
$str	0 –
{
– —
ConfirmPassword
— ‡
}
‡ ·
"
· ‚
)
‚ „
;
„ ‰
return 
true 
; 
} 	
} 
} òÇ
YC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Validations\ProfileValidation.cs
	namespace 	
PMS_API
 
{ 
public 

class 
ProfileValidation "
{ 
public		 
bool		 #
PersonalDetailsvalidate		 +
(		+ ,
PersonalDetails		, ;
personalDetails		< K
)		K L
{

 	
if 
( 
string 
. 
IsNullOrEmpty $
($ %
personalDetails% 4
.4 5
	Objective5 >
)> ?
)? @
throw 
new 
ValidationException -
(- .
$". 0
$str0 e
{e f
personalDetailsf u
.u v
	Objectivev 
}	 Ä
$str
Ä Ç
"
Ç É
)
É Ñ
;
Ñ Ö
if 
( 
string 
. 
IsNullOrEmpty $
($ %
personalDetails% 4
.4 5
Nationality5 @
)@ A
)A B
throw 
new 
ValidationException -
(- .
$". 0
$str0 k
{k l
personalDetailsl {
.{ |
Nationality	| á
}
á à
$str
à ä
"
ä ã
)
ã å
;
å ç
else 
if 
( 
! 
Regex 
. 
IsMatch #
(# $
personalDetails$ 3
.3 4
Nationality4 ?
,? @
$strA S
)S T
)T U
throw 
new 
ValidationException -
(- .
$". 0
$str0 j
{j k
personalDetailsk z
.z {
Nationality	{ Ü
}
Ü á
$str
á â
"
â ä
)
ä ã
;
ã å
if 
( 
string 
. 
IsNullOrEmpty $
($ %
(% &
personalDetails& 5
.5 6
DateOfBirth6 A
)A B
.B C
ToStringC K
(K L
)L M
)M N
)N O
throw 
new 
ValidationException -
(- .
$". 0
$str0 k
{k l
personalDetailsl {
.{ |
DateOfBirth	| á
}
á à
$str
à ä
"
ä ã
)
ã å
;
å ç
else 
if 
( 
personalDetails $
.$ %
DateOfBirth% 0
.0 1
Equals1 7
(7 8
$str8 :
): ;
); <
throw 
new 
ValidationException -
(- .
$". 0
$str0 k
{k l
personalDetailsl {
.{ |
DateOfBirth	| á
}
á à
$str
à ä
"
ä ã
)
ã å
;
å ç
else 
if 
( 
personalDetails $
.$ %
DateOfBirth% 0
.0 1
Equals1 7
(7 8
DateTime8 @
.@ A
TodayA F
)F G
||H J
(K L
personalDetailsL [
.[ \
DateOfBirth\ g
>h i
DateTimej r
.r s
Todays x
)x y
)y z
throw 
new 
ValidationException -
(- .
$". 0
$str0 j
{j k
personalDetailsk z
.z {
DateOfBirth	{ Ü
}
Ü á
$str
á â
"
â ä
)
ä ã
;
ã å
else 
if 
( 
! "
DateOfBirthAgeValidate ,
(, -
personalDetails- <
.< =
DateOfBirth= H
)H I
)I J
throw 
new 
ValidationException -
(- .
$". 0
$str0 g
{g h
personalDetailsh w
.w x
DateOfBirth	x É
}
É Ñ
$str
Ñ Ü
"
Ü á
)
á à
;
à â
if"" 
("" 
string"" 
."" 
IsNullOrEmpty"" $
(""$ %
(""% &
personalDetails""& 5
.""5 6
DateOfJoining""6 C
)""C D
.""D E
ToString""E M
(""M N
)""N O
)""O P
)""P Q
throw## 
new## 
ValidationException## -
(##- .
$"##. 0
$str##0 i
{##i j
personalDetails##j y
.##y z
DateOfJoining	##z á
}
##á à
$str
##à ä
"
##ä ã
)
##ã å
;
##å ç
if$$ 
($$ 
personalDetails$$ 
.$$  
DateOfJoining$$  -
>$$. /
DateTime$$0 8
.$$8 9
Today$$9 >
)$$? @
throw%% 
new%% 
ValidationException%% -
(%%- .
$"%%. 0
$str%%0 o
{%%o p
personalDetails%%p 
.	%% Ä
DateOfJoining
%%Ä ç
}
%%ç é
$str
%%é ê
"
%%ê ë
)
%%ë í
;
%%í ì
if&& 
(&& 
personalDetails&& 
.&&  
DateOfJoining&&  -
<=&&. 0
personalDetails&&1 @
.&&@ A
DateOfBirth&&A L
)&&M N
throw'' 
new'' 
ValidationException'' -
(''- .
$"''. 0
$str''0 h
{''h i
personalDetails''i x
.''x y
DateOfJoining	''y Ü
}
''Ü á
$str
''á â
"
''â ä
)
''ä ã
;
''ã å
if** 
(** 
String** 
.** 
IsNullOrEmpty** $
(**$ %
personalDetails**% 4
.**4 5
base64header**5 A
)**A B
)**B C
throw++ 
new++ 
ValidationException++ -
(++- .
$"++. 0
$str++0 n
{++n o
personalDetails++o ~
.++~ 
base64header	++ ã
}
++ã å
$str
++å é
"
++é è
)
++è ê
;
++ê ë
return,, 
true,, 
;,, 
}-- 	
public.. 
bool.. %
Educationdetailvalidation.. -
(..- .
	Education... 7
	education..8 A
)..A B
{// 	
if11 
(11 
string11 
.11 
IsNullOrEmpty11 $
(11$ %
	education11% .
.11. /
Degree11/ 5
)115 6
)116 7
throw22 
new22 
ValidationException22 -
(22- .
$"22. 0
$str220 a
{22a b
	education22b k
.22k l
Degree22l r
}22r s
$str22s u
"22u v
)22v w
;22w x
else44 
if44 
(44 
(44 
!44 
Regex44 
.44 
IsMatch44 $
(44$ %
	education44% .
.44. /
Degree44/ 5
,445 6
$str447 J
)44J K
)44K L
)44L M
throw55 
new55 
ValidationException55 -
(55- .
$"55. 0
$str550 `
{55` a
	education55a j
.55j k
Degree55k q
}55q r
$str55r t
"55t u
)55u v
;55v w
if88 
(88 
string88 
.88 
IsNullOrEmpty88 $
(88$ %
	education88% .
.88. /
Course88/ 5
)885 6
)886 7
throw99 
new99 
ValidationException99 -
(99- .
$"99. 0
$str990 a
{99a b
	education99b k
.99k l
Course99l r
}99r s
$str99s u
"99u v
)99v w
;99w x
else:: 
if:: 
(:: 
!:: 
Regex:: 
.:: 
IsMatch:: #
(::# $
	education::$ -
.::- .
Course::. 4
,::4 5
$str::6 I
)::I J
)::J K
throw;; 
new;; 
ValidationException;; -
(;;- .
$";;. 0
$str	;;0 Ç
{
;;Ç É
	education
;;É å
.
;;å ç
Course
;;ç ì
}
;;ì î
$str
;;î ñ
"
;;ñ ó
)
;;ó ò
;
;;ò ô
if== 
(== 
(== 
	education== 
.== 
	CollegeId== $
.==$ %
Equals==% +
(==+ ,
$num==, -
)==- .
)==. /
)==/ 0
throw>> 
new>> 
ValidationException>> -
(>>- .
$">>. 0
$str>>0 g
{>>g h
	education>>h q
.>>q r
	CollegeId>>r {
}>>{ |
$str>>| ~
">>~ 
)	>> Ä
;
>>Ä Å
ifAA 
(AA 
stringAA 
.AA 
IsNullOrEmptyAA $
(AA$ %
(AA% &
	educationAA& /
.AA/ 0
StartingAA0 8
)AA8 9
.AA9 :
ToStringAA: B
(AAB C
)AAC D
)AAD E
||AAF H
(AAI J
	educationAAJ S
.AAS T
StartingAAT \
)AA\ ]
.AA] ^
EqualsAA^ d
(AAd e
$numAAe f
)AAf g
)AAg h
throwBB 
newBB 
ValidationExceptionBB -
(BB- .
$"BB. 0
$strBB0 n
{BBn o
	educationBBo x
.BBx y
Starting	BBy Å
}
BBÅ Ç
$str
BBÇ Ñ
"
BBÑ Ö
)
BBÖ Ü
;
BBÜ á
ifCC 
(CC 
!CC 
RegexCC 
.CC 
IsMatchCC 
(CC 
	educationCC (
.CC( )
StartingCC) 1
.CC1 2
ToStringCC2 :
(CC: ;
)CC; <
!CC< =
,CC= >
$strCC? K
)CCK L
)CCL M
throwDD 
newDD 
ValidationExceptionDD -
(DD- .
$"DD. 0
$strDD0 J
{DDJ K
	educationDDK T
.DDT U
StartingDDU ]
}DD] ^
$strDD^ `
"DD` a
)DDa b
;DDb c
ifEE 
(EE 
	educationEE 
.EE 
StartingEE "
.EE" #
EqualsEE# )
(EE) *
DateTimeEE* 2
.EE2 3
TodayEE3 8
.EE8 9
YearEE9 =
)EE= >
||EE? A
(EEB C
	educationEEC L
.EEL M
StartingEEM U
>EEV W
(EEX Y
DateTimeEEY a
.EEa b
TodayEEb g
.EEg h
YearEEh l
)EEl m
)EEm n
)EEn o
throwFF 
newFF 
ValidationExceptionFF -
(FF- .
$"FF. 0
$str	FF0 Ö
{
FFÖ Ü
	education
FFÜ è
.
FFè ê
Starting
FFê ò
}
FFò ô
$str
FFô õ
"
FFõ ú
)
FFú ù
;
FFù û
ifII 
(II 
stringII 
.II 
IsNullOrEmptyII $
(II$ %
(II% &
	educationII& /
.II/ 0
EndingII0 6
)II6 7
.II7 8
ToStringII8 @
(II@ A
)IIA B
)IIB C
||IID F
(IIG H
	educationIIH Q
.IIQ R
EndingIIR X
)IIX Y
.IIY Z
EqualsIIZ `
(II` a
$numIIa b
)IIb c
)IIc d
throwJJ 
newJJ 
ValidationExceptionJJ -
(JJ- .
$"JJ. 0
$strJJ0 j
{JJj k
	educationJJk t
.JJt u
EndingJJu {
}JJ{ |
$strJJ| ~
"JJ~ 
)	JJ Ä
;
JJÄ Å
elseKK 
ifKK 
(KK 
	educationKK 
.KK 
EndingKK %
>KK& '
(KK( )
DateTimeKK) 1
.KK1 2
TodayKK2 7
.KK7 8
YearKK8 <
)KK< =
)KK= >
throwLL 
newLL 
ValidationExceptionLL -
(LL- .
$"LL. 0
$strLL0 w
{LLw x
	education	LLx Å
.
LLÅ Ç
Starting
LLÇ ä
}
LLä ã
$str
LLã ç
"
LLç é
)
LLé è
;
LLè ê
elseMM 
ifMM 
(MM 
	educationMM 
.MM 
EndingMM %
<=MM& (
	educationMM) 2
.MM2 3
StartingMM3 ;
)MM; <
throwNN 
newNN 
ValidationExceptionNN -
(NN- .
$"NN. 0
$str	NN0 É
{
NNÉ Ñ
	education
NNÑ ç
.
NNç é
Starting
NNé ñ
}
NNñ ó
$str
NNó ô
"
NNô ö
)
NNö õ
;
NNõ ú
ifQQ 
(QQ 
	educationQQ 
.QQ 

PercentageQQ $
.QQ$ %
EqualsQQ% +
(QQ+ ,
$strQQ, .
)QQ. /
||QQ0 2
	educationQQ3 <
.QQ< =

PercentageQQ= G
.QQG H
EqualsQQH N
(QQN O
$numQQO P
)QQP Q
)QQQ R
throwRR 
newRR 
ValidationExceptionRR -
(RR- .
$"RR. 0
$strRR0 k
{RRk l
	educationRRl u
.RRu v

Percentage	RRv Ä
}
RRÄ Å
$str
RRÅ É
"
RRÉ Ñ
)
RRÑ Ö
;
RRÖ Ü
elseSS 
ifSS 
(SS 
$numSS 
>=SS 
	educationSS #
.SS# $

PercentageSS$ .
||SS/ 1
	educationSS2 ;
.SS; <

PercentageSS< F
>SSG H
$numSSI L
)SSL M
throwTT 
newTT 
ValidationExceptionTT -
(TT- .
$"TT. 0
$strTT0 y
{TTy z
	education	TTz É
.
TTÉ Ñ

Percentage
TTÑ é
}
TTé è
$str
TTè ë
"
TTë í
)
TTí ì
;
TTì î
elseUU 
ifUU 
(UU 
RegexUU 
.UU 
IsMatchUU "
(UU" #
	educationUU# ,
.UU, -

PercentageUU- 7
.UU7 8
ToStringUU8 @
(UU@ A
)UUA B
,UUB C
$strUUD T
)UUT U
)UUU V
throwVV 
newVV 
ValidationExceptionVV -
(VV- .
$strVV. P
)VVP Q
;VVQ R
returnWW 
trueWW 
;WW 
}YY 	
publicZZ 
boolZZ !
SkillDetailValidationZZ )
(ZZ) *
SkillsZZ* 0
skillZZ1 6
)ZZ6 7
{[[ 	
if\\ 
(\\ 
skill\\ 
.\\ 
DomainId\\ 
.\\ 
Equals\\ %
(\\% &
$num\\& '
)\\' (
||\\) +
string\\, 2
.\\2 3
IsNullOrEmpty\\3 @
(\\@ A
(\\A B
skill\\B G
.\\G H
DomainId\\H P
)\\P Q
.\\Q R
ToString\\R Z
(\\Z [
)\\[ \
)\\\ ]
)\\] ^
throw]] 
new]] 
ValidationException]] -
(]]- .
$"]]. 0
$str]]0 a
{]]a b
skill]]b g
.]]g h
DomainId]]h p
}]]p q
$str]]q s
"]]s t
)]]t u
;]]u v
if^^ 
(^^ 
skill^^ 
.^^ 
TechnologyId^^ "
.^^" #
Equals^^# )
(^^) *
$num^^* +
)^^+ ,
||^^- /
string^^0 6
.^^6 7
IsNullOrEmpty^^7 D
(^^D E
(^^E F
skill^^F K
.^^K L
TechnologyId^^L X
)^^X Y
.^^Y Z
ToString^^Z b
(^^b c
)^^c d
)^^d e
)^^e f
throw__ 
new__ 
ValidationException__ -
(__- .
$"__. 0
$str__0 i
{__i j
skill__j o
.__o p
TechnologyId__p |
}__| }
$str__} 
"	__ Ä
)
__Ä Å
;
__Å Ç
return`` 
true`` 
;`` 
}aa 	
publicbb 
boolbb #
ProjectDetailvalidationbb +
(bb+ ,
Projectsbb, 4
projectbb5 <
)bb< =
{cc 	
ifee 
(ee 
stringee 
.ee 
IsNullOrEmptyee $
(ee$ %
projectee% ,
.ee, -
ProjectNameee- 8
)ee8 9
)ee9 :
throwff 
newff 
ValidationExceptionff -
(ff- .
$"ff. 0
$strff0 k
{ffk l
projectffl s
.ffs t
ProjectNamefft 
}	ff Ä
$str
ffÄ Ç
"
ffÇ É
)
ffÉ Ñ
;
ffÑ Ö
ifgg 
(gg 
!gg 
Regexgg 
.gg 
IsMatchgg 
(gg 
projectgg &
.gg& '
ProjectNamegg' 2
,gg2 3
$strgg4 H
)ggH I
)ggI J
throwhh 
newhh 
ValidationExceptionhh -
(hh- .
$"hh. 0
$str	hh0 Ü
{
hhÜ á
project
hhá é
.
hhé è
ProjectName
hhè ö
}
hhö õ
$str
hhõ ù
"
hhù û
)
hhû ü
;
hhü †
ifkk 
(kk 
stringkk 
.kk 
IsNullOrEmptykk $
(kk$ %
projectkk% ,
.kk, -
ProjectDescriptionkk- ?
)kk? @
)kk@ A
throwll 
newll 
ValidationExceptionll -
(ll- .
$"ll. 0
$strll0 {
{ll{ |
project	ll| É
.
llÉ Ñ 
ProjectDescription
llÑ ñ
}
llñ ó
$str
lló ô
"
llô ö
)
llö õ
;
llõ ú
ifmm 
(mm 
!mm 
Regexmm 
.mm 
IsMatchmm 
(mm 
projectmm &
.mm& '
ProjectDescriptionmm' 9
,mm9 :
$strmm: N
)mmN O
)mmO P
thrownn 
newnn 
ValidationExceptionnn -
(nn- .
$"nn. 0
$strnn0 {
{nn{ |
project	nn| É
.
nnÉ Ñ 
ProjectDescription
nnÑ ñ
}
nnñ ó
$str
nnó ô
"
nnô ö
)
nnö õ
;
nnõ ú
ifuu 
(uu 
!uu 
Regexuu 
.uu 
IsMatchuu 
(uu 
projectuu &
.uu& '
Designationuu' 2
!uu2 3
,uu3 4
$struu5 I
)uuI J
)uuJ K
throwvv 
newvv 
ValidationExceptionvv -
(vv- .
$"vv. 0
$str	vv0 é
{
vvé è
project
vvè ñ
.
vvñ ó
Designation
vvó ¢
}
vv¢ £
$str
vv£ •
"
vv• ¶
)
vv¶ ß
;
vvß ®
ifzz 
(zz 
stringzz 
.zz 
IsNullOrEmptyzz $
(zz$ %
projectzz% ,
.zz, -
	ToolsUsedzz- 6
)zz6 7
)zz7 8
throw{{ 
new{{ 
ValidationException{{ -
({{- .
$"{{. 0
$str{{0 g
{{{g h
project{{h o
.{{o p
	ToolsUsed{{p y
}{{y z
$str{{z |
"{{| }
){{} ~
;{{~ 
if|| 
(|| 
!|| 
Regex|| 
.|| 
IsMatch|| 
(|| 
project|| &
.||& '
	ToolsUsed||' 0
,||0 1
$str||2 G
)||G H
)||H I
throw}} 
new}} 
ValidationException}} -
(}}- .
$"}}. 0
$str}}0 z
{}}z {
project	}}{ Ç
.
}}Ç É
	ToolsUsed
}}É å
}
}}å ç
$str
}}ç è
"
}}è ê
)
}}ê ë
;
}}ë í
if
ÄÄ 
(
ÄÄ 
string
ÄÄ 
.
ÄÄ 
IsNullOrEmpty
ÄÄ $
(
ÄÄ$ %
(
ÄÄ% &
project
ÄÄ& -
.
ÄÄ- .
StartingMonth
ÄÄ. ;
!
ÄÄ; <
)
ÄÄ< =
.
ÄÄ= >
ToString
ÄÄ> F
(
ÄÄF G
)
ÄÄG H
)
ÄÄH I
)
ÄÄI J
throw
ÅÅ 
new
ÅÅ !
ValidationException
ÅÅ -
(
ÅÅ- .
$"
ÅÅ. 0
$str
ÅÅ0 p
{
ÅÅp q
project
ÅÅq x
.
ÅÅx y
StartingMonthÅÅy Ü
}ÅÅÜ á
$strÅÅá â
"ÅÅâ ä
)ÅÅä ã
;ÅÅã å
if
ÇÇ 
(
ÇÇ 
!
ÇÇ 
Regex
ÇÇ 
.
ÇÇ 
IsMatch
ÇÇ 
(
ÇÇ 
project
ÇÇ &
.
ÇÇ& '
StartingMonth
ÇÇ' 4
,
ÇÇ4 5
$str
ÇÇ6 G
)
ÇÇG H
)
ÇÇH I
throw
ÉÉ 
new
ÉÉ !
ValidationException
ÉÉ -
(
ÉÉ- .
$"
ÉÉ. 0
$str
ÉÉ0 L
{
ÉÉL M
project
ÉÉM T
.
ÉÉT U
StartingMonth
ÉÉU b
}
ÉÉb c
$str
ÉÉc e
"
ÉÉe f
)
ÉÉf g
;
ÉÉg h
if
áá 
(
áá 
string
áá 
.
áá 
IsNullOrEmpty
áá $
(
áá$ %
(
áá% &
project
áá& -
.
áá- .
EndingMonth
áá. 9
!
áá9 :
)
áá: ;
.
áá; <
ToString
áá< D
(
ááD E
)
ááE F
)
ááF G
)
ááG H
throw
àà 
new
àà !
ValidationException
àà -
(
àà- .
$"
àà. 0
$str
àà0 l
{
ààl m
project
ààm t
.
ààt u
EndingMonthààu Ä
}ààÄ Å
$strààÅ É
"ààÉ Ñ
)ààÑ Ö
;ààÖ Ü
if
ââ 
(
ââ 
!
ââ 
Regex
ââ 
.
ââ 
IsMatch
ââ 
(
ââ 
project
ââ &
.
ââ& '
EndingMonth
ââ' 2
,
ââ2 3
$str
ââ4 E
)
ââE F
)
ââF G
throw
ää 
new
ää !
ValidationException
ää -
(
ää- .
$"
ää. 0
$str
ää0 J
{
ääJ K
project
ääK R
.
ääR S
EndingMonth
ääS ^
}
ää^ _
$str
ää_ a
"
ääa b
)
ääb c
;
ääc d
if
çç 
(
çç 
string
çç 
.
çç 
IsNullOrEmpty
çç $
(
çç$ %
(
çç% &
project
çç& -
.
çç- .
StartingYear
çç. :
)
çç: ;
.
çç; <
ToString
çç< D
(
ççD E
)
ççE F
)
ççF G
||
ççG I
(
ççI J
project
ççJ Q
.
ççQ R
StartingYear
ççR ^
.
çç^ _
Equals
çç_ e
(
ççe f
$num
ççf g
)
ççg h
)
ççh i
)
ççi j
throw
éé 
new
éé !
ValidationException
éé -
(
éé- .
$"
éé. 0
$str
éé0 n
{
één o
project
ééo v
.
éév w
StartingYearééw É
}ééÉ Ñ
$strééÑ Ü
"ééÜ á
)ééá à
;ééà â
if
èè 
(
èè 
project
èè 
.
èè 
StartingYear
èè $
.
èè$ %
Equals
èè% +
(
èè+ ,
DateTime
èè, 4
.
èè4 5
Today
èè5 :
.
èè: ;
Year
èè; ?
)
èè? @
||
èèA C
project
èèD K
.
èèK L
StartingYear
èèL X
>
èèY Z
DateTime
èè[ c
.
èèc d
Today
èèd i
.
èèi j
Year
èèj n
)
èèn o
throw
êê 
new
êê !
ValidationException
êê -
(
êê- .
$"
êê. 0
$strêê0 Ö
{êêÖ Ü
projectêêÜ ç
.êêç é
StartingYearêêé ö
}êêö õ
$strêêõ ù
"êêù û
)êêû ü
;êêü †
if
ìì 
(
ìì 
(
ìì 
project
ìì 
.
ìì 

EndingYear
ìì #
>
ìì$ %
DateTime
ìì& .
.
ìì. /
Today
ìì/ 4
.
ìì4 5
Year
ìì5 9
)
ìì9 :
||
ìì; =
(
ìì> ?
project
ìì? F
.
ììF G

EndingYear
ììG Q
<
ììR S
project
ììT [
.
ìì[ \
StartingYear
ìì\ h
)
ììh i
)
ììi j
throw
îî 
new
îî !
ValidationException
îî -
(
îî- .
$"
îî. 0
$str
îî0 j
{
îîj k
project
îîk r
.
îîr s

EndingYear
îîs }
}
îî} ~
$strîî~ Ä
"îîÄ Å
)îîÅ Ç
;îîÇ É
return
ññ 
true
ññ 
;
ññ 
}
óó 	
public
òò 
bool
òò )
SocialMediaDetailValidation
òò /
(
òò/ 0
SocialMedia
òò0 ;
socialmedia
òò< G
)
òòG H
{
ôô 	
if
öö 
(
öö 
string
öö 
.
öö 
IsNullOrEmpty
öö $
(
öö$ %
socialmedia
öö% 0
.
öö0 1
SocialMedia_Name
öö1 A
)
ööA B
)
ööB C
throw
õõ 
new
õõ !
ValidationException
õõ -
(
õõ- .
$"
õõ. 0
$str
õõ0 u
{
õõu v
socialmediaõõv Å
.õõÅ Ç 
SocialMedia_NameõõÇ í
}õõí ì
$strõõì ï
"õõï ñ
)õõñ ó
;õõó ò
if
úú 
(
úú 
!
úú 
Regex
úú 
.
úú 
IsMatch
úú 
(
úú 
socialmedia
úú *
.
úú* +
SocialMedia_Name
úú+ ;
,
úú; <
$str
úú= P
)
úúP Q
)
úúQ R
throw
ùù 
new
ùù !
ValidationException
ùù -
(
ùù- .
$"
ùù. 0
$str
ùù0 O
{
ùùO P
socialmedia
ùùP [
.
ùù[ \
SocialMedia_Name
ùù\ l
}
ùùl m
$str
ùùm o
"
ùùo p
)
ùùp q
;
ùùq r
if
ûû 
(
ûû 
string
ûû 
.
ûû 
IsNullOrEmpty
ûû $
(
ûû$ %
socialmedia
ûû% 0
.
ûû0 1
SocialMedia_Link
ûû1 A
)
ûûA B
)
ûûB C
throw
üü 
new
üü !
ValidationException
üü -
(
üü- .
$"
üü. 0
$str
üü0 u
{
üüu v
socialmediaüüv Å
.üüÅ Ç 
SocialMedia_LinküüÇ í
}üüí ì
$strüüì ï
"üüï ñ
)üüñ ó
;üüó ò
else
†† 
if
†† 
(
†† 
Regex
†† 
.
†† 
IsMatch
†† "
(
††" #
socialmedia
††# .
.
††. /
SocialMedia_Link
††/ ?
,
††? @
$str
††A _
)
††_ `
)
††` a
throw
°° 
new
°° !
ValidationException
°° -
(
°°- .
$"
°°. 0
$str
°°0 t
{
°°t u
socialmedia°°u Ä
.°°Ä Å 
SocialMedia_Link°°Å ë
}°°ë í
$str°°í ï
"°°ï ñ
)°°ñ ó
;°°ó ò
return
¢¢ 
true
¢¢ 
;
¢¢ 
}
££ 	
public
•• 
bool
••  
languageValidation
•• &
(
••& '
Language
••' /
language
••0 8
)
••8 9
{
¶¶ 	
if
ßß 
(
ßß 
string
ßß 
.
ßß 
IsNullOrEmpty
ßß $
(
ßß$ %
language
ßß% -
.
ßß- .
LanguageName
ßß. :
)
ßß: ;
)
ßß; <
throw
®® 
new
®® !
ValidationException
®® -
(
®®- .
$"
®®. 0
$str
®®0 p
{
®®p q
language
®®q y
.
®®y z
LanguageName®®z Ü
}®®Ü á
$str®®á â
"®®â ä
)®®ä ã
;®®ã å
else
©© 
if
©© 
(
©© 
!
©© 
Regex
©© 
.
©© 
IsMatch
©© #
(
©©# $
language
©©$ ,
.
©©, -
LanguageName
©©- 9
,
©©9 :
$str
©©; L
)
©©L M
)
©©M N
throw
™™ 
new
™™ !
ValidationException
™™ -
(
™™- .
$"
™™. 0
$str
™™0 g
{
™™g h
language
™™h p
.
™™p q
LanguageName
™™q }
}
™™} ~
$str™™~ Ä
"™™Ä Å
)™™Å Ç
;™™Ç É
if
¨¨ 
(
¨¨ 
string
¨¨ 
.
¨¨ 
IsNullOrEmpty
¨¨ $
(
¨¨$ %
language
¨¨% -
.
¨¨- .
Read
¨¨. 2
.
¨¨2 3
ToString
¨¨3 ;
(
¨¨; <
)
¨¨< =
)
¨¨= >
)
¨¨> ?
throw
≠≠ 
new
≠≠ !
ValidationException
≠≠ -
(
≠≠- .
$"
≠≠. 0
$str
≠≠0 d
{
≠≠d e
language
≠≠e m
.
≠≠m n
Read
≠≠n r
}
≠≠r s
$str
≠≠s u
"
≠≠u v
)
≠≠v w
;
≠≠w x
if
ÆÆ 
(
ÆÆ 
string
ÆÆ 
.
ÆÆ 
IsNullOrEmpty
ÆÆ $
(
ÆÆ$ %
language
ÆÆ% -
.
ÆÆ- .
Write
ÆÆ. 3
.
ÆÆ3 4
ToString
ÆÆ4 <
(
ÆÆ< =
)
ÆÆ= >
)
ÆÆ> ?
)
ÆÆ? @
throw
ØØ 
new
ØØ !
ValidationException
ØØ -
(
ØØ- .
$"
ØØ. 0
$str
ØØ0 f
{
ØØf g
language
ØØg o
.
ØØo p
Write
ØØp u
}
ØØu v
$str
ØØv x
"
ØØx y
)
ØØy z
;
ØØz {
if
∞∞ 
(
∞∞ 
string
∞∞ 
.
∞∞ 
IsNullOrEmpty
∞∞ $
(
∞∞$ %
language
∞∞% -
.
∞∞- .
Speak
∞∞. 3
.
∞∞3 4
ToString
∞∞4 <
(
∞∞< =
)
∞∞= >
)
∞∞> ?
)
∞∞? @
throw
±± 
new
±± !
ValidationException
±± -
(
±±- .
$"
±±. 0
$str
±±0 f
{
±±f g
language
±±g o
.
±±o p
Speak
±±p u
}
±±u v
$str
±±v x
"
±±x y
)
±±y z
;
±±z {
return
≤≤ 
true
≤≤ 
;
≤≤ 
}
≥≥ 	
public
¥¥ 
bool
¥¥ #
AchievementValidation
¥¥ )
(
¥¥) *
Achievements
¥¥* 6
achievement
¥¥7 B
)
¥¥B C
{
µµ 	
if
∂∂ 
(
∂∂ 
string
∂∂ 
.
∂∂ 
IsNullOrEmpty
∂∂ $
(
∂∂$ %
achievement
∂∂% 0
.
∂∂0 1
AchievementTypeId
∂∂1 B
.
∂∂B C
ToString
∂∂C K
(
∂∂K L
)
∂∂L M
)
∂∂M N
||
∂∂O Q
achievement
∂∂R ]
.
∂∂] ^
AchievementTypeId
∂∂^ o
.
∂∂o p
Equals
∂∂p v
(
∂∂v w
$num
∂∂w x
)
∂∂x y
||
∂∂z |
achievement∂∂} à
.∂∂à â!
AchievementTypeId∂∂â ö
.∂∂ö õ
Equals∂∂õ °
(∂∂° ¢
$str∂∂¢ §
)∂∂§ •
)∂∂• ¶
throw
∑∑ 
new
∑∑ !
ValidationException
∑∑ -
(
∑∑- .
$"
∑∑. 0
$str
∑∑0 |
{
∑∑| }
achievement∑∑} à
.∑∑à â
AchievementId∑∑â ñ
}∑∑ñ ó
$str∑∑ó ô
"∑∑ô ö
)∑∑ö õ
;∑∑õ ú
return
∏∏ 
true
∏∏ 
;
∏∏ 
}
ππ 	
private
∫∫ 
bool
∫∫ $
DateOfBirthAgeValidate
∫∫ +
(
∫∫+ ,
DateTime
∫∫, 4
DateOfBirth
∫∫5 @
)
∫∫@ A
{
ªª 	
var
ºº 
age
ºº 
=
ºº 
DateTime
ºº 
.
ºº 
Now
ºº "
.
ºº" #
AddYears
ºº# +
(
ºº+ ,
-
ºº, -
DateOfBirth
ºº- 8
.
ºº8 9
Year
ºº9 =
)
ºº= >
.
ºº> ?
Year
ºº? C
;
ººC D
if
ΩΩ 
(
ΩΩ 
age
ΩΩ 
>=
ΩΩ 
$num
ΩΩ 
&&
ΩΩ 
age
ΩΩ  
<=
ΩΩ! #
$num
ΩΩ# %
)
ΩΩ% &
return
ææ 
true
ææ 
;
ææ 
return
øø 
false
øø 
;
øø 
}
¿¿ 	
}
¬¬ 
}√√ ë2
VC:\Users\yoga.govind\Documents\GitHub\PMS\Source\PMS.API\Validations\UserValidation.cs
	namespace 	
PMS_API
 
{ 
public 

class 
UserValidation 
{ 
public 
bool 
userValidate  
(  !
User! %
user& *
)* +
{+ ,
if		 
(		 
string		 
.		 
IsNullOrEmpty		 #
(		# $
user		$ (
.		( )
Name		) -
)		- .
)		. /
throw

 
new

 
ValidationException

 -
(

- .
$"

. 0
$str

0 _
{

_ `
user

` d
.

d e
Name

e i
}

i j
"

j k
)

k l
;

l m
if 
( 
! 
Regex 
. 
IsMatch 
( 
user "
." #
Name# '
,' (
$str) ]
)] ^
)^ _
throw 
new 
ValidationException -
(- .
$". 0
$str	0 ∞
{
∞ ±
user
± µ
.
µ ∂
Name
∂ ∫
}
∫ ª
"
ª º
)
º Ω
;
Ω æ
if 
( 
user 
. 
Name 
. 
Length 
<  
$num  !
)! "
throw 
new 
ValidationException -
(- .
$". 0
$str0 d
{d e
usere i
.i j
Namej n
}n o
"o p
)p q
;q r
if 
( 
user 
. 
Name 
. 
Length 
>  
$num  "
)" #
throw 
new 
ValidationException -
(- .
$". 0
$str0 h
{h i
useri m
.m n
Namen r
}r s
"s t
)t u
;u v
if 
( 
string 
. 
IsNullOrEmpty #
(# $
user$ (
.( )
Email) .
). /
)/ 0
throw 
new 
ValidationException -
(- .
$". 0
$str0 ]
{] ^
user^ b
.b c
Emailc h
}h i
"i j
)j k
;k l
if 
( 
! 
Regex 
. 
IsMatch 
( 
user "
." #
Email# (
,( )
$str) i
)i j
)j k
throw 
new 
ValidationException -
(- .
$". 0
$str0 e
{e f
userf j
.j k
Emailk p
}p q
"q r
)r s
;s t
if 
( 
string 
. 
IsNullOrEmpty #
(# $
user$ (
.( )
UserName) 1
)1 2
)2 3
throw 
new 
ValidationException -
(- .
$". 0
$str0 c
{c d
userd h
.h i
UserNamei q
}q r
"r s
)s t
;t u
if 
( 
! 
Regex 
. 
IsMatch 
( 
user "
." #
UserName# +
,+ ,
$str- C
)C D
)D E
throw 
new 
ValidationException -
(- .
$". 0
$str0 c
{c d
userd h
.h i
UserNamei q
}q r
"r s
)s t
;t u
if 
( 
string 
. 
IsNullOrEmpty #
(# $
user$ (
.( )
Password) 1
)1 2
)2 3
throw 
new 
ValidationException -
(- .
$". 0
$str0 c
{c d
userd h
.h i
Passwordi q
}q r
"r s
)s t
;t u
if 
( 
! 
Regex 
. 
IsMatch 
( 
user "
." #
Password# +
,+ ,
$str- n
)n o
)o p
throw 
new 
ValidationException -
(- .
$". 0
$str	0 –
{
– —
user
— ’
.
’ ÷
Password
÷ ﬁ
}
ﬁ ﬂ
"
ﬂ ‡
)
‡ ·
;
· ‚
if 
( 
string 
. 
IsNullOrEmpty #
(# $
user$ (
.( )
MobileNumber) 5
)5 6
)6 7
throw   
new   
ValidationException   -
(  - .
$"  . 0
$str  0 m
{  m n
user  n r
.  r s
MobileNumber  s 
}	   Ä
"
  Ä Å
)
  Å Ç
;
  Ç É
if!! 
(!! 
!!! 
Regex!! 
.!! 
IsMatch!! 
(!! 
user!! "
.!!" #
MobileNumber!!# /
,!!/ 0
$str!!0 L
)!!L M
)!!M N
throw"" 
new"" 
ValidationException"" -
(""- .
$""". 0
$str""0 p
{""p q
user""q u
.""u v
MobileNumber	""v Ç
}
""Ç É
"
""É Ñ
)
""Ñ Ö
;
""Ö Ü
if'' 
('' 
string'' 
.'' 
IsNullOrEmpty'' #
(''# $
user''$ (
.''( )#
ReportingPersonUsername'') @
)''@ A
)''A B
throw(( 
new(( 
ValidationException(( -
(((- .
$"((. 0
$str((0 s
{((s t
user((t x
.((x y$
ReportingPersonUsername	((y ê
}
((ê ë
"
((ë í
)
((í ì
;
((ì î
return)) 
true)) 
;)) 
}++ 	
},, 
}-- 